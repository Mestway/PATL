package com.fray.evo.fitness;
import com.fray.evo.EcState;
public final class EcEconFitness implements EcFitness {
  public double augmentScore(  EcState current,  EcState destination,  double score,  boolean waypoint){
    EcState c;
    c=current;
    EcEconFitness genVar2677;
    genVar2677=this;
    int genVar2678;
    genVar2678=c.getDrones();
    int genVar2679;
    genVar2679=destination.getDrones();
    int genVar2680;
    genVar2680=c.bases();
    int genVar2681;
    genVar2681=30;
    int genVar2682;
    genVar2682=genVar2680 * genVar2681;
    int genVar2683;
    genVar2683=50;
    int genVar2684;
    genVar2684=4;
    score=genVar2677.augmentCappedScore(score,genVar2678,genVar2679,genVar2682,genVar2683,genVar2684,waypoint);
    EcEconFitness genVar2685;
    genVar2685=this;
    int genVar2686;
    genVar2686=c.getZerglings();
    int genVar2687;
    genVar2687=destination.getZerglings();
    int genVar2688;
    genVar2688=25;
    double genVar2689;
    genVar2689=.25;
    score=genVar2685.augmentScore(score,genVar2686,genVar2687,genVar2688,genVar2689,waypoint);
    EcEconFitness genVar2690;
    genVar2690=this;
    int genVar2691;
    genVar2691=c.getBanelings();
    int genVar2692;
    genVar2692=destination.getBanelings();
    int genVar2693;
    genVar2693=75;
    double genVar2694;
    genVar2694=.75;
    score=genVar2690.augmentScore(score,genVar2691,genVar2692,genVar2693,genVar2694,waypoint);
    EcEconFitness genVar2695;
    genVar2695=this;
    int genVar2696;
    genVar2696=c.getRoaches();
    int genVar2697;
    genVar2697=destination.getRoaches();
    int genVar2698;
    genVar2698=100;
    double genVar2699;
    genVar2699=1.0;
    score=genVar2695.augmentScore(score,genVar2696,genVar2697,genVar2698,genVar2699,waypoint);
    EcEconFitness genVar2700;
    genVar2700=this;
    int genVar2701;
    genVar2701=c.getMutalisks();
    int genVar2702;
    genVar2702=destination.getMutalisks();
    int genVar2703;
    genVar2703=200;
    double genVar2704;
    genVar2704=2.0;
    score=genVar2700.augmentScore(score,genVar2701,genVar2702,genVar2703,genVar2704,waypoint);
    EcEconFitness genVar2705;
    genVar2705=this;
    int genVar2706;
    genVar2706=c.getQueens();
    int genVar2707;
    genVar2707=destination.getQueens();
    int genVar2708;
    genVar2708=c.bases();
    int genVar2709;
    genVar2709=2;
    int genVar2710;
    genVar2710=genVar2708 * genVar2709;
    int genVar2711;
    genVar2711=150;
    double genVar2712;
    genVar2712=2.5;
    score=genVar2705.augmentCappedScore(score,genVar2706,genVar2707,genVar2710,genVar2711,genVar2712,waypoint);
    EcEconFitness genVar2713;
    genVar2713=this;
    int genVar2714;
    genVar2714=c.getHydralisks();
    int genVar2715;
    genVar2715=destination.getHydralisks();
    int genVar2716;
    genVar2716=150;
    double genVar2717;
    genVar2717=1.5;
    score=genVar2713.augmentScore(score,genVar2714,genVar2715,genVar2716,genVar2717,waypoint);
    EcEconFitness genVar2718;
    genVar2718=this;
    int genVar2719;
    genVar2719=c.getInfestors();
    int genVar2720;
    genVar2720=destination.getInfestors();
    int genVar2721;
    genVar2721=250;
    double genVar2722;
    genVar2722=2.5;
    score=genVar2718.augmentScore(score,genVar2719,genVar2720,genVar2721,genVar2722,waypoint);
    EcEconFitness genVar2723;
    genVar2723=this;
    int genVar2724;
    genVar2724=c.getCorruptors();
    int genVar2725;
    genVar2725=destination.getCorruptors();
    int genVar2726;
    genVar2726=250;
    double genVar2727;
    genVar2727=2.5;
    score=genVar2723.augmentScore(score,genVar2724,genVar2725,genVar2726,genVar2727,waypoint);
    EcEconFitness genVar2728;
    genVar2728=this;
    int genVar2729;
    genVar2729=c.getUltralisks();
    int genVar2730;
    genVar2730=destination.getUltralisks();
    int genVar2731;
    genVar2731=500;
    double genVar2732;
    genVar2732=5.0;
    score=genVar2728.augmentScore(score,genVar2729,genVar2730,genVar2731,genVar2732,waypoint);
    EcEconFitness genVar2733;
    genVar2733=this;
    int genVar2734;
    genVar2734=c.getBroodlords();
    int genVar2735;
    genVar2735=destination.getBroodlords();
    int genVar2736;
    genVar2736=400;
    double genVar2737;
    genVar2737=4.0;
    score=genVar2733.augmentScore(score,genVar2734,genVar2735,genVar2736,genVar2737,waypoint);
    EcEconFitness genVar2738;
    genVar2738=this;
    int genVar2739;
    genVar2739=c.getOverlords();
    int genVar2740;
    genVar2740=destination.getOverlords();
    int genVar2741;
    genVar2741=25;
    int genVar2742;
    genVar2742=100;
    double genVar2743;
    genVar2743=1.8;
    score=genVar2738.augmentCappedScore(score,genVar2739,genVar2740,genVar2741,genVar2742,genVar2743,waypoint);
    EcEconFitness genVar2744;
    genVar2744=this;
    int genVar2745;
    genVar2745=c.getOverseers();
    int genVar2746;
    genVar2746=destination.getOverseers();
    int genVar2747;
    genVar2747=250;
    double genVar2748;
    genVar2748=2.5;
    score=genVar2744.augmentScore(score,genVar2745,genVar2746,genVar2747,genVar2748,waypoint);
    EcEconFitness genVar2749;
    genVar2749=this;
    int genVar2750;
    genVar2750=c.getGasExtractors();
    int genVar2751;
    genVar2751=destination.getGasExtractors();
    int genVar2752;
    genVar2752=25;
    double genVar2753;
    genVar2753=1.5;
    score=genVar2749.augmentScore(score,genVar2750,genVar2751,genVar2752,genVar2753,waypoint);
    EcEconFitness genVar2754;
    genVar2754=this;
    int genVar2755;
    genVar2755=c.getHatcheries();
    int genVar2756;
    genVar2756=destination.getHatcheries();
    int genVar2757;
    genVar2757=300;
    double genVar2758;
    genVar2758=4.5;
    score=genVar2754.augmentDropoffScore(score,genVar2755,genVar2756,genVar2757,genVar2758,waypoint);
    EcEconFitness genVar2759;
    genVar2759=this;
    int genVar2760;
    genVar2760=c.getLairs();
    int genVar2761;
    genVar2761=destination.getLairs();
    int genVar2762;
    genVar2762=550;
    double genVar2763;
    genVar2763=5.5;
    score=genVar2759.augmentDropoffScore(score,genVar2760,genVar2761,genVar2762,genVar2763,waypoint);
    EcEconFitness genVar2764;
    genVar2764=this;
    int genVar2765;
    genVar2765=c.getHives();
    int genVar2766;
    genVar2766=destination.getHives();
    int genVar2767;
    genVar2767=900;
    int genVar2768;
    genVar2768=9;
    score=genVar2764.augmentDropoffScore(score,genVar2765,genVar2766,genVar2767,genVar2768,waypoint);
    EcEconFitness genVar2769;
    genVar2769=this;
    int genVar2770;
    genVar2770=c.getSpawningPools();
    int genVar2771;
    genVar2771=destination.getSpawningPools();
    int genVar2772;
    genVar2772=200;
    int genVar2773;
    genVar2773=2;
    score=genVar2769.augmentDropoffScore(score,genVar2770,genVar2771,genVar2772,genVar2773,waypoint);
    EcEconFitness genVar2774;
    genVar2774=this;
    int genVar2775;
    genVar2775=c.getRoachWarrens();
    int genVar2776;
    genVar2776=destination.getRoachWarrens();
    int genVar2777;
    genVar2777=150;
    double genVar2778;
    genVar2778=1.5;
    score=genVar2774.augmentDropoffScore(score,genVar2775,genVar2776,genVar2777,genVar2778,waypoint);
    EcEconFitness genVar2779;
    genVar2779=this;
    int genVar2780;
    genVar2780=c.getHydraliskDen();
    int genVar2781;
    genVar2781=destination.getHydraliskDen();
    int genVar2782;
    genVar2782=200;
    int genVar2783;
    genVar2783=2;
    score=genVar2779.augmentDropoffScore(score,genVar2780,genVar2781,genVar2782,genVar2783,waypoint);
    EcEconFitness genVar2784;
    genVar2784=this;
    int genVar2785;
    genVar2785=c.getBanelingNest();
    int genVar2786;
    genVar2786=destination.getBanelingNest();
    int genVar2787;
    genVar2787=150;
    double genVar2788;
    genVar2788=1.5;
    score=genVar2784.augmentDropoffScore(score,genVar2785,genVar2786,genVar2787,genVar2788,waypoint);
    EcEconFitness genVar2789;
    genVar2789=this;
    int genVar2790;
    genVar2790=c.getGreaterSpire();
    int genVar2791;
    genVar2791=destination.getGreaterSpire();
    int genVar2792;
    genVar2792=650;
    double genVar2793;
    genVar2793=6.5;
    score=genVar2789.augmentDropoffScore(score,genVar2790,genVar2791,genVar2792,genVar2793,waypoint);
    EcEconFitness genVar2794;
    genVar2794=this;
    int genVar2795;
    genVar2795=c.getUltraliskCavern();
    int genVar2796;
    genVar2796=destination.getUltraliskCavern();
    int genVar2797;
    genVar2797=350;
    double genVar2798;
    genVar2798=3.5;
    score=genVar2794.augmentDropoffScore(score,genVar2795,genVar2796,genVar2797,genVar2798,waypoint);
    EcEconFitness genVar2799;
    genVar2799=this;
    int genVar2800;
    genVar2800=c.getSpire();
    int genVar2801;
    genVar2801=destination.getSpire();
    int genVar2802;
    genVar2802=400;
    int genVar2803;
    genVar2803=4;
    score=genVar2799.augmentDropoffScore(score,genVar2800,genVar2801,genVar2802,genVar2803,waypoint);
    EcEconFitness genVar2804;
    genVar2804=this;
    int genVar2805;
    genVar2805=c.getInfestationPit();
    int genVar2806;
    genVar2806=destination.getInfestationPit();
    int genVar2807;
    genVar2807=200;
    double genVar2808;
    genVar2808=2.0;
    score=genVar2804.augmentDropoffScore(score,genVar2805,genVar2806,genVar2807,genVar2808,waypoint);
    EcEconFitness genVar2809;
    genVar2809=this;
    int genVar2810;
    genVar2810=c.getEvolutionChambers();
    int genVar2811;
    genVar2811=destination.getEvolutionChambers();
    int genVar2812;
    genVar2812=75;
    double genVar2813;
    genVar2813=0.75;
    score=genVar2809.augmentDropoffScore(score,genVar2810,genVar2811,genVar2812,genVar2813,waypoint);
    EcEconFitness genVar2814;
    genVar2814=this;
    int genVar2815;
    genVar2815=c.getSpineCrawlers();
    int genVar2816;
    genVar2816=destination.getSpineCrawlers();
    int genVar2817;
    genVar2817=100;
    double genVar2818;
    genVar2818=1.00;
    score=genVar2814.augmentScore(score,genVar2815,genVar2816,genVar2817,genVar2818,waypoint);
    EcEconFitness genVar2819;
    genVar2819=this;
    int genVar2820;
    genVar2820=c.getSporeCrawlers();
    int genVar2821;
    genVar2821=destination.getSporeCrawlers();
    int genVar2822;
    genVar2822=75;
    double genVar2823;
    genVar2823=.75;
    score=genVar2819.augmentScore(score,genVar2820,genVar2821,genVar2822,genVar2823,waypoint);
    EcEconFitness genVar2824;
    genVar2824=this;
    int genVar2825;
    genVar2825=c.getNydusNetwork();
    int genVar2826;
    genVar2826=destination.getNydusNetwork();
    int genVar2827;
    genVar2827=350;
    double genVar2828;
    genVar2828=3.00;
    score=genVar2824.augmentDropoffScore(score,genVar2825,genVar2826,genVar2827,genVar2828,waypoint);
    EcEconFitness genVar2829;
    genVar2829=this;
    int genVar2830;
    genVar2830=c.getNydusWorm();
    int genVar2831;
    genVar2831=destination.getNydusWorm();
    int genVar2832;
    genVar2832=200;
    double genVar2833;
    genVar2833=2.00;
    score=genVar2829.augmentScore(score,genVar2830,genVar2831,genVar2832,genVar2833,waypoint);
    EcEconFitness genVar2834;
    genVar2834=this;
    boolean genVar2835;
    genVar2835=c.isMetabolicBoost();
    boolean genVar2836;
    genVar2836=destination.isMetabolicBoost();
    int genVar2837;
    genVar2837=200;
    double genVar2838;
    genVar2838=2.0;
    score=genVar2834.augmentScore(score,genVar2835,genVar2836,genVar2837,genVar2838,waypoint);
    EcEconFitness genVar2839;
    genVar2839=this;
    boolean genVar2840;
    genVar2840=c.isAdrenalGlands();
    boolean genVar2841;
    genVar2841=destination.isAdrenalGlands();
    int genVar2842;
    genVar2842=400;
    double genVar2843;
    genVar2843=4.0;
    score=genVar2839.augmentScore(score,genVar2840,genVar2841,genVar2842,genVar2843,waypoint);
    EcEconFitness genVar2844;
    genVar2844=this;
    boolean genVar2845;
    genVar2845=c.isGlialReconstitution();
    boolean genVar2846;
    genVar2846=destination.isGlialReconstitution();
    int genVar2847;
    genVar2847=200;
    double genVar2848;
    genVar2848=2.0;
    score=genVar2844.augmentScore(score,genVar2845,genVar2846,genVar2847,genVar2848,waypoint);
    EcEconFitness genVar2849;
    genVar2849=this;
    boolean genVar2850;
    genVar2850=c.isTunnelingClaws();
    boolean genVar2851;
    genVar2851=destination.isTunnelingClaws();
    int genVar2852;
    genVar2852=300;
    double genVar2853;
    genVar2853=3.0;
    score=genVar2849.augmentScore(score,genVar2850,genVar2851,genVar2852,genVar2853,waypoint);
    EcEconFitness genVar2854;
    genVar2854=this;
    boolean genVar2855;
    genVar2855=c.isBurrow();
    boolean genVar2856;
    genVar2856=destination.isBurrow();
    int genVar2857;
    genVar2857=200;
    double genVar2858;
    genVar2858=2.0;
    score=genVar2854.augmentScore(score,genVar2855,genVar2856,genVar2857,genVar2858,waypoint);
    EcEconFitness genVar2859;
    genVar2859=this;
    boolean genVar2860;
    genVar2860=c.isPneumatizedCarapace();
    boolean genVar2861;
    genVar2861=destination.isPneumatizedCarapace();
    int genVar2862;
    genVar2862=200;
    double genVar2863;
    genVar2863=2.0;
    score=genVar2859.augmentScore(score,genVar2860,genVar2861,genVar2862,genVar2863,waypoint);
    EcEconFitness genVar2864;
    genVar2864=this;
    boolean genVar2865;
    genVar2865=c.isVentralSacs();
    boolean genVar2866;
    genVar2866=destination.isVentralSacs();
    int genVar2867;
    genVar2867=400;
    double genVar2868;
    genVar2868=4.0;
    score=genVar2864.augmentScore(score,genVar2865,genVar2866,genVar2867,genVar2868,waypoint);
    EcEconFitness genVar2869;
    genVar2869=this;
    boolean genVar2870;
    genVar2870=c.isCentrifugalHooks();
    boolean genVar2871;
    genVar2871=destination.isCentrifugalHooks();
    int genVar2872;
    genVar2872=300;
    double genVar2873;
    genVar2873=3.0;
    score=genVar2869.augmentScore(score,genVar2870,genVar2871,genVar2872,genVar2873,waypoint);
    EcEconFitness genVar2874;
    genVar2874=this;
    boolean genVar2875;
    genVar2875=c.isMelee1();
    boolean genVar2876;
    genVar2876=destination.isMelee1();
    int genVar2877;
    genVar2877=200;
    double genVar2878;
    genVar2878=2.0;
    score=genVar2874.augmentScore(score,genVar2875,genVar2876,genVar2877,genVar2878,waypoint);
    EcEconFitness genVar2879;
    genVar2879=this;
    boolean genVar2880;
    genVar2880=c.isMelee2();
    boolean genVar2881;
    genVar2881=destination.isMelee2();
    int genVar2882;
    genVar2882=300;
    double genVar2883;
    genVar2883=3.0;
    score=genVar2879.augmentScore(score,genVar2880,genVar2881,genVar2882,genVar2883,waypoint);
    EcEconFitness genVar2884;
    genVar2884=this;
    boolean genVar2885;
    genVar2885=c.isMelee3();
    boolean genVar2886;
    genVar2886=destination.isMelee3();
    int genVar2887;
    genVar2887=400;
    double genVar2888;
    genVar2888=4.0;
    score=genVar2884.augmentScore(score,genVar2885,genVar2886,genVar2887,genVar2888,waypoint);
    EcEconFitness genVar2889;
    genVar2889=this;
    boolean genVar2890;
    genVar2890=c.isMissile1();
    boolean genVar2891;
    genVar2891=destination.isMissile1();
    int genVar2892;
    genVar2892=200;
    double genVar2893;
    genVar2893=2.0;
    score=genVar2889.augmentScore(score,genVar2890,genVar2891,genVar2892,genVar2893,waypoint);
    EcEconFitness genVar2894;
    genVar2894=this;
    boolean genVar2895;
    genVar2895=c.isMissile2();
    boolean genVar2896;
    genVar2896=destination.isMissile2();
    int genVar2897;
    genVar2897=300;
    double genVar2898;
    genVar2898=3.0;
    score=genVar2894.augmentScore(score,genVar2895,genVar2896,genVar2897,genVar2898,waypoint);
    EcEconFitness genVar2899;
    genVar2899=this;
    boolean genVar2900;
    genVar2900=c.isMissile3();
    boolean genVar2901;
    genVar2901=destination.isMissile3();
    int genVar2902;
    genVar2902=400;
    double genVar2903;
    genVar2903=4.0;
    score=genVar2899.augmentScore(score,genVar2900,genVar2901,genVar2902,genVar2903,waypoint);
    EcEconFitness genVar2904;
    genVar2904=this;
    boolean genVar2905;
    genVar2905=c.isArmor1();
    boolean genVar2906;
    genVar2906=destination.isArmor1();
    int genVar2907;
    genVar2907=200;
    double genVar2908;
    genVar2908=3.0;
    score=genVar2904.augmentScore(score,genVar2905,genVar2906,genVar2907,genVar2908,waypoint);
    EcEconFitness genVar2909;
    genVar2909=this;
    boolean genVar2910;
    genVar2910=c.isArmor2();
    boolean genVar2911;
    genVar2911=destination.isArmor2();
    int genVar2912;
    genVar2912=300;
    double genVar2913;
    genVar2913=3.0;
    score=genVar2909.augmentScore(score,genVar2910,genVar2911,genVar2912,genVar2913,waypoint);
    EcEconFitness genVar2914;
    genVar2914=this;
    boolean genVar2915;
    genVar2915=c.isArmor3();
    boolean genVar2916;
    genVar2916=destination.isArmor3();
    int genVar2917;
    genVar2917=400;
    double genVar2918;
    genVar2918=3.0;
    score=genVar2914.augmentScore(score,genVar2915,genVar2916,genVar2917,genVar2918,waypoint);
    EcEconFitness genVar2919;
    genVar2919=this;
    boolean genVar2920;
    genVar2920=c.isGroovedSpines();
    boolean genVar2921;
    genVar2921=destination.isGroovedSpines();
    int genVar2922;
    genVar2922=300;
    double genVar2923;
    genVar2923=3.0;
    score=genVar2919.augmentScore(score,genVar2920,genVar2921,genVar2922,genVar2923,waypoint);
    EcEconFitness genVar2924;
    genVar2924=this;
    boolean genVar2925;
    genVar2925=c.isNeuralParasite();
    boolean genVar2926;
    genVar2926=destination.isNeuralParasite();
    int genVar2927;
    genVar2927=300;
    double genVar2928;
    genVar2928=3.0;
    score=genVar2924.augmentScore(score,genVar2925,genVar2926,genVar2927,genVar2928,waypoint);
    EcEconFitness genVar2929;
    genVar2929=this;
    boolean genVar2930;
    genVar2930=c.isPathogenGlands();
    boolean genVar2931;
    genVar2931=destination.isPathogenGlands();
    int genVar2932;
    genVar2932=300;
    double genVar2933;
    genVar2933=3.0;
    score=genVar2929.augmentScore(score,genVar2930,genVar2931,genVar2932,genVar2933,waypoint);
    EcEconFitness genVar2934;
    genVar2934=this;
    boolean genVar2935;
    genVar2935=c.isFlyerAttack1();
    boolean genVar2936;
    genVar2936=destination.isFlyerAttack1();
    int genVar2937;
    genVar2937=200;
    double genVar2938;
    genVar2938=2.0;
    score=genVar2934.augmentScore(score,genVar2935,genVar2936,genVar2937,genVar2938,waypoint);
    EcEconFitness genVar2939;
    genVar2939=this;
    boolean genVar2940;
    genVar2940=c.isFlyerAttack2();
    boolean genVar2941;
    genVar2941=destination.isFlyerAttack2();
    int genVar2942;
    genVar2942=350;
    double genVar2943;
    genVar2943=3.5;
    score=genVar2939.augmentScore(score,genVar2940,genVar2941,genVar2942,genVar2943,waypoint);
    EcEconFitness genVar2944;
    genVar2944=this;
    boolean genVar2945;
    genVar2945=c.isFlyerAttack3();
    boolean genVar2946;
    genVar2946=destination.isFlyerAttack3();
    int genVar2947;
    genVar2947=500;
    double genVar2948;
    genVar2948=5.0;
    score=genVar2944.augmentScore(score,genVar2945,genVar2946,genVar2947,genVar2948,waypoint);
    EcEconFitness genVar2949;
    genVar2949=this;
    boolean genVar2950;
    genVar2950=c.isFlyerArmor1();
    boolean genVar2951;
    genVar2951=destination.isFlyerArmor1();
    int genVar2952;
    genVar2952=300;
    double genVar2953;
    genVar2953=3.0;
    score=genVar2949.augmentScore(score,genVar2950,genVar2951,genVar2952,genVar2953,waypoint);
    EcEconFitness genVar2954;
    genVar2954=this;
    boolean genVar2955;
    genVar2955=c.isFlyerArmor2();
    boolean genVar2956;
    genVar2956=destination.isFlyerArmor2();
    int genVar2957;
    genVar2957=450;
    double genVar2958;
    genVar2958=4.5;
    score=genVar2954.augmentScore(score,genVar2955,genVar2956,genVar2957,genVar2958,waypoint);
    EcEconFitness genVar2959;
    genVar2959=this;
    boolean genVar2960;
    genVar2960=c.isFlyerArmor3();
    boolean genVar2961;
    genVar2961=destination.isFlyerArmor3();
    int genVar2962;
    genVar2962=600;
    double genVar2963;
    genVar2963=6.0;
    score=genVar2959.augmentScore(score,genVar2960,genVar2961,genVar2962,genVar2963,waypoint);
    EcEconFitness genVar2964;
    genVar2964=this;
    boolean genVar2965;
    genVar2965=c.isChitinousPlating();
    boolean genVar2966;
    genVar2966=destination.isChitinousPlating();
    int genVar2967;
    genVar2967=300;
    double genVar2968;
    genVar2968=3.0;
    score=genVar2964.augmentScore(score,genVar2965,genVar2966,genVar2967,genVar2968,waypoint);
    return score;
  }
  private double augmentScore(  double score,  boolean a,  boolean b,  int mula,  double mulb,  boolean waypoint){
    EcEconFitness genVar2969;
    genVar2969=this;
    int genVar2970;
    genVar2970=1;
    int genVar2971;
    genVar2971=0;
    int genVar2972;
    genVar2972=a ? genVar2970 : genVar2971;
    int genVar2973;
    genVar2973=1;
    int genVar2974;
    genVar2974=0;
    int genVar2975;
    genVar2975=b ? genVar2973 : genVar2974;
    double genVar2976;
    genVar2976=genVar2969.augmentScore(score,genVar2972,genVar2975,mula,mulb,waypoint);
    return genVar2976;
  }
  private double augmentCappedScore(  double score,  int a,  int b,  int maxa,  double mula,  double mulb,  boolean waypoint){
    int effective_a;
    effective_a=Math.min(maxa,a);
    int genVar2977;
    genVar2977=Math.min(effective_a,b);
    int genVar2978;
    genVar2978=0;
    int genVar2979;
    genVar2979=Math.max(genVar2977,genVar2978);
    score+=genVar2979 * mula;
    boolean genVar2980;
    genVar2980=!waypoint;
    if (genVar2980) {
      int genVar2981;
      genVar2981=effective_a - b;
      int genVar2982;
      genVar2982=0;
      int genVar2983;
      genVar2983=Math.max(genVar2981,genVar2982);
      score+=genVar2983 * mulb;
    }
 else {
      ;
    }
    return score;
  }
  private double augmentScore(  double score,  int a,  int b,  double mula,  double mulb,  boolean waypoint){
    int genVar2984;
    genVar2984=Math.min(a,b);
    int genVar2985;
    genVar2985=0;
    int genVar2986;
    genVar2986=Math.max(genVar2984,genVar2985);
    score+=genVar2986 * mula;
    boolean genVar2987;
    genVar2987=!waypoint;
    if (genVar2987) {
      int genVar2988;
      genVar2988=a - b;
      int genVar2989;
      genVar2989=0;
      int genVar2990;
      genVar2990=Math.max(genVar2988,genVar2989);
      score+=genVar2990 * mulb;
    }
 else {
      ;
    }
    return score;
  }
  private double augmentDropoffScore(  double score,  int a,  int b,  double mula,  double mulb,  boolean waypoint){
    int genVar2991;
    genVar2991=Math.min(a,b);
    int genVar2992;
    genVar2992=0;
    int genVar2993;
    genVar2993=Math.max(genVar2991,genVar2992);
    score+=genVar2993 * mula;
    boolean genVar2994;
    genVar2994=!waypoint;
    if (genVar2994) {
      int i=0;
      for (; i < Math.max(a - b,0); i++) {
        mulb/=2;
        score+=mulb;
      }
    }
 else {
      ;
    }
    return score;
  }
  @Override public double score(  EcState candidate,  EcState metric){
    EcState c;
    c=candidate;
    double score;
    score=0;
    boolean keepgoing;
    keepgoing=true;
    EcState state;
    state=EcState.defaultDestination();
    for (    EcState s : metric.waypoints) {
      if (keepgoing) {
        state.union(s);
      }
 else {
        ;
      }
      boolean genVar2995;
      genVar2995=s.isSatisfied(c);
      boolean genVar2996;
      genVar2996=!genVar2995;
      if (genVar2996) {
        keepgoing=false;
      }
 else {
        score+=500.0;
      }
    }
    if (keepgoing) {
      state.union(metric);
      EcEconFitness genVar2997;
      genVar2997=this;
      boolean genVar2998;
      genVar2998=false;
      score=genVar2997.augmentScore(c,metric,score,genVar2998);
    }
 else {
      EcEconFitness genVar2999;
      genVar2999=this;
      boolean genVar3000;
      genVar3000=false;
      score=genVar2999.augmentScore(c,metric,score,genVar3000);
    }
    boolean genVar3001;
    genVar3001=state.isSatisfied(c);
    if (genVar3001) {
      score*=5.0;
      int genVar3002;
      genVar3002=c.supply();
      double genVar3003;
      genVar3003=genVar3002 - c.supplyUsed;
      int genVar3004;
      genVar3004=8;
      score+=Math.min(genVar3003,genVar3004);
      int genVar3005;
      genVar3005=120;
      int genVar3006;
      genVar3006=60;
      int genVar3007;
      genVar3007=genVar3005 * genVar3006;
      int genVar3008;
      genVar3008=(genVar3007);
      double genVar3009;
      genVar3009=(double)genVar3008;
      double genVar3010;
      genVar3010=(double)c.seconds;
      double genVar3011;
      genVar3011=genVar3009 - genVar3010;
      double genVar3012;
      genVar3012=(genVar3011);
      double genVar3013;
      genVar3013=1.7;
      score+=genVar3012 / genVar3013;
      EcEconFitness genVar3014;
      genVar3014=this;
      int genVar3015;
      genVar3015=(int)c.minerals;
      int genVar3016;
      genVar3016=(int)metric.minerals;
      double genVar3017;
      genVar3017=0.0011;
      double genVar3018;
      genVar3018=0.0011;
      boolean genVar3019;
      genVar3019=false;
      score=genVar3014.augmentScore(score,genVar3015,genVar3016,genVar3017,genVar3018,genVar3019);
      EcEconFitness genVar3020;
      genVar3020=this;
      int genVar3021;
      genVar3021=(int)c.gas;
      int genVar3022;
      genVar3022=(int)metric.gas;
      double genVar3023;
      genVar3023=.015;
      double genVar3024;
      genVar3024=.015;
      boolean genVar3025;
      genVar3025=false;
      score=genVar3020.augmentScore(score,genVar3021,genVar3022,genVar3023,genVar3024,genVar3025);
    }
 else {
      EcEconFitness genVar3026;
      genVar3026=this;
      int genVar3027;
      genVar3027=(int)c.minerals;
      int genVar3028;
      genVar3028=(int)metric.minerals;
      double genVar3029;
      genVar3029=.00010;
      double genVar3030;
      genVar3030=.00010;
      boolean genVar3031;
      genVar3031=false;
      score=genVar3026.augmentScore(score,genVar3027,genVar3028,genVar3029,genVar3030,genVar3031);
      EcEconFitness genVar3032;
      genVar3032=this;
      int genVar3033;
      genVar3033=(int)c.gas;
      int genVar3034;
      genVar3034=(int)metric.gas;
      double genVar3035;
      genVar3035=.005;
      double genVar3036;
      genVar3036=.005;
      boolean genVar3037;
      genVar3037=false;
      score=genVar3032.augmentScore(score,genVar3033,genVar3034,genVar3035,genVar3036,genVar3037);
    }
    int genVar3038;
    genVar3038=0;
    score=Math.max(score,genVar3038);
    return score;
  }
}
