//42 rules ( includes 21 m-to-m rules ) 
//migrated 45 method

//CalendarEventEntry:
(x : CalendarEventEntry -> Event)  
{
    - x = new CalendarEventEntry();
    + x = new Event();
}

( x : CalendarEventEntry -> Event, y : When -> NoWhen, start : DateTime -> DateTime, end : DateTime -> DateTime ) {
    - y.setStartTime(start);
    - y.setEndTime(end);
    - x.addTime(y);
    + EventDateTime st = new EventDateTime();
    + st.setDateTime(start);
    + EventDateTime ed = new EventDateTime();
    + ed.setDateTime(end);
    + x.setStart(start);
    + x.setEnd(end);
}

( x : When -> NoWhen ) {
    - x = new When();
    + x = new NoWhen();
}

( x : Recurrence -> NoRecurrence, str : String -> String, y : CalendarEventEntry <-> Event ) {
    m x.setValue(str);
    - y.setRecurrence(x);
    + y.setRecurrence(Arrays.asList(str.split("\r\n"));
}

( x : Recurrence -> NoRecurrence, str : String -> String ) {
    - x.setValue(str); 
}

( x : Recurrence -> NoRecurrence ) {
    - x = new Recurrence();
    + x = new NoRecurrence();
}

(x : CalendarEventEntry -> Event, y : String -> String)
{
    - y = x.getId();
    - z = y.substring(y.lastIndexOf("/") + 1);
    + y = x.getId();
}

( x : CalendarEventEntry -> Event, y : String -> String, z : int -> int )
{
    - y = x.getId();
    + y = x.getId();
}

(x : CalendarEntry -> CalendarListEntry, y : String -> String)
{
    - x.setId(y);
    + x.setId(y);
}

( x : CalednarEventEntry -> Event, y : Link -> NoLink, z : String -> String ) {
    m y = x.getEditLink();
    - z = y.getHref();
    + z = x.getHangoutLink();
}

( x : CalendarEventEntry -> Event, y : Link -> NoLink ) {
    - y = x.getEditLink();
    + y = NoLink.instance();
}

( x : CalendarEventEntry -> Event, y : TextConstruct -> NoTextConstruct, z : String -> String ) { 
    m TextConstruct y = new PlainTextConstruct(z);
    - x.setTitle(y);
    + x.setSummary(z);
}

( y : TextConstruct -> NoTextConstruct ) {
    - y = new PlainTextConstruct(z);
    + y = new NoTextConstruct(z);
}

( x : CalendarEventEntry -> Event, y : TextConstruct -> NoTextConstruct, z : String -> String ) {
{
    m y = x.getTitle();
    - z = y.getPlainText();
    + z = x.getSummary();
}

( x : CalednarEventEntry -> Event, y : TextConstruct -> NoTextConstruct )
{
    - y = x.getTitle();
    + y = NoTextConstruct.instance();
} 

( x : CalendarEventEntry -> Event, y : TextConstruct -> NoTextConstruct, 
        z : String -> String ) {
{
    m y = x.getSummary();
    - z = y.getPlainText();
    + z = x.getDescription();
}

( x : CalendarEventEntry -> Event, y : TextConstruct -> NoTextConstruct )
{
    - y = x.getSummary();
    + y = NoTextConstruct.instance();
}

( x : CalendarEventEntry -> Event, y : List<When> -> List<NoWhen>, z : When -> NoWhen,
  u : DateTime -> DateTime, v : EventDateTime -> EventDateTime ) 
{
    - y = x.getTimes();
    - z = y.get(0); 
    - u = z.getStartTime();
    + EventDateTime v = new EventDateTime();
    + v = x.getStart();
    + u = v.getDate();
} 

( x : CalendarEventEntry -> Event, y : List<When> -> List<NoWhen>, z : When -> NoWhen,
  u : DateTime -> DateTime, v : EventDateTime -> EventDateTime ) 
{
    - y = x.getTimes();
    - z = y.get(0); 
    - u = z.getEndTime();
    + EventDateTime v = new EventDateTime();
    + v = x.getEnd();
    + u = v.getDate();
}

( x : CalendarEventEntry -> Event, y : List<Where> -> List<NoWhere>, z : Where -> NoWhere,
    u : String -> String )
{
    - y = x.getLocations();
    - z = y.get(0);
    - u = z.getValueString();
    + u = x.getLocation();
}

//CalendarEntry:
( x : CalendarEntry -> CalendarListEntry )
{
    - x = new CalendarEntry();
    + x = new CalendarListEntry();
}

( x : CalendarEntry -> CalendarListEntry, y : String -> String, 
        v : String -> String, u : String[] -> String[] )  {
    - v = x.getId();
    - u = v.split("/");
    - y = u[u.length-1];
    + y = x.getId();
}

( x : CalendarEntry -> CalendarListEntry, y : TextConstruct -> NoTextConstruct, z : String -> String) 
{
    m y = x.getTitle();
    - z = y.getPlainText();
    + z = x.getSummary();
}

( x : CalendarEntry -> CalendarListEntry, y : TextConstruct -> NoTextConstruct ) {
    - y = x.getTitle();
    + y = NoTextConstruct.instance();
}

( x : CalendarEntry -> CalendarListEntry, y : TextConstruct -> NoTextConstruct, z : String -> String) 
{
    m y = x.getSummary();
    - z = y.setSummary(y);
    + z = x.setDescription(x.getDescription());
}

( x : CalendarEntry -> CalendarListEntry, y : TextConstruct -> NoTextConstruct )
{
    - y = x.getSummary();
    + y = NoTextConstruct.instance();
} // x.getSummary -> x.getDescription

( x : CalendarEntry -> CalendarListEntry, y : TextConstruct -> NoTextConstruct, z : String -> String )
{
    m y = new PlainTextConstruct( z );
    - x.setTitle( y );
    + x.setSummary( z );
}

( x : CalendarEntry -> CalendarListEntry, y : HiddenProperty -> NoHiddenProperty ) {
    m y = HiddenProperty.FALSE;
    - x.setHidden(y);
    + x.setHidden(false);
}

( x : HiddenProperty -> NoHiddenProperty ) {
    - x = HiddenProperty.FALSE;
    + x = new NoHiddenProperty();
}

( x : CalendarEntry -> CalendarListEntry, y : ColorProperty -> NoColorProperty, z : String -> String ) {
    m y = new ColorProperty(z);
    - x.setColor(y);
    + x.setColorId(z);
}

( x : ColorProperty -> NoColorProperty, y : String -> String ) {
    - x = new ColorProperty(y);
    + x = new NoColorProperty(y);
}

( x : CalendarEntry -> CalendarListEntry, y : ColorProperty -> NoColorProperty, 
        z : String -> String ) {
    m y = x.getColor();
    - x.setColor(y);
    + x.setColorId(x.getColorId());
}

( x : CalendarEntry -> CalendarListEntry, y : ColorProperty -> NoColorProperty ) {
    - y = x.getColor();
    + y = NoColorProperty.instance();
}

( x : CalendarEntry -> CalendarListEntry, y : AccessLevelProperty -> NoAccessLevelProperty, 
        z : String -> String ) {
    m y = x.getAccessLevel();
    - x.setAccessLevel(y);
    + x.setAccessLevel(x.getAccessLevel());
}

( x : CalendarEntry -> CalendarListEntry, y : AccessLevelProperty -> NoAccessLevelProperty ) {
    - y = x.getAccessLevel();
    + y = NoAccessLevelProperty.instance();
}

( obj : CalendarEntry -> CalendarListEntry, loc : Where -> NoWhere, x : String -> String, 
        y : String -> String, z : String -> String ) {
    m loc = new Where( x, y, z );
    - obj.addLocation( loc );
    + obj.setLocation( x + "/" + y + "/" + z );
}

( x : Where -> NoWhere, u : String -> String, v : String -> String, w : String -> String ) {
    - x = new Where( u, v, w );
    + x = new NoWhere( u, v, w );
}

( x : CalendarEntry -> CalendarListEntry ) {
    - x.getId();
    + x.getId();
}

//AclEntry:
( x : AclEntry -> AclRule )
{
    - x = new AclEntry();
    + x = new AclRule();
}

( x : AclEntry -> AclRule, y : AclScope -> Scope, u : String -> String, 
        v : String -> String ) {
    - y = new AclScope(u, v);
    - x.setScope(y);
    + y = new Scope();
    + y.setType(u);
    + y.setValue(v);
    + x.setScope(y);
}

( x : AclEntry ->  AclRule, y : AclRole -> NoAclRole ) {
    m y = CalendarAclRole.READ;
    - x.setRole(y);
    + x.setRole("READ");
}

( x : AclRole -> NoAclRole ) {
    - x = CalendarAclRole.READ;
    + x = new NoAclRole();
}
