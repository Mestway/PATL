
[[Transformation Start]] Project: testAB
[[Normalization Begin]]
[[Normalize Start]] Project:testAB
[[Normlaization End]]
[[Collect Rules Begin]]
(x:A->B,l:int->int,r:int->int){
	- x=new A();
	- x.set(l,r);
	+ x = new B(l, r);
}

(x:A->B){
	- x.getL();
	+ x.getP().getFirst();
}

(x:A->B){
	- x.getR();
	+ x.getP().getSecond();
}

(x:A->B){
	- x.lAdd();
	+ Integer v = x.getP().getFirst();
	+ v = v+1;
	+ x.getP().setFirst(v);
}

(x:A->B){
	- x.rDec();
	+ Integer v = x.getP().getSecond();
	+ v = v-1;
	+ x.getP().setSecond(v);
}

(x:A->B){
	- x.print();
	+ Integer l = x.getP().getFirst();
	+ Integer r = x.getP().getSecond();
	+ System.out.println(l+" "+r);
}

[[Collect Rules End]]
class path: ;D:\runtime-EclipseApplication\testAB\;D:\runtime-EclipseApplication\testAB\bin\;D:\runtime-EclipseApplication\API-A\bin\;D:\runtime-EclipseApplication\API-A\
class name: testAB.ABCase
Class path: C:\Program Files\Java\jdk1.8.0_11\jre\lib\rt.jar;D:\runtime-EclipseApplication\testAB\;D:\runtime-EclipseApplication\testAB\bin\;D:\runtime-EclipseApplication\API-A\bin\;D:\runtime-EclipseApplication\API-A\;D:\runtime-EclipseApplication\testAB\;D:\runtime-EclipseApplication\testAB\bin\;D:\runtime-EclipseApplication\API-A\bin\;D:\runtime-EclipseApplication\API-A\
D:\eclipse
public void <init>()
    @: r0 := @this: testAB.ABCase
    @: specialinvoke r0.<java.lang.Object: void <init>()>()
    @: return
public static void main(java.lang.String[])
    @: r0 := @parameter0: java.lang.String[]
    @: r1 = "Start print"
    @: $r6 = <java.lang.System: java.io.PrintStream out>
    @: virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1)
    @: $r7 = new api_a.A
    @: specialinvoke $r7.<api_a.A: void <init>()>()
    @: r2 = $r7
    @: r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>()
    @: $r8 = <java.lang.System: java.io.PrintStream out>
    @: virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3)
    @: b0 = 0
    @: $r9 = new testAB.MyInt
    @: specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0)
    @: r4 = $r9
    @: $r10 = r4.<testAB.MyInt: testAB.YourInt z>
    @: $r10.<testAB.YourInt: int y> = 1
    @: r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>()
    @: r5.<testAB.YourInt: int y> = 1
    @: i3 = r4.<testAB.MyInt: int x>
    @: b1 = 0
    @: if i3 <= b1 goto $z2 = 0
    @: $z2 = 1
    @: goto [?= z0 = $z2]
    @: $z2 = 0
    @: z0 = $z2
    @: if z0 == 0 goto b5 = 0
    @: b4 = 1
    @: i3 = i3 + b4
    @: b5 = 0
    @: if i3 <= b5 goto $z3 = 0
    @: $z3 = 1
    @: goto [?= z1 = $z3]
    @: $z3 = 0
    @: z1 = $z3
    @: if z1 == 0 goto $r11 = new api_a.A
    @: b6 = 10
    @: b7 = 20
    @: $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6)
    @: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7)
    @: virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15)
    @: virtualinvoke r2.<api_a.A: void lAdd()>()
    @: goto [?= virtualinvoke r2.<api_a.A: void print()>()]
    @: $r11 = new api_a.A
    @: specialinvoke $r11.<api_a.A: void <init>()>()
    @: r16 = $r11
    @: b8 = 1
    @: b2 = 5
    @: $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8)
    @: $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2)
    @: virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13)
    @: virtualinvoke r16.<api_a.A: void rDec()>()
    @: virtualinvoke r2.<api_a.A: void print()>()
    @: return
@fun: public void <init>()
specialinvoke r0.<java.lang.Object: void <init>()>() | specialinvoke r0.<java.lang.Object: void <init>()>() -> false
specialinvoke r0.<java.lang.Object: void <init>()>() | return -> false
return | specialinvoke r0.<java.lang.Object: void <init>()>() -> false
return | return -> false
@fun: public static void main(java.lang.String[])
r1 = "Start print" | r1 = "Start print" -> false
r1 = "Start print" | $r6 = <java.lang.System: java.io.PrintStream out> -> true
r1 = "Start print" | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> true
r1 = "Start print" | $r7 = new api_a.A -> false
r1 = "Start print" | specialinvoke $r7.<api_a.A: void <init>()>() -> false
r1 = "Start print" | r2 = $r7 -> false
r1 = "Start print" | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
r1 = "Start print" | $r8 = <java.lang.System: java.io.PrintStream out> -> false
r1 = "Start print" | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
r1 = "Start print" | b0 = 0 -> false
r1 = "Start print" | $r9 = new testAB.MyInt -> false
r1 = "Start print" | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
r1 = "Start print" | r4 = $r9 -> false
r1 = "Start print" | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
r1 = "Start print" | $r10.<testAB.YourInt: int y> = 1 -> false
r1 = "Start print" | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
r1 = "Start print" | r5.<testAB.YourInt: int y> = 1 -> false
r1 = "Start print" | i3 = r4.<testAB.MyInt: int x> -> false
r1 = "Start print" | b1 = 0 -> false
r1 = "Start print" | if i3 <= b1 goto $z2 = 0 -> false
r1 = "Start print" | $z2 = 1 -> false
r1 = "Start print" | goto [?= z0 = $z2] -> false
r1 = "Start print" | $z2 = 0 -> false
r1 = "Start print" | z0 = $z2 -> false
r1 = "Start print" | if z0 == 0 goto b5 = 0 -> false
r1 = "Start print" | b4 = 1 -> false
r1 = "Start print" | i3 = i3 + b4 -> false
r1 = "Start print" | b5 = 0 -> false
r1 = "Start print" | if i3 <= b5 goto $z3 = 0 -> false
r1 = "Start print" | $z3 = 1 -> false
r1 = "Start print" | goto [?= z1 = $z3] -> false
r1 = "Start print" | $z3 = 0 -> false
r1 = "Start print" | z1 = $z3 -> false
r1 = "Start print" | if z1 == 0 goto $r11 = new api_a.A -> false
r1 = "Start print" | b6 = 10 -> false
r1 = "Start print" | b7 = 20 -> false
r1 = "Start print" | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
r1 = "Start print" | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
r1 = "Start print" | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
r1 = "Start print" | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
r1 = "Start print" | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
r1 = "Start print" | $r11 = new api_a.A -> false
r1 = "Start print" | specialinvoke $r11.<api_a.A: void <init>()>() -> false
r1 = "Start print" | r16 = $r11 -> false
r1 = "Start print" | b8 = 1 -> false
r1 = "Start print" | b2 = 5 -> false
r1 = "Start print" | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
r1 = "Start print" | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
r1 = "Start print" | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
r1 = "Start print" | virtualinvoke r16.<api_a.A: void rDec()>() -> false
r1 = "Start print" | virtualinvoke r2.<api_a.A: void print()>() -> false
r1 = "Start print" | return -> false
$r6 = <java.lang.System: java.io.PrintStream out> | r1 = "Start print" -> true
$r6 = <java.lang.System: java.io.PrintStream out> | $r6 = <java.lang.System: java.io.PrintStream out> -> true
$r6 = <java.lang.System: java.io.PrintStream out> | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> true
$r6 = <java.lang.System: java.io.PrintStream out> | $r7 = new api_a.A -> false
$r6 = <java.lang.System: java.io.PrintStream out> | specialinvoke $r7.<api_a.A: void <init>()>() -> false
$r6 = <java.lang.System: java.io.PrintStream out> | r2 = $r7 -> false
$r6 = <java.lang.System: java.io.PrintStream out> | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
$r6 = <java.lang.System: java.io.PrintStream out> | $r8 = <java.lang.System: java.io.PrintStream out> -> false
$r6 = <java.lang.System: java.io.PrintStream out> | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
$r6 = <java.lang.System: java.io.PrintStream out> | b0 = 0 -> false
$r6 = <java.lang.System: java.io.PrintStream out> | $r9 = new testAB.MyInt -> false
$r6 = <java.lang.System: java.io.PrintStream out> | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
$r6 = <java.lang.System: java.io.PrintStream out> | r4 = $r9 -> false
$r6 = <java.lang.System: java.io.PrintStream out> | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
$r6 = <java.lang.System: java.io.PrintStream out> | $r10.<testAB.YourInt: int y> = 1 -> false
$r6 = <java.lang.System: java.io.PrintStream out> | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
$r6 = <java.lang.System: java.io.PrintStream out> | r5.<testAB.YourInt: int y> = 1 -> false
$r6 = <java.lang.System: java.io.PrintStream out> | i3 = r4.<testAB.MyInt: int x> -> false
$r6 = <java.lang.System: java.io.PrintStream out> | b1 = 0 -> false
$r6 = <java.lang.System: java.io.PrintStream out> | if i3 <= b1 goto $z2 = 0 -> false
$r6 = <java.lang.System: java.io.PrintStream out> | $z2 = 1 -> false
$r6 = <java.lang.System: java.io.PrintStream out> | goto [?= z0 = $z2] -> false
$r6 = <java.lang.System: java.io.PrintStream out> | $z2 = 0 -> false
$r6 = <java.lang.System: java.io.PrintStream out> | z0 = $z2 -> false
$r6 = <java.lang.System: java.io.PrintStream out> | if z0 == 0 goto b5 = 0 -> false
$r6 = <java.lang.System: java.io.PrintStream out> | b4 = 1 -> false
$r6 = <java.lang.System: java.io.PrintStream out> | i3 = i3 + b4 -> false
$r6 = <java.lang.System: java.io.PrintStream out> | b5 = 0 -> false
$r6 = <java.lang.System: java.io.PrintStream out> | if i3 <= b5 goto $z3 = 0 -> false
$r6 = <java.lang.System: java.io.PrintStream out> | $z3 = 1 -> false
$r6 = <java.lang.System: java.io.PrintStream out> | goto [?= z1 = $z3] -> false
$r6 = <java.lang.System: java.io.PrintStream out> | $z3 = 0 -> false
$r6 = <java.lang.System: java.io.PrintStream out> | z1 = $z3 -> false
$r6 = <java.lang.System: java.io.PrintStream out> | if z1 == 0 goto $r11 = new api_a.A -> false
$r6 = <java.lang.System: java.io.PrintStream out> | b6 = 10 -> false
$r6 = <java.lang.System: java.io.PrintStream out> | b7 = 20 -> false
$r6 = <java.lang.System: java.io.PrintStream out> | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
$r6 = <java.lang.System: java.io.PrintStream out> | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
$r6 = <java.lang.System: java.io.PrintStream out> | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
$r6 = <java.lang.System: java.io.PrintStream out> | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
$r6 = <java.lang.System: java.io.PrintStream out> | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
$r6 = <java.lang.System: java.io.PrintStream out> | $r11 = new api_a.A -> false
$r6 = <java.lang.System: java.io.PrintStream out> | specialinvoke $r11.<api_a.A: void <init>()>() -> false
$r6 = <java.lang.System: java.io.PrintStream out> | r16 = $r11 -> false
$r6 = <java.lang.System: java.io.PrintStream out> | b8 = 1 -> false
$r6 = <java.lang.System: java.io.PrintStream out> | b2 = 5 -> false
$r6 = <java.lang.System: java.io.PrintStream out> | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
$r6 = <java.lang.System: java.io.PrintStream out> | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
$r6 = <java.lang.System: java.io.PrintStream out> | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
$r6 = <java.lang.System: java.io.PrintStream out> | virtualinvoke r16.<api_a.A: void rDec()>() -> false
$r6 = <java.lang.System: java.io.PrintStream out> | virtualinvoke r2.<api_a.A: void print()>() -> false
$r6 = <java.lang.System: java.io.PrintStream out> | return -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | r1 = "Start print" -> true
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | $r6 = <java.lang.System: java.io.PrintStream out> -> true
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> true
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | $r7 = new api_a.A -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | specialinvoke $r7.<api_a.A: void <init>()>() -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | r2 = $r7 -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | $r8 = <java.lang.System: java.io.PrintStream out> -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | b0 = 0 -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | $r9 = new testAB.MyInt -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | r4 = $r9 -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | $r10.<testAB.YourInt: int y> = 1 -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | r5.<testAB.YourInt: int y> = 1 -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | i3 = r4.<testAB.MyInt: int x> -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | b1 = 0 -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | if i3 <= b1 goto $z2 = 0 -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | $z2 = 1 -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | goto [?= z0 = $z2] -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | $z2 = 0 -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | z0 = $z2 -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | if z0 == 0 goto b5 = 0 -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | b4 = 1 -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | i3 = i3 + b4 -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | b5 = 0 -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | if i3 <= b5 goto $z3 = 0 -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | $z3 = 1 -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | goto [?= z1 = $z3] -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | $z3 = 0 -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | z1 = $z3 -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | if z1 == 0 goto $r11 = new api_a.A -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | b6 = 10 -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | b7 = 20 -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | $r11 = new api_a.A -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | specialinvoke $r11.<api_a.A: void <init>()>() -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | r16 = $r11 -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | b8 = 1 -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | b2 = 5 -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | virtualinvoke r16.<api_a.A: void rDec()>() -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | virtualinvoke r2.<api_a.A: void print()>() -> false
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) | return -> false
$r7 = new api_a.A | r1 = "Start print" -> false
$r7 = new api_a.A | $r6 = <java.lang.System: java.io.PrintStream out> -> false
$r7 = new api_a.A | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
$r7 = new api_a.A | $r7 = new api_a.A -> true
$r7 = new api_a.A | specialinvoke $r7.<api_a.A: void <init>()>() -> true
$r7 = new api_a.A | r2 = $r7 -> true
$r7 = new api_a.A | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> true
$r7 = new api_a.A | $r8 = <java.lang.System: java.io.PrintStream out> -> false
$r7 = new api_a.A | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
$r7 = new api_a.A | b0 = 0 -> false
$r7 = new api_a.A | $r9 = new testAB.MyInt -> false
$r7 = new api_a.A | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
$r7 = new api_a.A | r4 = $r9 -> false
$r7 = new api_a.A | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
$r7 = new api_a.A | $r10.<testAB.YourInt: int y> = 1 -> false
$r7 = new api_a.A | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
$r7 = new api_a.A | r5.<testAB.YourInt: int y> = 1 -> false
$r7 = new api_a.A | i3 = r4.<testAB.MyInt: int x> -> false
$r7 = new api_a.A | b1 = 0 -> false
$r7 = new api_a.A | if i3 <= b1 goto $z2 = 0 -> false
$r7 = new api_a.A | $z2 = 1 -> false
$r7 = new api_a.A | goto [?= z0 = $z2] -> false
$r7 = new api_a.A | $z2 = 0 -> false
$r7 = new api_a.A | z0 = $z2 -> false
$r7 = new api_a.A | if z0 == 0 goto b5 = 0 -> false
$r7 = new api_a.A | b4 = 1 -> false
$r7 = new api_a.A | i3 = i3 + b4 -> false
$r7 = new api_a.A | b5 = 0 -> false
$r7 = new api_a.A | if i3 <= b5 goto $z3 = 0 -> false
$r7 = new api_a.A | $z3 = 1 -> false
$r7 = new api_a.A | goto [?= z1 = $z3] -> false
$r7 = new api_a.A | $z3 = 0 -> false
$r7 = new api_a.A | z1 = $z3 -> false
$r7 = new api_a.A | if z1 == 0 goto $r11 = new api_a.A -> false
$r7 = new api_a.A | b6 = 10 -> false
$r7 = new api_a.A | b7 = 20 -> false
$r7 = new api_a.A | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> true
$r7 = new api_a.A | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> true
$r7 = new api_a.A | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> true
$r7 = new api_a.A | virtualinvoke r2.<api_a.A: void lAdd()>() -> true
$r7 = new api_a.A | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
$r7 = new api_a.A | $r11 = new api_a.A -> false
$r7 = new api_a.A | specialinvoke $r11.<api_a.A: void <init>()>() -> false
$r7 = new api_a.A | r16 = $r11 -> false
$r7 = new api_a.A | b8 = 1 -> false
$r7 = new api_a.A | b2 = 5 -> false
$r7 = new api_a.A | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
$r7 = new api_a.A | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
$r7 = new api_a.A | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
$r7 = new api_a.A | virtualinvoke r16.<api_a.A: void rDec()>() -> false
$r7 = new api_a.A | virtualinvoke r2.<api_a.A: void print()>() -> true
$r7 = new api_a.A | return -> false
specialinvoke $r7.<api_a.A: void <init>()>() | r1 = "Start print" -> false
specialinvoke $r7.<api_a.A: void <init>()>() | $r6 = <java.lang.System: java.io.PrintStream out> -> false
specialinvoke $r7.<api_a.A: void <init>()>() | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
specialinvoke $r7.<api_a.A: void <init>()>() | $r7 = new api_a.A -> true
specialinvoke $r7.<api_a.A: void <init>()>() | specialinvoke $r7.<api_a.A: void <init>()>() -> true
specialinvoke $r7.<api_a.A: void <init>()>() | r2 = $r7 -> true
specialinvoke $r7.<api_a.A: void <init>()>() | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> true
specialinvoke $r7.<api_a.A: void <init>()>() | $r8 = <java.lang.System: java.io.PrintStream out> -> false
specialinvoke $r7.<api_a.A: void <init>()>() | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
specialinvoke $r7.<api_a.A: void <init>()>() | b0 = 0 -> false
specialinvoke $r7.<api_a.A: void <init>()>() | $r9 = new testAB.MyInt -> false
specialinvoke $r7.<api_a.A: void <init>()>() | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
specialinvoke $r7.<api_a.A: void <init>()>() | r4 = $r9 -> false
specialinvoke $r7.<api_a.A: void <init>()>() | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
specialinvoke $r7.<api_a.A: void <init>()>() | $r10.<testAB.YourInt: int y> = 1 -> false
specialinvoke $r7.<api_a.A: void <init>()>() | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
specialinvoke $r7.<api_a.A: void <init>()>() | r5.<testAB.YourInt: int y> = 1 -> false
specialinvoke $r7.<api_a.A: void <init>()>() | i3 = r4.<testAB.MyInt: int x> -> false
specialinvoke $r7.<api_a.A: void <init>()>() | b1 = 0 -> false
specialinvoke $r7.<api_a.A: void <init>()>() | if i3 <= b1 goto $z2 = 0 -> false
specialinvoke $r7.<api_a.A: void <init>()>() | $z2 = 1 -> false
specialinvoke $r7.<api_a.A: void <init>()>() | goto [?= z0 = $z2] -> false
specialinvoke $r7.<api_a.A: void <init>()>() | $z2 = 0 -> false
specialinvoke $r7.<api_a.A: void <init>()>() | z0 = $z2 -> false
specialinvoke $r7.<api_a.A: void <init>()>() | if z0 == 0 goto b5 = 0 -> false
specialinvoke $r7.<api_a.A: void <init>()>() | b4 = 1 -> false
specialinvoke $r7.<api_a.A: void <init>()>() | i3 = i3 + b4 -> false
specialinvoke $r7.<api_a.A: void <init>()>() | b5 = 0 -> false
specialinvoke $r7.<api_a.A: void <init>()>() | if i3 <= b5 goto $z3 = 0 -> false
specialinvoke $r7.<api_a.A: void <init>()>() | $z3 = 1 -> false
specialinvoke $r7.<api_a.A: void <init>()>() | goto [?= z1 = $z3] -> false
specialinvoke $r7.<api_a.A: void <init>()>() | $z3 = 0 -> false
specialinvoke $r7.<api_a.A: void <init>()>() | z1 = $z3 -> false
specialinvoke $r7.<api_a.A: void <init>()>() | if z1 == 0 goto $r11 = new api_a.A -> false
specialinvoke $r7.<api_a.A: void <init>()>() | b6 = 10 -> false
specialinvoke $r7.<api_a.A: void <init>()>() | b7 = 20 -> false
specialinvoke $r7.<api_a.A: void <init>()>() | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> true
specialinvoke $r7.<api_a.A: void <init>()>() | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> true
specialinvoke $r7.<api_a.A: void <init>()>() | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> true
specialinvoke $r7.<api_a.A: void <init>()>() | virtualinvoke r2.<api_a.A: void lAdd()>() -> true
specialinvoke $r7.<api_a.A: void <init>()>() | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
specialinvoke $r7.<api_a.A: void <init>()>() | $r11 = new api_a.A -> false
specialinvoke $r7.<api_a.A: void <init>()>() | specialinvoke $r11.<api_a.A: void <init>()>() -> false
specialinvoke $r7.<api_a.A: void <init>()>() | r16 = $r11 -> false
specialinvoke $r7.<api_a.A: void <init>()>() | b8 = 1 -> false
specialinvoke $r7.<api_a.A: void <init>()>() | b2 = 5 -> false
specialinvoke $r7.<api_a.A: void <init>()>() | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
specialinvoke $r7.<api_a.A: void <init>()>() | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
specialinvoke $r7.<api_a.A: void <init>()>() | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
specialinvoke $r7.<api_a.A: void <init>()>() | virtualinvoke r16.<api_a.A: void rDec()>() -> false
specialinvoke $r7.<api_a.A: void <init>()>() | virtualinvoke r2.<api_a.A: void print()>() -> true
specialinvoke $r7.<api_a.A: void <init>()>() | return -> false
r2 = $r7 | r1 = "Start print" -> false
r2 = $r7 | $r6 = <java.lang.System: java.io.PrintStream out> -> false
r2 = $r7 | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
r2 = $r7 | $r7 = new api_a.A -> true
r2 = $r7 | specialinvoke $r7.<api_a.A: void <init>()>() -> true
r2 = $r7 | r2 = $r7 -> true
r2 = $r7 | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> true
r2 = $r7 | $r8 = <java.lang.System: java.io.PrintStream out> -> false
r2 = $r7 | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
r2 = $r7 | b0 = 0 -> false
r2 = $r7 | $r9 = new testAB.MyInt -> false
r2 = $r7 | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
r2 = $r7 | r4 = $r9 -> false
r2 = $r7 | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
r2 = $r7 | $r10.<testAB.YourInt: int y> = 1 -> false
r2 = $r7 | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
r2 = $r7 | r5.<testAB.YourInt: int y> = 1 -> false
r2 = $r7 | i3 = r4.<testAB.MyInt: int x> -> false
r2 = $r7 | b1 = 0 -> false
r2 = $r7 | if i3 <= b1 goto $z2 = 0 -> false
r2 = $r7 | $z2 = 1 -> false
r2 = $r7 | goto [?= z0 = $z2] -> false
r2 = $r7 | $z2 = 0 -> false
r2 = $r7 | z0 = $z2 -> false
r2 = $r7 | if z0 == 0 goto b5 = 0 -> false
r2 = $r7 | b4 = 1 -> false
r2 = $r7 | i3 = i3 + b4 -> false
r2 = $r7 | b5 = 0 -> false
r2 = $r7 | if i3 <= b5 goto $z3 = 0 -> false
r2 = $r7 | $z3 = 1 -> false
r2 = $r7 | goto [?= z1 = $z3] -> false
r2 = $r7 | $z3 = 0 -> false
r2 = $r7 | z1 = $z3 -> false
r2 = $r7 | if z1 == 0 goto $r11 = new api_a.A -> false
r2 = $r7 | b6 = 10 -> false
r2 = $r7 | b7 = 20 -> false
r2 = $r7 | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> true
r2 = $r7 | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> true
r2 = $r7 | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> true
r2 = $r7 | virtualinvoke r2.<api_a.A: void lAdd()>() -> true
r2 = $r7 | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
r2 = $r7 | $r11 = new api_a.A -> false
r2 = $r7 | specialinvoke $r11.<api_a.A: void <init>()>() -> false
r2 = $r7 | r16 = $r11 -> false
r2 = $r7 | b8 = 1 -> false
r2 = $r7 | b2 = 5 -> false
r2 = $r7 | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
r2 = $r7 | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
r2 = $r7 | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
r2 = $r7 | virtualinvoke r16.<api_a.A: void rDec()>() -> false
r2 = $r7 | virtualinvoke r2.<api_a.A: void print()>() -> true
r2 = $r7 | return -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | r1 = "Start print" -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | $r6 = <java.lang.System: java.io.PrintStream out> -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | $r7 = new api_a.A -> true
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | specialinvoke $r7.<api_a.A: void <init>()>() -> true
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | r2 = $r7 -> true
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | $r8 = <java.lang.System: java.io.PrintStream out> -> true
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> true
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | b0 = 0 -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | $r9 = new testAB.MyInt -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | r4 = $r9 -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | $r10.<testAB.YourInt: int y> = 1 -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | r5.<testAB.YourInt: int y> = 1 -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | i3 = r4.<testAB.MyInt: int x> -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | b1 = 0 -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | if i3 <= b1 goto $z2 = 0 -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | $z2 = 1 -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | goto [?= z0 = $z2] -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | $z2 = 0 -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | z0 = $z2 -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | if z0 == 0 goto b5 = 0 -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | b4 = 1 -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | i3 = i3 + b4 -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | b5 = 0 -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | if i3 <= b5 goto $z3 = 0 -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | $z3 = 1 -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | goto [?= z1 = $z3] -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | $z3 = 0 -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | z1 = $z3 -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | if z1 == 0 goto $r11 = new api_a.A -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | b6 = 10 -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | b7 = 20 -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | $r11 = new api_a.A -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | specialinvoke $r11.<api_a.A: void <init>()>() -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | r16 = $r11 -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | b8 = 1 -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | b2 = 5 -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | virtualinvoke r16.<api_a.A: void rDec()>() -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | virtualinvoke r2.<api_a.A: void print()>() -> false
r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() | return -> false
$r8 = <java.lang.System: java.io.PrintStream out> | r1 = "Start print" -> false
$r8 = <java.lang.System: java.io.PrintStream out> | $r6 = <java.lang.System: java.io.PrintStream out> -> false
$r8 = <java.lang.System: java.io.PrintStream out> | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
$r8 = <java.lang.System: java.io.PrintStream out> | $r7 = new api_a.A -> false
$r8 = <java.lang.System: java.io.PrintStream out> | specialinvoke $r7.<api_a.A: void <init>()>() -> false
$r8 = <java.lang.System: java.io.PrintStream out> | r2 = $r7 -> false
$r8 = <java.lang.System: java.io.PrintStream out> | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> true
$r8 = <java.lang.System: java.io.PrintStream out> | $r8 = <java.lang.System: java.io.PrintStream out> -> true
$r8 = <java.lang.System: java.io.PrintStream out> | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> true
$r8 = <java.lang.System: java.io.PrintStream out> | b0 = 0 -> false
$r8 = <java.lang.System: java.io.PrintStream out> | $r9 = new testAB.MyInt -> false
$r8 = <java.lang.System: java.io.PrintStream out> | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
$r8 = <java.lang.System: java.io.PrintStream out> | r4 = $r9 -> false
$r8 = <java.lang.System: java.io.PrintStream out> | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
$r8 = <java.lang.System: java.io.PrintStream out> | $r10.<testAB.YourInt: int y> = 1 -> false
$r8 = <java.lang.System: java.io.PrintStream out> | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
$r8 = <java.lang.System: java.io.PrintStream out> | r5.<testAB.YourInt: int y> = 1 -> false
$r8 = <java.lang.System: java.io.PrintStream out> | i3 = r4.<testAB.MyInt: int x> -> false
$r8 = <java.lang.System: java.io.PrintStream out> | b1 = 0 -> false
$r8 = <java.lang.System: java.io.PrintStream out> | if i3 <= b1 goto $z2 = 0 -> false
$r8 = <java.lang.System: java.io.PrintStream out> | $z2 = 1 -> false
$r8 = <java.lang.System: java.io.PrintStream out> | goto [?= z0 = $z2] -> false
$r8 = <java.lang.System: java.io.PrintStream out> | $z2 = 0 -> false
$r8 = <java.lang.System: java.io.PrintStream out> | z0 = $z2 -> false
$r8 = <java.lang.System: java.io.PrintStream out> | if z0 == 0 goto b5 = 0 -> false
$r8 = <java.lang.System: java.io.PrintStream out> | b4 = 1 -> false
$r8 = <java.lang.System: java.io.PrintStream out> | i3 = i3 + b4 -> false
$r8 = <java.lang.System: java.io.PrintStream out> | b5 = 0 -> false
$r8 = <java.lang.System: java.io.PrintStream out> | if i3 <= b5 goto $z3 = 0 -> false
$r8 = <java.lang.System: java.io.PrintStream out> | $z3 = 1 -> false
$r8 = <java.lang.System: java.io.PrintStream out> | goto [?= z1 = $z3] -> false
$r8 = <java.lang.System: java.io.PrintStream out> | $z3 = 0 -> false
$r8 = <java.lang.System: java.io.PrintStream out> | z1 = $z3 -> false
$r8 = <java.lang.System: java.io.PrintStream out> | if z1 == 0 goto $r11 = new api_a.A -> false
$r8 = <java.lang.System: java.io.PrintStream out> | b6 = 10 -> false
$r8 = <java.lang.System: java.io.PrintStream out> | b7 = 20 -> false
$r8 = <java.lang.System: java.io.PrintStream out> | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
$r8 = <java.lang.System: java.io.PrintStream out> | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
$r8 = <java.lang.System: java.io.PrintStream out> | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
$r8 = <java.lang.System: java.io.PrintStream out> | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
$r8 = <java.lang.System: java.io.PrintStream out> | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
$r8 = <java.lang.System: java.io.PrintStream out> | $r11 = new api_a.A -> false
$r8 = <java.lang.System: java.io.PrintStream out> | specialinvoke $r11.<api_a.A: void <init>()>() -> false
$r8 = <java.lang.System: java.io.PrintStream out> | r16 = $r11 -> false
$r8 = <java.lang.System: java.io.PrintStream out> | b8 = 1 -> false
$r8 = <java.lang.System: java.io.PrintStream out> | b2 = 5 -> false
$r8 = <java.lang.System: java.io.PrintStream out> | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
$r8 = <java.lang.System: java.io.PrintStream out> | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
$r8 = <java.lang.System: java.io.PrintStream out> | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
$r8 = <java.lang.System: java.io.PrintStream out> | virtualinvoke r16.<api_a.A: void rDec()>() -> false
$r8 = <java.lang.System: java.io.PrintStream out> | virtualinvoke r2.<api_a.A: void print()>() -> false
$r8 = <java.lang.System: java.io.PrintStream out> | return -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | r1 = "Start print" -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | $r6 = <java.lang.System: java.io.PrintStream out> -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | $r7 = new api_a.A -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | specialinvoke $r7.<api_a.A: void <init>()>() -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | r2 = $r7 -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> true
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | $r8 = <java.lang.System: java.io.PrintStream out> -> true
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> true
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | b0 = 0 -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | $r9 = new testAB.MyInt -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | r4 = $r9 -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | $r10.<testAB.YourInt: int y> = 1 -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | r5.<testAB.YourInt: int y> = 1 -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | i3 = r4.<testAB.MyInt: int x> -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | b1 = 0 -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | if i3 <= b1 goto $z2 = 0 -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | $z2 = 1 -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | goto [?= z0 = $z2] -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | $z2 = 0 -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | z0 = $z2 -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | if z0 == 0 goto b5 = 0 -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | b4 = 1 -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | i3 = i3 + b4 -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | b5 = 0 -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | if i3 <= b5 goto $z3 = 0 -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | $z3 = 1 -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | goto [?= z1 = $z3] -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | $z3 = 0 -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | z1 = $z3 -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | if z1 == 0 goto $r11 = new api_a.A -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | b6 = 10 -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | b7 = 20 -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | $r11 = new api_a.A -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | specialinvoke $r11.<api_a.A: void <init>()>() -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | r16 = $r11 -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | b8 = 1 -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | b2 = 5 -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | virtualinvoke r16.<api_a.A: void rDec()>() -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | virtualinvoke r2.<api_a.A: void print()>() -> false
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) | return -> false
b0 = 0 | r1 = "Start print" -> false
b0 = 0 | $r6 = <java.lang.System: java.io.PrintStream out> -> false
b0 = 0 | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
b0 = 0 | $r7 = new api_a.A -> false
b0 = 0 | specialinvoke $r7.<api_a.A: void <init>()>() -> false
b0 = 0 | r2 = $r7 -> false
b0 = 0 | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
b0 = 0 | $r8 = <java.lang.System: java.io.PrintStream out> -> false
b0 = 0 | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
b0 = 0 | b0 = 0 -> false
b0 = 0 | $r9 = new testAB.MyInt -> true
b0 = 0 | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> true
b0 = 0 | r4 = $r9 -> true
b0 = 0 | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
b0 = 0 | $r10.<testAB.YourInt: int y> = 1 -> false
b0 = 0 | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
b0 = 0 | r5.<testAB.YourInt: int y> = 1 -> false
b0 = 0 | i3 = r4.<testAB.MyInt: int x> -> false
b0 = 0 | b1 = 0 -> false
b0 = 0 | if i3 <= b1 goto $z2 = 0 -> false
b0 = 0 | $z2 = 1 -> false
b0 = 0 | goto [?= z0 = $z2] -> false
b0 = 0 | $z2 = 0 -> false
b0 = 0 | z0 = $z2 -> false
b0 = 0 | if z0 == 0 goto b5 = 0 -> false
b0 = 0 | b4 = 1 -> false
b0 = 0 | i3 = i3 + b4 -> false
b0 = 0 | b5 = 0 -> false
b0 = 0 | if i3 <= b5 goto $z3 = 0 -> false
b0 = 0 | $z3 = 1 -> false
b0 = 0 | goto [?= z1 = $z3] -> false
b0 = 0 | $z3 = 0 -> false
b0 = 0 | z1 = $z3 -> false
b0 = 0 | if z1 == 0 goto $r11 = new api_a.A -> false
b0 = 0 | b6 = 10 -> false
b0 = 0 | b7 = 20 -> false
b0 = 0 | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
b0 = 0 | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
b0 = 0 | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
b0 = 0 | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
b0 = 0 | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
b0 = 0 | $r11 = new api_a.A -> false
b0 = 0 | specialinvoke $r11.<api_a.A: void <init>()>() -> false
b0 = 0 | r16 = $r11 -> false
b0 = 0 | b8 = 1 -> false
b0 = 0 | b2 = 5 -> false
b0 = 0 | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
b0 = 0 | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
b0 = 0 | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
b0 = 0 | virtualinvoke r16.<api_a.A: void rDec()>() -> false
b0 = 0 | virtualinvoke r2.<api_a.A: void print()>() -> false
b0 = 0 | return -> false
$r9 = new testAB.MyInt | r1 = "Start print" -> false
$r9 = new testAB.MyInt | $r6 = <java.lang.System: java.io.PrintStream out> -> false
$r9 = new testAB.MyInt | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
$r9 = new testAB.MyInt | $r7 = new api_a.A -> false
$r9 = new testAB.MyInt | specialinvoke $r7.<api_a.A: void <init>()>() -> false
$r9 = new testAB.MyInt | r2 = $r7 -> false
$r9 = new testAB.MyInt | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
$r9 = new testAB.MyInt | $r8 = <java.lang.System: java.io.PrintStream out> -> false
$r9 = new testAB.MyInt | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
$r9 = new testAB.MyInt | b0 = 0 -> true
$r9 = new testAB.MyInt | $r9 = new testAB.MyInt -> true
$r9 = new testAB.MyInt | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> true
$r9 = new testAB.MyInt | r4 = $r9 -> true
$r9 = new testAB.MyInt | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> true
$r9 = new testAB.MyInt | $r10.<testAB.YourInt: int y> = 1 -> true
$r9 = new testAB.MyInt | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> true
$r9 = new testAB.MyInt | r5.<testAB.YourInt: int y> = 1 -> false
$r9 = new testAB.MyInt | i3 = r4.<testAB.MyInt: int x> -> true
$r9 = new testAB.MyInt | b1 = 0 -> false
$r9 = new testAB.MyInt | if i3 <= b1 goto $z2 = 0 -> false
$r9 = new testAB.MyInt | $z2 = 1 -> false
$r9 = new testAB.MyInt | goto [?= z0 = $z2] -> false
$r9 = new testAB.MyInt | $z2 = 0 -> false
$r9 = new testAB.MyInt | z0 = $z2 -> false
$r9 = new testAB.MyInt | if z0 == 0 goto b5 = 0 -> false
$r9 = new testAB.MyInt | b4 = 1 -> false
$r9 = new testAB.MyInt | i3 = i3 + b4 -> false
$r9 = new testAB.MyInt | b5 = 0 -> false
$r9 = new testAB.MyInt | if i3 <= b5 goto $z3 = 0 -> false
$r9 = new testAB.MyInt | $z3 = 1 -> false
$r9 = new testAB.MyInt | goto [?= z1 = $z3] -> false
$r9 = new testAB.MyInt | $z3 = 0 -> false
$r9 = new testAB.MyInt | z1 = $z3 -> false
$r9 = new testAB.MyInt | if z1 == 0 goto $r11 = new api_a.A -> false
$r9 = new testAB.MyInt | b6 = 10 -> false
$r9 = new testAB.MyInt | b7 = 20 -> false
$r9 = new testAB.MyInt | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
$r9 = new testAB.MyInt | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
$r9 = new testAB.MyInt | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
$r9 = new testAB.MyInt | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
$r9 = new testAB.MyInt | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
$r9 = new testAB.MyInt | $r11 = new api_a.A -> false
$r9 = new testAB.MyInt | specialinvoke $r11.<api_a.A: void <init>()>() -> false
$r9 = new testAB.MyInt | r16 = $r11 -> false
$r9 = new testAB.MyInt | b8 = 1 -> false
$r9 = new testAB.MyInt | b2 = 5 -> false
$r9 = new testAB.MyInt | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
$r9 = new testAB.MyInt | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
$r9 = new testAB.MyInt | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
$r9 = new testAB.MyInt | virtualinvoke r16.<api_a.A: void rDec()>() -> false
$r9 = new testAB.MyInt | virtualinvoke r2.<api_a.A: void print()>() -> false
$r9 = new testAB.MyInt | return -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | r1 = "Start print" -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | $r6 = <java.lang.System: java.io.PrintStream out> -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | $r7 = new api_a.A -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | specialinvoke $r7.<api_a.A: void <init>()>() -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | r2 = $r7 -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | $r8 = <java.lang.System: java.io.PrintStream out> -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | b0 = 0 -> true
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | $r9 = new testAB.MyInt -> true
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> true
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | r4 = $r9 -> true
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> true
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | $r10.<testAB.YourInt: int y> = 1 -> true
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> true
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | r5.<testAB.YourInt: int y> = 1 -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | i3 = r4.<testAB.MyInt: int x> -> true
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | b1 = 0 -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | if i3 <= b1 goto $z2 = 0 -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | $z2 = 1 -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | goto [?= z0 = $z2] -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | $z2 = 0 -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | z0 = $z2 -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | if z0 == 0 goto b5 = 0 -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | b4 = 1 -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | i3 = i3 + b4 -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | b5 = 0 -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | if i3 <= b5 goto $z3 = 0 -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | $z3 = 1 -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | goto [?= z1 = $z3] -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | $z3 = 0 -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | z1 = $z3 -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | if z1 == 0 goto $r11 = new api_a.A -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | b6 = 10 -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | b7 = 20 -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | $r11 = new api_a.A -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | specialinvoke $r11.<api_a.A: void <init>()>() -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | r16 = $r11 -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | b8 = 1 -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | b2 = 5 -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | virtualinvoke r16.<api_a.A: void rDec()>() -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | virtualinvoke r2.<api_a.A: void print()>() -> false
specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) | return -> false
r4 = $r9 | r1 = "Start print" -> false
r4 = $r9 | $r6 = <java.lang.System: java.io.PrintStream out> -> false
r4 = $r9 | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
r4 = $r9 | $r7 = new api_a.A -> false
r4 = $r9 | specialinvoke $r7.<api_a.A: void <init>()>() -> false
r4 = $r9 | r2 = $r7 -> false
r4 = $r9 | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
r4 = $r9 | $r8 = <java.lang.System: java.io.PrintStream out> -> false
r4 = $r9 | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
r4 = $r9 | b0 = 0 -> true
r4 = $r9 | $r9 = new testAB.MyInt -> true
r4 = $r9 | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> true
r4 = $r9 | r4 = $r9 -> true
r4 = $r9 | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> true
r4 = $r9 | $r10.<testAB.YourInt: int y> = 1 -> true
r4 = $r9 | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> true
r4 = $r9 | r5.<testAB.YourInt: int y> = 1 -> false
r4 = $r9 | i3 = r4.<testAB.MyInt: int x> -> true
r4 = $r9 | b1 = 0 -> false
r4 = $r9 | if i3 <= b1 goto $z2 = 0 -> false
r4 = $r9 | $z2 = 1 -> false
r4 = $r9 | goto [?= z0 = $z2] -> false
r4 = $r9 | $z2 = 0 -> false
r4 = $r9 | z0 = $z2 -> false
r4 = $r9 | if z0 == 0 goto b5 = 0 -> false
r4 = $r9 | b4 = 1 -> false
r4 = $r9 | i3 = i3 + b4 -> false
r4 = $r9 | b5 = 0 -> false
r4 = $r9 | if i3 <= b5 goto $z3 = 0 -> false
r4 = $r9 | $z3 = 1 -> false
r4 = $r9 | goto [?= z1 = $z3] -> false
r4 = $r9 | $z3 = 0 -> false
r4 = $r9 | z1 = $z3 -> false
r4 = $r9 | if z1 == 0 goto $r11 = new api_a.A -> false
r4 = $r9 | b6 = 10 -> false
r4 = $r9 | b7 = 20 -> false
r4 = $r9 | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
r4 = $r9 | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
r4 = $r9 | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
r4 = $r9 | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
r4 = $r9 | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
r4 = $r9 | $r11 = new api_a.A -> false
r4 = $r9 | specialinvoke $r11.<api_a.A: void <init>()>() -> false
r4 = $r9 | r16 = $r11 -> false
r4 = $r9 | b8 = 1 -> false
r4 = $r9 | b2 = 5 -> false
r4 = $r9 | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
r4 = $r9 | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
r4 = $r9 | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
r4 = $r9 | virtualinvoke r16.<api_a.A: void rDec()>() -> false
r4 = $r9 | virtualinvoke r2.<api_a.A: void print()>() -> false
r4 = $r9 | return -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | r1 = "Start print" -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | $r6 = <java.lang.System: java.io.PrintStream out> -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | $r7 = new api_a.A -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | specialinvoke $r7.<api_a.A: void <init>()>() -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | r2 = $r7 -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | $r8 = <java.lang.System: java.io.PrintStream out> -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | b0 = 0 -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | $r9 = new testAB.MyInt -> true
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> true
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | r4 = $r9 -> true
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> true
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | $r10.<testAB.YourInt: int y> = 1 -> true
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | r5.<testAB.YourInt: int y> = 1 -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | i3 = r4.<testAB.MyInt: int x> -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | b1 = 0 -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | if i3 <= b1 goto $z2 = 0 -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | $z2 = 1 -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | goto [?= z0 = $z2] -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | $z2 = 0 -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | z0 = $z2 -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | if z0 == 0 goto b5 = 0 -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | b4 = 1 -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | i3 = i3 + b4 -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | b5 = 0 -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | if i3 <= b5 goto $z3 = 0 -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | $z3 = 1 -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | goto [?= z1 = $z3] -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | $z3 = 0 -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | z1 = $z3 -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | if z1 == 0 goto $r11 = new api_a.A -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | b6 = 10 -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | b7 = 20 -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | $r11 = new api_a.A -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | specialinvoke $r11.<api_a.A: void <init>()>() -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | r16 = $r11 -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | b8 = 1 -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | b2 = 5 -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | virtualinvoke r16.<api_a.A: void rDec()>() -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | virtualinvoke r2.<api_a.A: void print()>() -> false
$r10 = r4.<testAB.MyInt: testAB.YourInt z> | return -> false
$r10.<testAB.YourInt: int y> = 1 | r1 = "Start print" -> false
$r10.<testAB.YourInt: int y> = 1 | $r6 = <java.lang.System: java.io.PrintStream out> -> false
$r10.<testAB.YourInt: int y> = 1 | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
$r10.<testAB.YourInt: int y> = 1 | $r7 = new api_a.A -> false
$r10.<testAB.YourInt: int y> = 1 | specialinvoke $r7.<api_a.A: void <init>()>() -> false
$r10.<testAB.YourInt: int y> = 1 | r2 = $r7 -> false
$r10.<testAB.YourInt: int y> = 1 | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
$r10.<testAB.YourInt: int y> = 1 | $r8 = <java.lang.System: java.io.PrintStream out> -> false
$r10.<testAB.YourInt: int y> = 1 | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
$r10.<testAB.YourInt: int y> = 1 | b0 = 0 -> false
$r10.<testAB.YourInt: int y> = 1 | $r9 = new testAB.MyInt -> true
$r10.<testAB.YourInt: int y> = 1 | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> true
$r10.<testAB.YourInt: int y> = 1 | r4 = $r9 -> true
$r10.<testAB.YourInt: int y> = 1 | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> true
$r10.<testAB.YourInt: int y> = 1 | $r10.<testAB.YourInt: int y> = 1 -> true
$r10.<testAB.YourInt: int y> = 1 | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
$r10.<testAB.YourInt: int y> = 1 | r5.<testAB.YourInt: int y> = 1 -> false
$r10.<testAB.YourInt: int y> = 1 | i3 = r4.<testAB.MyInt: int x> -> false
$r10.<testAB.YourInt: int y> = 1 | b1 = 0 -> false
$r10.<testAB.YourInt: int y> = 1 | if i3 <= b1 goto $z2 = 0 -> false
$r10.<testAB.YourInt: int y> = 1 | $z2 = 1 -> false
$r10.<testAB.YourInt: int y> = 1 | goto [?= z0 = $z2] -> false
$r10.<testAB.YourInt: int y> = 1 | $z2 = 0 -> false
$r10.<testAB.YourInt: int y> = 1 | z0 = $z2 -> false
$r10.<testAB.YourInt: int y> = 1 | if z0 == 0 goto b5 = 0 -> false
$r10.<testAB.YourInt: int y> = 1 | b4 = 1 -> false
$r10.<testAB.YourInt: int y> = 1 | i3 = i3 + b4 -> false
$r10.<testAB.YourInt: int y> = 1 | b5 = 0 -> false
$r10.<testAB.YourInt: int y> = 1 | if i3 <= b5 goto $z3 = 0 -> false
$r10.<testAB.YourInt: int y> = 1 | $z3 = 1 -> false
$r10.<testAB.YourInt: int y> = 1 | goto [?= z1 = $z3] -> false
$r10.<testAB.YourInt: int y> = 1 | $z3 = 0 -> false
$r10.<testAB.YourInt: int y> = 1 | z1 = $z3 -> false
$r10.<testAB.YourInt: int y> = 1 | if z1 == 0 goto $r11 = new api_a.A -> false
$r10.<testAB.YourInt: int y> = 1 | b6 = 10 -> false
$r10.<testAB.YourInt: int y> = 1 | b7 = 20 -> false
$r10.<testAB.YourInt: int y> = 1 | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
$r10.<testAB.YourInt: int y> = 1 | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
$r10.<testAB.YourInt: int y> = 1 | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
$r10.<testAB.YourInt: int y> = 1 | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
$r10.<testAB.YourInt: int y> = 1 | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
$r10.<testAB.YourInt: int y> = 1 | $r11 = new api_a.A -> false
$r10.<testAB.YourInt: int y> = 1 | specialinvoke $r11.<api_a.A: void <init>()>() -> false
$r10.<testAB.YourInt: int y> = 1 | r16 = $r11 -> false
$r10.<testAB.YourInt: int y> = 1 | b8 = 1 -> false
$r10.<testAB.YourInt: int y> = 1 | b2 = 5 -> false
$r10.<testAB.YourInt: int y> = 1 | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
$r10.<testAB.YourInt: int y> = 1 | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
$r10.<testAB.YourInt: int y> = 1 | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
$r10.<testAB.YourInt: int y> = 1 | virtualinvoke r16.<api_a.A: void rDec()>() -> false
$r10.<testAB.YourInt: int y> = 1 | virtualinvoke r2.<api_a.A: void print()>() -> false
$r10.<testAB.YourInt: int y> = 1 | return -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | r1 = "Start print" -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | $r6 = <java.lang.System: java.io.PrintStream out> -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | $r7 = new api_a.A -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | specialinvoke $r7.<api_a.A: void <init>()>() -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | r2 = $r7 -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | $r8 = <java.lang.System: java.io.PrintStream out> -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | b0 = 0 -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | $r9 = new testAB.MyInt -> true
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> true
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | r4 = $r9 -> true
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | $r10.<testAB.YourInt: int y> = 1 -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | r5.<testAB.YourInt: int y> = 1 -> true
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | i3 = r4.<testAB.MyInt: int x> -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | b1 = 0 -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | if i3 <= b1 goto $z2 = 0 -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | $z2 = 1 -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | goto [?= z0 = $z2] -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | $z2 = 0 -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | z0 = $z2 -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | if z0 == 0 goto b5 = 0 -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | b4 = 1 -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | i3 = i3 + b4 -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | b5 = 0 -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | if i3 <= b5 goto $z3 = 0 -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | $z3 = 1 -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | goto [?= z1 = $z3] -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | $z3 = 0 -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | z1 = $z3 -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | if z1 == 0 goto $r11 = new api_a.A -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | b6 = 10 -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | b7 = 20 -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | $r11 = new api_a.A -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | specialinvoke $r11.<api_a.A: void <init>()>() -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | r16 = $r11 -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | b8 = 1 -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | b2 = 5 -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | virtualinvoke r16.<api_a.A: void rDec()>() -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | virtualinvoke r2.<api_a.A: void print()>() -> false
r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() | return -> false
r5.<testAB.YourInt: int y> = 1 | r1 = "Start print" -> false
r5.<testAB.YourInt: int y> = 1 | $r6 = <java.lang.System: java.io.PrintStream out> -> false
r5.<testAB.YourInt: int y> = 1 | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
r5.<testAB.YourInt: int y> = 1 | $r7 = new api_a.A -> false
r5.<testAB.YourInt: int y> = 1 | specialinvoke $r7.<api_a.A: void <init>()>() -> false
r5.<testAB.YourInt: int y> = 1 | r2 = $r7 -> false
r5.<testAB.YourInt: int y> = 1 | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
r5.<testAB.YourInt: int y> = 1 | $r8 = <java.lang.System: java.io.PrintStream out> -> false
r5.<testAB.YourInt: int y> = 1 | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
r5.<testAB.YourInt: int y> = 1 | b0 = 0 -> false
r5.<testAB.YourInt: int y> = 1 | $r9 = new testAB.MyInt -> false
r5.<testAB.YourInt: int y> = 1 | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
r5.<testAB.YourInt: int y> = 1 | r4 = $r9 -> false
r5.<testAB.YourInt: int y> = 1 | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
r5.<testAB.YourInt: int y> = 1 | $r10.<testAB.YourInt: int y> = 1 -> false
r5.<testAB.YourInt: int y> = 1 | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> true
r5.<testAB.YourInt: int y> = 1 | r5.<testAB.YourInt: int y> = 1 -> false
r5.<testAB.YourInt: int y> = 1 | i3 = r4.<testAB.MyInt: int x> -> false
r5.<testAB.YourInt: int y> = 1 | b1 = 0 -> false
r5.<testAB.YourInt: int y> = 1 | if i3 <= b1 goto $z2 = 0 -> false
r5.<testAB.YourInt: int y> = 1 | $z2 = 1 -> false
r5.<testAB.YourInt: int y> = 1 | goto [?= z0 = $z2] -> false
r5.<testAB.YourInt: int y> = 1 | $z2 = 0 -> false
r5.<testAB.YourInt: int y> = 1 | z0 = $z2 -> false
r5.<testAB.YourInt: int y> = 1 | if z0 == 0 goto b5 = 0 -> false
r5.<testAB.YourInt: int y> = 1 | b4 = 1 -> false
r5.<testAB.YourInt: int y> = 1 | i3 = i3 + b4 -> false
r5.<testAB.YourInt: int y> = 1 | b5 = 0 -> false
r5.<testAB.YourInt: int y> = 1 | if i3 <= b5 goto $z3 = 0 -> false
r5.<testAB.YourInt: int y> = 1 | $z3 = 1 -> false
r5.<testAB.YourInt: int y> = 1 | goto [?= z1 = $z3] -> false
r5.<testAB.YourInt: int y> = 1 | $z3 = 0 -> false
r5.<testAB.YourInt: int y> = 1 | z1 = $z3 -> false
r5.<testAB.YourInt: int y> = 1 | if z1 == 0 goto $r11 = new api_a.A -> false
r5.<testAB.YourInt: int y> = 1 | b6 = 10 -> false
r5.<testAB.YourInt: int y> = 1 | b7 = 20 -> false
r5.<testAB.YourInt: int y> = 1 | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
r5.<testAB.YourInt: int y> = 1 | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
r5.<testAB.YourInt: int y> = 1 | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
r5.<testAB.YourInt: int y> = 1 | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
r5.<testAB.YourInt: int y> = 1 | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
r5.<testAB.YourInt: int y> = 1 | $r11 = new api_a.A -> false
r5.<testAB.YourInt: int y> = 1 | specialinvoke $r11.<api_a.A: void <init>()>() -> false
r5.<testAB.YourInt: int y> = 1 | r16 = $r11 -> false
r5.<testAB.YourInt: int y> = 1 | b8 = 1 -> false
r5.<testAB.YourInt: int y> = 1 | b2 = 5 -> false
r5.<testAB.YourInt: int y> = 1 | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
r5.<testAB.YourInt: int y> = 1 | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
r5.<testAB.YourInt: int y> = 1 | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
r5.<testAB.YourInt: int y> = 1 | virtualinvoke r16.<api_a.A: void rDec()>() -> false
r5.<testAB.YourInt: int y> = 1 | virtualinvoke r2.<api_a.A: void print()>() -> false
r5.<testAB.YourInt: int y> = 1 | return -> false
i3 = r4.<testAB.MyInt: int x> | r1 = "Start print" -> false
i3 = r4.<testAB.MyInt: int x> | $r6 = <java.lang.System: java.io.PrintStream out> -> false
i3 = r4.<testAB.MyInt: int x> | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
i3 = r4.<testAB.MyInt: int x> | $r7 = new api_a.A -> false
i3 = r4.<testAB.MyInt: int x> | specialinvoke $r7.<api_a.A: void <init>()>() -> false
i3 = r4.<testAB.MyInt: int x> | r2 = $r7 -> false
i3 = r4.<testAB.MyInt: int x> | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
i3 = r4.<testAB.MyInt: int x> | $r8 = <java.lang.System: java.io.PrintStream out> -> false
i3 = r4.<testAB.MyInt: int x> | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
i3 = r4.<testAB.MyInt: int x> | b0 = 0 -> false
i3 = r4.<testAB.MyInt: int x> | $r9 = new testAB.MyInt -> true
i3 = r4.<testAB.MyInt: int x> | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> true
i3 = r4.<testAB.MyInt: int x> | r4 = $r9 -> true
i3 = r4.<testAB.MyInt: int x> | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
i3 = r4.<testAB.MyInt: int x> | $r10.<testAB.YourInt: int y> = 1 -> false
i3 = r4.<testAB.MyInt: int x> | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
i3 = r4.<testAB.MyInt: int x> | r5.<testAB.YourInt: int y> = 1 -> false
i3 = r4.<testAB.MyInt: int x> | i3 = r4.<testAB.MyInt: int x> -> false
i3 = r4.<testAB.MyInt: int x> | b1 = 0 -> false
i3 = r4.<testAB.MyInt: int x> | if i3 <= b1 goto $z2 = 0 -> true
i3 = r4.<testAB.MyInt: int x> | $z2 = 1 -> true
i3 = r4.<testAB.MyInt: int x> | goto [?= z0 = $z2] -> true
i3 = r4.<testAB.MyInt: int x> | $z2 = 0 -> true
i3 = r4.<testAB.MyInt: int x> | z0 = $z2 -> true
i3 = r4.<testAB.MyInt: int x> | if z0 == 0 goto b5 = 0 -> false
i3 = r4.<testAB.MyInt: int x> | b4 = 1 -> false
i3 = r4.<testAB.MyInt: int x> | i3 = i3 + b4 -> true
i3 = r4.<testAB.MyInt: int x> | b5 = 0 -> false
i3 = r4.<testAB.MyInt: int x> | if i3 <= b5 goto $z3 = 0 -> true
i3 = r4.<testAB.MyInt: int x> | $z3 = 1 -> false
i3 = r4.<testAB.MyInt: int x> | goto [?= z1 = $z3] -> false
i3 = r4.<testAB.MyInt: int x> | $z3 = 0 -> false
i3 = r4.<testAB.MyInt: int x> | z1 = $z3 -> true
i3 = r4.<testAB.MyInt: int x> | if z1 == 0 goto $r11 = new api_a.A -> false
i3 = r4.<testAB.MyInt: int x> | b6 = 10 -> false
i3 = r4.<testAB.MyInt: int x> | b7 = 20 -> false
i3 = r4.<testAB.MyInt: int x> | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
i3 = r4.<testAB.MyInt: int x> | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
i3 = r4.<testAB.MyInt: int x> | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
i3 = r4.<testAB.MyInt: int x> | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
i3 = r4.<testAB.MyInt: int x> | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
i3 = r4.<testAB.MyInt: int x> | $r11 = new api_a.A -> false
i3 = r4.<testAB.MyInt: int x> | specialinvoke $r11.<api_a.A: void <init>()>() -> false
i3 = r4.<testAB.MyInt: int x> | r16 = $r11 -> false
i3 = r4.<testAB.MyInt: int x> | b8 = 1 -> false
i3 = r4.<testAB.MyInt: int x> | b2 = 5 -> false
i3 = r4.<testAB.MyInt: int x> | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
i3 = r4.<testAB.MyInt: int x> | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
i3 = r4.<testAB.MyInt: int x> | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
i3 = r4.<testAB.MyInt: int x> | virtualinvoke r16.<api_a.A: void rDec()>() -> false
i3 = r4.<testAB.MyInt: int x> | virtualinvoke r2.<api_a.A: void print()>() -> false
i3 = r4.<testAB.MyInt: int x> | return -> false
b1 = 0 | r1 = "Start print" -> false
b1 = 0 | $r6 = <java.lang.System: java.io.PrintStream out> -> false
b1 = 0 | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
b1 = 0 | $r7 = new api_a.A -> false
b1 = 0 | specialinvoke $r7.<api_a.A: void <init>()>() -> false
b1 = 0 | r2 = $r7 -> false
b1 = 0 | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
b1 = 0 | $r8 = <java.lang.System: java.io.PrintStream out> -> false
b1 = 0 | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
b1 = 0 | b0 = 0 -> false
b1 = 0 | $r9 = new testAB.MyInt -> false
b1 = 0 | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
b1 = 0 | r4 = $r9 -> false
b1 = 0 | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
b1 = 0 | $r10.<testAB.YourInt: int y> = 1 -> false
b1 = 0 | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
b1 = 0 | r5.<testAB.YourInt: int y> = 1 -> false
b1 = 0 | i3 = r4.<testAB.MyInt: int x> -> false
b1 = 0 | b1 = 0 -> false
b1 = 0 | if i3 <= b1 goto $z2 = 0 -> true
b1 = 0 | $z2 = 1 -> false
b1 = 0 | goto [?= z0 = $z2] -> false
b1 = 0 | $z2 = 0 -> false
b1 = 0 | z0 = $z2 -> true
b1 = 0 | if z0 == 0 goto b5 = 0 -> false
b1 = 0 | b4 = 1 -> false
b1 = 0 | i3 = i3 + b4 -> false
b1 = 0 | b5 = 0 -> false
b1 = 0 | if i3 <= b5 goto $z3 = 0 -> false
b1 = 0 | $z3 = 1 -> false
b1 = 0 | goto [?= z1 = $z3] -> false
b1 = 0 | $z3 = 0 -> false
b1 = 0 | z1 = $z3 -> false
b1 = 0 | if z1 == 0 goto $r11 = new api_a.A -> false
b1 = 0 | b6 = 10 -> false
b1 = 0 | b7 = 20 -> false
b1 = 0 | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
b1 = 0 | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
b1 = 0 | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
b1 = 0 | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
b1 = 0 | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
b1 = 0 | $r11 = new api_a.A -> false
b1 = 0 | specialinvoke $r11.<api_a.A: void <init>()>() -> false
b1 = 0 | r16 = $r11 -> false
b1 = 0 | b8 = 1 -> false
b1 = 0 | b2 = 5 -> false
b1 = 0 | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
b1 = 0 | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
b1 = 0 | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
b1 = 0 | virtualinvoke r16.<api_a.A: void rDec()>() -> false
b1 = 0 | virtualinvoke r2.<api_a.A: void print()>() -> false
b1 = 0 | return -> false
if i3 <= b1 goto $z2 = 0 | r1 = "Start print" -> false
if i3 <= b1 goto $z2 = 0 | $r6 = <java.lang.System: java.io.PrintStream out> -> false
if i3 <= b1 goto $z2 = 0 | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
if i3 <= b1 goto $z2 = 0 | $r7 = new api_a.A -> false
if i3 <= b1 goto $z2 = 0 | specialinvoke $r7.<api_a.A: void <init>()>() -> false
if i3 <= b1 goto $z2 = 0 | r2 = $r7 -> false
if i3 <= b1 goto $z2 = 0 | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
if i3 <= b1 goto $z2 = 0 | $r8 = <java.lang.System: java.io.PrintStream out> -> false
if i3 <= b1 goto $z2 = 0 | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
if i3 <= b1 goto $z2 = 0 | b0 = 0 -> false
if i3 <= b1 goto $z2 = 0 | $r9 = new testAB.MyInt -> false
if i3 <= b1 goto $z2 = 0 | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
if i3 <= b1 goto $z2 = 0 | r4 = $r9 -> false
if i3 <= b1 goto $z2 = 0 | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
if i3 <= b1 goto $z2 = 0 | $r10.<testAB.YourInt: int y> = 1 -> false
if i3 <= b1 goto $z2 = 0 | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
if i3 <= b1 goto $z2 = 0 | r5.<testAB.YourInt: int y> = 1 -> false
if i3 <= b1 goto $z2 = 0 | i3 = r4.<testAB.MyInt: int x> -> true
if i3 <= b1 goto $z2 = 0 | b1 = 0 -> true
if i3 <= b1 goto $z2 = 0 | if i3 <= b1 goto $z2 = 0 -> false
if i3 <= b1 goto $z2 = 0 | $z2 = 1 -> true
if i3 <= b1 goto $z2 = 0 | goto [?= z0 = $z2] -> true
if i3 <= b1 goto $z2 = 0 | $z2 = 0 -> true
if i3 <= b1 goto $z2 = 0 | z0 = $z2 -> false
if i3 <= b1 goto $z2 = 0 | if z0 == 0 goto b5 = 0 -> true
if i3 <= b1 goto $z2 = 0 | b4 = 1 -> false
if i3 <= b1 goto $z2 = 0 | i3 = i3 + b4 -> true
if i3 <= b1 goto $z2 = 0 | b5 = 0 -> false
if i3 <= b1 goto $z2 = 0 | if i3 <= b5 goto $z3 = 0 -> true
if i3 <= b1 goto $z2 = 0 | $z3 = 1 -> false
if i3 <= b1 goto $z2 = 0 | goto [?= z1 = $z3] -> false
if i3 <= b1 goto $z2 = 0 | $z3 = 0 -> false
if i3 <= b1 goto $z2 = 0 | z1 = $z3 -> true
if i3 <= b1 goto $z2 = 0 | if z1 == 0 goto $r11 = new api_a.A -> false
if i3 <= b1 goto $z2 = 0 | b6 = 10 -> false
if i3 <= b1 goto $z2 = 0 | b7 = 20 -> false
if i3 <= b1 goto $z2 = 0 | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
if i3 <= b1 goto $z2 = 0 | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
if i3 <= b1 goto $z2 = 0 | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
if i3 <= b1 goto $z2 = 0 | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
if i3 <= b1 goto $z2 = 0 | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
if i3 <= b1 goto $z2 = 0 | $r11 = new api_a.A -> false
if i3 <= b1 goto $z2 = 0 | specialinvoke $r11.<api_a.A: void <init>()>() -> false
if i3 <= b1 goto $z2 = 0 | r16 = $r11 -> false
if i3 <= b1 goto $z2 = 0 | b8 = 1 -> false
if i3 <= b1 goto $z2 = 0 | b2 = 5 -> false
if i3 <= b1 goto $z2 = 0 | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
if i3 <= b1 goto $z2 = 0 | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
if i3 <= b1 goto $z2 = 0 | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
if i3 <= b1 goto $z2 = 0 | virtualinvoke r16.<api_a.A: void rDec()>() -> false
if i3 <= b1 goto $z2 = 0 | virtualinvoke r2.<api_a.A: void print()>() -> false
if i3 <= b1 goto $z2 = 0 | return -> false
$z2 = 1 | r1 = "Start print" -> false
$z2 = 1 | $r6 = <java.lang.System: java.io.PrintStream out> -> false
$z2 = 1 | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
$z2 = 1 | $r7 = new api_a.A -> false
$z2 = 1 | specialinvoke $r7.<api_a.A: void <init>()>() -> false
$z2 = 1 | r2 = $r7 -> false
$z2 = 1 | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
$z2 = 1 | $r8 = <java.lang.System: java.io.PrintStream out> -> false
$z2 = 1 | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
$z2 = 1 | b0 = 0 -> false
$z2 = 1 | $r9 = new testAB.MyInt -> false
$z2 = 1 | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
$z2 = 1 | r4 = $r9 -> false
$z2 = 1 | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
$z2 = 1 | $r10.<testAB.YourInt: int y> = 1 -> false
$z2 = 1 | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
$z2 = 1 | r5.<testAB.YourInt: int y> = 1 -> false
$z2 = 1 | i3 = r4.<testAB.MyInt: int x> -> true
$z2 = 1 | b1 = 0 -> false
$z2 = 1 | if i3 <= b1 goto $z2 = 0 -> true
$z2 = 1 | $z2 = 1 -> false
$z2 = 1 | goto [?= z0 = $z2] -> false
$z2 = 1 | $z2 = 0 -> false
$z2 = 1 | z0 = $z2 -> true
$z2 = 1 | if z0 == 0 goto b5 = 0 -> false
$z2 = 1 | b4 = 1 -> false
$z2 = 1 | i3 = i3 + b4 -> true
$z2 = 1 | b5 = 0 -> true
$z2 = 1 | if i3 <= b5 goto $z3 = 0 -> false
$z2 = 1 | $z3 = 1 -> true
$z2 = 1 | goto [?= z1 = $z3] -> true
$z2 = 1 | $z3 = 0 -> true
$z2 = 1 | z1 = $z3 -> false
$z2 = 1 | if z1 == 0 goto $r11 = new api_a.A -> true
$z2 = 1 | b6 = 10 -> false
$z2 = 1 | b7 = 20 -> false
$z2 = 1 | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
$z2 = 1 | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
$z2 = 1 | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
$z2 = 1 | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
$z2 = 1 | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
$z2 = 1 | $r11 = new api_a.A -> false
$z2 = 1 | specialinvoke $r11.<api_a.A: void <init>()>() -> false
$z2 = 1 | r16 = $r11 -> false
$z2 = 1 | b8 = 1 -> false
$z2 = 1 | b2 = 5 -> false
$z2 = 1 | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
$z2 = 1 | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
$z2 = 1 | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
$z2 = 1 | virtualinvoke r16.<api_a.A: void rDec()>() -> false
$z2 = 1 | virtualinvoke r2.<api_a.A: void print()>() -> false
$z2 = 1 | return -> true
goto [?= z0 = $z2] | r1 = "Start print" -> false
goto [?= z0 = $z2] | $r6 = <java.lang.System: java.io.PrintStream out> -> false
goto [?= z0 = $z2] | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
goto [?= z0 = $z2] | $r7 = new api_a.A -> false
goto [?= z0 = $z2] | specialinvoke $r7.<api_a.A: void <init>()>() -> false
goto [?= z0 = $z2] | r2 = $r7 -> false
goto [?= z0 = $z2] | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
goto [?= z0 = $z2] | $r8 = <java.lang.System: java.io.PrintStream out> -> false
goto [?= z0 = $z2] | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
goto [?= z0 = $z2] | b0 = 0 -> false
goto [?= z0 = $z2] | $r9 = new testAB.MyInt -> false
goto [?= z0 = $z2] | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
goto [?= z0 = $z2] | r4 = $r9 -> false
goto [?= z0 = $z2] | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
goto [?= z0 = $z2] | $r10.<testAB.YourInt: int y> = 1 -> false
goto [?= z0 = $z2] | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
goto [?= z0 = $z2] | r5.<testAB.YourInt: int y> = 1 -> false
goto [?= z0 = $z2] | i3 = r4.<testAB.MyInt: int x> -> true
goto [?= z0 = $z2] | b1 = 0 -> false
goto [?= z0 = $z2] | if i3 <= b1 goto $z2 = 0 -> true
goto [?= z0 = $z2] | $z2 = 1 -> false
goto [?= z0 = $z2] | goto [?= z0 = $z2] -> false
goto [?= z0 = $z2] | $z2 = 0 -> false
goto [?= z0 = $z2] | z0 = $z2 -> true
goto [?= z0 = $z2] | if z0 == 0 goto b5 = 0 -> false
goto [?= z0 = $z2] | b4 = 1 -> false
goto [?= z0 = $z2] | i3 = i3 + b4 -> true
goto [?= z0 = $z2] | b5 = 0 -> true
goto [?= z0 = $z2] | if i3 <= b5 goto $z3 = 0 -> false
goto [?= z0 = $z2] | $z3 = 1 -> true
goto [?= z0 = $z2] | goto [?= z1 = $z3] -> true
goto [?= z0 = $z2] | $z3 = 0 -> true
goto [?= z0 = $z2] | z1 = $z3 -> false
goto [?= z0 = $z2] | if z1 == 0 goto $r11 = new api_a.A -> true
goto [?= z0 = $z2] | b6 = 10 -> false
goto [?= z0 = $z2] | b7 = 20 -> false
goto [?= z0 = $z2] | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
goto [?= z0 = $z2] | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
goto [?= z0 = $z2] | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
goto [?= z0 = $z2] | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
goto [?= z0 = $z2] | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
goto [?= z0 = $z2] | $r11 = new api_a.A -> false
goto [?= z0 = $z2] | specialinvoke $r11.<api_a.A: void <init>()>() -> false
goto [?= z0 = $z2] | r16 = $r11 -> false
goto [?= z0 = $z2] | b8 = 1 -> false
goto [?= z0 = $z2] | b2 = 5 -> false
goto [?= z0 = $z2] | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
goto [?= z0 = $z2] | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
goto [?= z0 = $z2] | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
goto [?= z0 = $z2] | virtualinvoke r16.<api_a.A: void rDec()>() -> false
goto [?= z0 = $z2] | virtualinvoke r2.<api_a.A: void print()>() -> false
goto [?= z0 = $z2] | return -> true
$z2 = 0 | r1 = "Start print" -> false
$z2 = 0 | $r6 = <java.lang.System: java.io.PrintStream out> -> false
$z2 = 0 | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
$z2 = 0 | $r7 = new api_a.A -> false
$z2 = 0 | specialinvoke $r7.<api_a.A: void <init>()>() -> false
$z2 = 0 | r2 = $r7 -> false
$z2 = 0 | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
$z2 = 0 | $r8 = <java.lang.System: java.io.PrintStream out> -> false
$z2 = 0 | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
$z2 = 0 | b0 = 0 -> false
$z2 = 0 | $r9 = new testAB.MyInt -> false
$z2 = 0 | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
$z2 = 0 | r4 = $r9 -> false
$z2 = 0 | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
$z2 = 0 | $r10.<testAB.YourInt: int y> = 1 -> false
$z2 = 0 | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
$z2 = 0 | r5.<testAB.YourInt: int y> = 1 -> false
$z2 = 0 | i3 = r4.<testAB.MyInt: int x> -> true
$z2 = 0 | b1 = 0 -> false
$z2 = 0 | if i3 <= b1 goto $z2 = 0 -> true
$z2 = 0 | $z2 = 1 -> false
$z2 = 0 | goto [?= z0 = $z2] -> false
$z2 = 0 | $z2 = 0 -> false
$z2 = 0 | z0 = $z2 -> true
$z2 = 0 | if z0 == 0 goto b5 = 0 -> false
$z2 = 0 | b4 = 1 -> false
$z2 = 0 | i3 = i3 + b4 -> true
$z2 = 0 | b5 = 0 -> true
$z2 = 0 | if i3 <= b5 goto $z3 = 0 -> false
$z2 = 0 | $z3 = 1 -> true
$z2 = 0 | goto [?= z1 = $z3] -> true
$z2 = 0 | $z3 = 0 -> true
$z2 = 0 | z1 = $z3 -> false
$z2 = 0 | if z1 == 0 goto $r11 = new api_a.A -> true
$z2 = 0 | b6 = 10 -> false
$z2 = 0 | b7 = 20 -> false
$z2 = 0 | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
$z2 = 0 | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
$z2 = 0 | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
$z2 = 0 | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
$z2 = 0 | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
$z2 = 0 | $r11 = new api_a.A -> false
$z2 = 0 | specialinvoke $r11.<api_a.A: void <init>()>() -> false
$z2 = 0 | r16 = $r11 -> false
$z2 = 0 | b8 = 1 -> false
$z2 = 0 | b2 = 5 -> false
$z2 = 0 | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
$z2 = 0 | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
$z2 = 0 | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
$z2 = 0 | virtualinvoke r16.<api_a.A: void rDec()>() -> false
$z2 = 0 | virtualinvoke r2.<api_a.A: void print()>() -> false
$z2 = 0 | return -> true
z0 = $z2 | r1 = "Start print" -> false
z0 = $z2 | $r6 = <java.lang.System: java.io.PrintStream out> -> false
z0 = $z2 | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
z0 = $z2 | $r7 = new api_a.A -> false
z0 = $z2 | specialinvoke $r7.<api_a.A: void <init>()>() -> false
z0 = $z2 | r2 = $r7 -> false
z0 = $z2 | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
z0 = $z2 | $r8 = <java.lang.System: java.io.PrintStream out> -> false
z0 = $z2 | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
z0 = $z2 | b0 = 0 -> false
z0 = $z2 | $r9 = new testAB.MyInt -> false
z0 = $z2 | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
z0 = $z2 | r4 = $r9 -> false
z0 = $z2 | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
z0 = $z2 | $r10.<testAB.YourInt: int y> = 1 -> false
z0 = $z2 | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
z0 = $z2 | r5.<testAB.YourInt: int y> = 1 -> false
z0 = $z2 | i3 = r4.<testAB.MyInt: int x> -> true
z0 = $z2 | b1 = 0 -> true
z0 = $z2 | if i3 <= b1 goto $z2 = 0 -> false
z0 = $z2 | $z2 = 1 -> true
z0 = $z2 | goto [?= z0 = $z2] -> true
z0 = $z2 | $z2 = 0 -> true
z0 = $z2 | z0 = $z2 -> false
z0 = $z2 | if z0 == 0 goto b5 = 0 -> true
z0 = $z2 | b4 = 1 -> false
z0 = $z2 | i3 = i3 + b4 -> true
z0 = $z2 | b5 = 0 -> false
z0 = $z2 | if i3 <= b5 goto $z3 = 0 -> true
z0 = $z2 | $z3 = 1 -> false
z0 = $z2 | goto [?= z1 = $z3] -> false
z0 = $z2 | $z3 = 0 -> false
z0 = $z2 | z1 = $z3 -> true
z0 = $z2 | if z1 == 0 goto $r11 = new api_a.A -> false
z0 = $z2 | b6 = 10 -> false
z0 = $z2 | b7 = 20 -> false
z0 = $z2 | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
z0 = $z2 | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
z0 = $z2 | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
z0 = $z2 | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
z0 = $z2 | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
z0 = $z2 | $r11 = new api_a.A -> false
z0 = $z2 | specialinvoke $r11.<api_a.A: void <init>()>() -> false
z0 = $z2 | r16 = $r11 -> false
z0 = $z2 | b8 = 1 -> false
z0 = $z2 | b2 = 5 -> false
z0 = $z2 | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
z0 = $z2 | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
z0 = $z2 | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
z0 = $z2 | virtualinvoke r16.<api_a.A: void rDec()>() -> false
z0 = $z2 | virtualinvoke r2.<api_a.A: void print()>() -> false
z0 = $z2 | return -> false
if z0 == 0 goto b5 = 0 | r1 = "Start print" -> false
if z0 == 0 goto b5 = 0 | $r6 = <java.lang.System: java.io.PrintStream out> -> false
if z0 == 0 goto b5 = 0 | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
if z0 == 0 goto b5 = 0 | $r7 = new api_a.A -> false
if z0 == 0 goto b5 = 0 | specialinvoke $r7.<api_a.A: void <init>()>() -> false
if z0 == 0 goto b5 = 0 | r2 = $r7 -> false
if z0 == 0 goto b5 = 0 | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
if z0 == 0 goto b5 = 0 | $r8 = <java.lang.System: java.io.PrintStream out> -> false
if z0 == 0 goto b5 = 0 | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
if z0 == 0 goto b5 = 0 | b0 = 0 -> false
if z0 == 0 goto b5 = 0 | $r9 = new testAB.MyInt -> false
if z0 == 0 goto b5 = 0 | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
if z0 == 0 goto b5 = 0 | r4 = $r9 -> false
if z0 == 0 goto b5 = 0 | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
if z0 == 0 goto b5 = 0 | $r10.<testAB.YourInt: int y> = 1 -> false
if z0 == 0 goto b5 = 0 | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
if z0 == 0 goto b5 = 0 | r5.<testAB.YourInt: int y> = 1 -> false
if z0 == 0 goto b5 = 0 | i3 = r4.<testAB.MyInt: int x> -> false
if z0 == 0 goto b5 = 0 | b1 = 0 -> false
if z0 == 0 goto b5 = 0 | if i3 <= b1 goto $z2 = 0 -> true
if z0 == 0 goto b5 = 0 | $z2 = 1 -> false
if z0 == 0 goto b5 = 0 | goto [?= z0 = $z2] -> false
if z0 == 0 goto b5 = 0 | $z2 = 0 -> false
if z0 == 0 goto b5 = 0 | z0 = $z2 -> true
if z0 == 0 goto b5 = 0 | if z0 == 0 goto b5 = 0 -> false
if z0 == 0 goto b5 = 0 | b4 = 1 -> false
if z0 == 0 goto b5 = 0 | i3 = i3 + b4 -> false
if z0 == 0 goto b5 = 0 | b5 = 0 -> false
if z0 == 0 goto b5 = 0 | if i3 <= b5 goto $z3 = 0 -> false
if z0 == 0 goto b5 = 0 | $z3 = 1 -> false
if z0 == 0 goto b5 = 0 | goto [?= z1 = $z3] -> false
if z0 == 0 goto b5 = 0 | $z3 = 0 -> false
if z0 == 0 goto b5 = 0 | z1 = $z3 -> false
if z0 == 0 goto b5 = 0 | if z1 == 0 goto $r11 = new api_a.A -> false
if z0 == 0 goto b5 = 0 | b6 = 10 -> false
if z0 == 0 goto b5 = 0 | b7 = 20 -> false
if z0 == 0 goto b5 = 0 | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
if z0 == 0 goto b5 = 0 | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
if z0 == 0 goto b5 = 0 | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
if z0 == 0 goto b5 = 0 | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
if z0 == 0 goto b5 = 0 | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
if z0 == 0 goto b5 = 0 | $r11 = new api_a.A -> false
if z0 == 0 goto b5 = 0 | specialinvoke $r11.<api_a.A: void <init>()>() -> false
if z0 == 0 goto b5 = 0 | r16 = $r11 -> false
if z0 == 0 goto b5 = 0 | b8 = 1 -> false
if z0 == 0 goto b5 = 0 | b2 = 5 -> false
if z0 == 0 goto b5 = 0 | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
if z0 == 0 goto b5 = 0 | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
if z0 == 0 goto b5 = 0 | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
if z0 == 0 goto b5 = 0 | virtualinvoke r16.<api_a.A: void rDec()>() -> false
if z0 == 0 goto b5 = 0 | virtualinvoke r2.<api_a.A: void print()>() -> false
if z0 == 0 goto b5 = 0 | return -> false
b4 = 1 | r1 = "Start print" -> false
b4 = 1 | $r6 = <java.lang.System: java.io.PrintStream out> -> false
b4 = 1 | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
b4 = 1 | $r7 = new api_a.A -> false
b4 = 1 | specialinvoke $r7.<api_a.A: void <init>()>() -> false
b4 = 1 | r2 = $r7 -> false
b4 = 1 | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
b4 = 1 | $r8 = <java.lang.System: java.io.PrintStream out> -> false
b4 = 1 | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
b4 = 1 | b0 = 0 -> false
b4 = 1 | $r9 = new testAB.MyInt -> false
b4 = 1 | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
b4 = 1 | r4 = $r9 -> false
b4 = 1 | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
b4 = 1 | $r10.<testAB.YourInt: int y> = 1 -> false
b4 = 1 | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
b4 = 1 | r5.<testAB.YourInt: int y> = 1 -> false
b4 = 1 | i3 = r4.<testAB.MyInt: int x> -> false
b4 = 1 | b1 = 0 -> false
b4 = 1 | if i3 <= b1 goto $z2 = 0 -> false
b4 = 1 | $z2 = 1 -> false
b4 = 1 | goto [?= z0 = $z2] -> false
b4 = 1 | $z2 = 0 -> false
b4 = 1 | z0 = $z2 -> false
b4 = 1 | if z0 == 0 goto b5 = 0 -> false
b4 = 1 | b4 = 1 -> false
b4 = 1 | i3 = i3 + b4 -> true
b4 = 1 | b5 = 0 -> false
b4 = 1 | if i3 <= b5 goto $z3 = 0 -> false
b4 = 1 | $z3 = 1 -> false
b4 = 1 | goto [?= z1 = $z3] -> false
b4 = 1 | $z3 = 0 -> false
b4 = 1 | z1 = $z3 -> false
b4 = 1 | if z1 == 0 goto $r11 = new api_a.A -> false
b4 = 1 | b6 = 10 -> false
b4 = 1 | b7 = 20 -> false
b4 = 1 | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
b4 = 1 | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
b4 = 1 | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
b4 = 1 | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
b4 = 1 | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
b4 = 1 | $r11 = new api_a.A -> false
b4 = 1 | specialinvoke $r11.<api_a.A: void <init>()>() -> false
b4 = 1 | r16 = $r11 -> false
b4 = 1 | b8 = 1 -> false
b4 = 1 | b2 = 5 -> false
b4 = 1 | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
b4 = 1 | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
b4 = 1 | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
b4 = 1 | virtualinvoke r16.<api_a.A: void rDec()>() -> false
b4 = 1 | virtualinvoke r2.<api_a.A: void print()>() -> false
b4 = 1 | return -> false
i3 = i3 + b4 | r1 = "Start print" -> false
i3 = i3 + b4 | $r6 = <java.lang.System: java.io.PrintStream out> -> false
i3 = i3 + b4 | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
i3 = i3 + b4 | $r7 = new api_a.A -> false
i3 = i3 + b4 | specialinvoke $r7.<api_a.A: void <init>()>() -> false
i3 = i3 + b4 | r2 = $r7 -> false
i3 = i3 + b4 | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
i3 = i3 + b4 | $r8 = <java.lang.System: java.io.PrintStream out> -> false
i3 = i3 + b4 | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
i3 = i3 + b4 | b0 = 0 -> false
i3 = i3 + b4 | $r9 = new testAB.MyInt -> false
i3 = i3 + b4 | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
i3 = i3 + b4 | r4 = $r9 -> false
i3 = i3 + b4 | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
i3 = i3 + b4 | $r10.<testAB.YourInt: int y> = 1 -> false
i3 = i3 + b4 | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
i3 = i3 + b4 | r5.<testAB.YourInt: int y> = 1 -> false
i3 = i3 + b4 | i3 = r4.<testAB.MyInt: int x> -> true
i3 = i3 + b4 | b1 = 0 -> false
i3 = i3 + b4 | if i3 <= b1 goto $z2 = 0 -> true
i3 = i3 + b4 | $z2 = 1 -> true
i3 = i3 + b4 | goto [?= z0 = $z2] -> true
i3 = i3 + b4 | $z2 = 0 -> true
i3 = i3 + b4 | z0 = $z2 -> true
i3 = i3 + b4 | if z0 == 0 goto b5 = 0 -> false
i3 = i3 + b4 | b4 = 1 -> true
i3 = i3 + b4 | i3 = i3 + b4 -> false
i3 = i3 + b4 | b5 = 0 -> false
i3 = i3 + b4 | if i3 <= b5 goto $z3 = 0 -> true
i3 = i3 + b4 | $z3 = 1 -> false
i3 = i3 + b4 | goto [?= z1 = $z3] -> false
i3 = i3 + b4 | $z3 = 0 -> false
i3 = i3 + b4 | z1 = $z3 -> true
i3 = i3 + b4 | if z1 == 0 goto $r11 = new api_a.A -> false
i3 = i3 + b4 | b6 = 10 -> false
i3 = i3 + b4 | b7 = 20 -> false
i3 = i3 + b4 | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
i3 = i3 + b4 | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
i3 = i3 + b4 | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
i3 = i3 + b4 | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
i3 = i3 + b4 | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
i3 = i3 + b4 | $r11 = new api_a.A -> false
i3 = i3 + b4 | specialinvoke $r11.<api_a.A: void <init>()>() -> false
i3 = i3 + b4 | r16 = $r11 -> false
i3 = i3 + b4 | b8 = 1 -> false
i3 = i3 + b4 | b2 = 5 -> false
i3 = i3 + b4 | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
i3 = i3 + b4 | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
i3 = i3 + b4 | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
i3 = i3 + b4 | virtualinvoke r16.<api_a.A: void rDec()>() -> false
i3 = i3 + b4 | virtualinvoke r2.<api_a.A: void print()>() -> false
i3 = i3 + b4 | return -> false
b5 = 0 | r1 = "Start print" -> false
b5 = 0 | $r6 = <java.lang.System: java.io.PrintStream out> -> false
b5 = 0 | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
b5 = 0 | $r7 = new api_a.A -> false
b5 = 0 | specialinvoke $r7.<api_a.A: void <init>()>() -> false
b5 = 0 | r2 = $r7 -> false
b5 = 0 | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
b5 = 0 | $r8 = <java.lang.System: java.io.PrintStream out> -> false
b5 = 0 | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
b5 = 0 | b0 = 0 -> false
b5 = 0 | $r9 = new testAB.MyInt -> false
b5 = 0 | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
b5 = 0 | r4 = $r9 -> false
b5 = 0 | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
b5 = 0 | $r10.<testAB.YourInt: int y> = 1 -> false
b5 = 0 | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
b5 = 0 | r5.<testAB.YourInt: int y> = 1 -> false
b5 = 0 | i3 = r4.<testAB.MyInt: int x> -> false
b5 = 0 | b1 = 0 -> false
b5 = 0 | if i3 <= b1 goto $z2 = 0 -> false
b5 = 0 | $z2 = 1 -> true
b5 = 0 | goto [?= z0 = $z2] -> true
b5 = 0 | $z2 = 0 -> true
b5 = 0 | z0 = $z2 -> false
b5 = 0 | if z0 == 0 goto b5 = 0 -> false
b5 = 0 | b4 = 1 -> false
b5 = 0 | i3 = i3 + b4 -> false
b5 = 0 | b5 = 0 -> false
b5 = 0 | if i3 <= b5 goto $z3 = 0 -> true
b5 = 0 | $z3 = 1 -> false
b5 = 0 | goto [?= z1 = $z3] -> false
b5 = 0 | $z3 = 0 -> false
b5 = 0 | z1 = $z3 -> true
b5 = 0 | if z1 == 0 goto $r11 = new api_a.A -> false
b5 = 0 | b6 = 10 -> false
b5 = 0 | b7 = 20 -> false
b5 = 0 | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
b5 = 0 | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
b5 = 0 | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
b5 = 0 | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
b5 = 0 | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
b5 = 0 | $r11 = new api_a.A -> false
b5 = 0 | specialinvoke $r11.<api_a.A: void <init>()>() -> false
b5 = 0 | r16 = $r11 -> false
b5 = 0 | b8 = 1 -> false
b5 = 0 | b2 = 5 -> false
b5 = 0 | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
b5 = 0 | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
b5 = 0 | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
b5 = 0 | virtualinvoke r16.<api_a.A: void rDec()>() -> false
b5 = 0 | virtualinvoke r2.<api_a.A: void print()>() -> false
b5 = 0 | return -> false
if i3 <= b5 goto $z3 = 0 | r1 = "Start print" -> false
if i3 <= b5 goto $z3 = 0 | $r6 = <java.lang.System: java.io.PrintStream out> -> false
if i3 <= b5 goto $z3 = 0 | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
if i3 <= b5 goto $z3 = 0 | $r7 = new api_a.A -> false
if i3 <= b5 goto $z3 = 0 | specialinvoke $r7.<api_a.A: void <init>()>() -> false
if i3 <= b5 goto $z3 = 0 | r2 = $r7 -> false
if i3 <= b5 goto $z3 = 0 | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
if i3 <= b5 goto $z3 = 0 | $r8 = <java.lang.System: java.io.PrintStream out> -> false
if i3 <= b5 goto $z3 = 0 | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
if i3 <= b5 goto $z3 = 0 | b0 = 0 -> false
if i3 <= b5 goto $z3 = 0 | $r9 = new testAB.MyInt -> false
if i3 <= b5 goto $z3 = 0 | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
if i3 <= b5 goto $z3 = 0 | r4 = $r9 -> false
if i3 <= b5 goto $z3 = 0 | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
if i3 <= b5 goto $z3 = 0 | $r10.<testAB.YourInt: int y> = 1 -> false
if i3 <= b5 goto $z3 = 0 | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
if i3 <= b5 goto $z3 = 0 | r5.<testAB.YourInt: int y> = 1 -> false
if i3 <= b5 goto $z3 = 0 | i3 = r4.<testAB.MyInt: int x> -> true
if i3 <= b5 goto $z3 = 0 | b1 = 0 -> false
if i3 <= b5 goto $z3 = 0 | if i3 <= b1 goto $z2 = 0 -> true
if i3 <= b5 goto $z3 = 0 | $z2 = 1 -> false
if i3 <= b5 goto $z3 = 0 | goto [?= z0 = $z2] -> false
if i3 <= b5 goto $z3 = 0 | $z2 = 0 -> false
if i3 <= b5 goto $z3 = 0 | z0 = $z2 -> true
if i3 <= b5 goto $z3 = 0 | if z0 == 0 goto b5 = 0 -> false
if i3 <= b5 goto $z3 = 0 | b4 = 1 -> false
if i3 <= b5 goto $z3 = 0 | i3 = i3 + b4 -> true
if i3 <= b5 goto $z3 = 0 | b5 = 0 -> true
if i3 <= b5 goto $z3 = 0 | if i3 <= b5 goto $z3 = 0 -> false
if i3 <= b5 goto $z3 = 0 | $z3 = 1 -> true
if i3 <= b5 goto $z3 = 0 | goto [?= z1 = $z3] -> true
if i3 <= b5 goto $z3 = 0 | $z3 = 0 -> true
if i3 <= b5 goto $z3 = 0 | z1 = $z3 -> false
if i3 <= b5 goto $z3 = 0 | if z1 == 0 goto $r11 = new api_a.A -> true
if i3 <= b5 goto $z3 = 0 | b6 = 10 -> false
if i3 <= b5 goto $z3 = 0 | b7 = 20 -> false
if i3 <= b5 goto $z3 = 0 | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
if i3 <= b5 goto $z3 = 0 | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
if i3 <= b5 goto $z3 = 0 | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
if i3 <= b5 goto $z3 = 0 | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
if i3 <= b5 goto $z3 = 0 | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
if i3 <= b5 goto $z3 = 0 | $r11 = new api_a.A -> false
if i3 <= b5 goto $z3 = 0 | specialinvoke $r11.<api_a.A: void <init>()>() -> false
if i3 <= b5 goto $z3 = 0 | r16 = $r11 -> false
if i3 <= b5 goto $z3 = 0 | b8 = 1 -> false
if i3 <= b5 goto $z3 = 0 | b2 = 5 -> false
if i3 <= b5 goto $z3 = 0 | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
if i3 <= b5 goto $z3 = 0 | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
if i3 <= b5 goto $z3 = 0 | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
if i3 <= b5 goto $z3 = 0 | virtualinvoke r16.<api_a.A: void rDec()>() -> false
if i3 <= b5 goto $z3 = 0 | virtualinvoke r2.<api_a.A: void print()>() -> false
if i3 <= b5 goto $z3 = 0 | return -> true
$z3 = 1 | r1 = "Start print" -> false
$z3 = 1 | $r6 = <java.lang.System: java.io.PrintStream out> -> false
$z3 = 1 | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
$z3 = 1 | $r7 = new api_a.A -> false
$z3 = 1 | specialinvoke $r7.<api_a.A: void <init>()>() -> false
$z3 = 1 | r2 = $r7 -> false
$z3 = 1 | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
$z3 = 1 | $r8 = <java.lang.System: java.io.PrintStream out> -> false
$z3 = 1 | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
$z3 = 1 | b0 = 0 -> false
$z3 = 1 | $r9 = new testAB.MyInt -> false
$z3 = 1 | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
$z3 = 1 | r4 = $r9 -> false
$z3 = 1 | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
$z3 = 1 | $r10.<testAB.YourInt: int y> = 1 -> false
$z3 = 1 | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
$z3 = 1 | r5.<testAB.YourInt: int y> = 1 -> false
$z3 = 1 | i3 = r4.<testAB.MyInt: int x> -> false
$z3 = 1 | b1 = 0 -> false
$z3 = 1 | if i3 <= b1 goto $z2 = 0 -> false
$z3 = 1 | $z2 = 1 -> true
$z3 = 1 | goto [?= z0 = $z2] -> true
$z3 = 1 | $z2 = 0 -> true
$z3 = 1 | z0 = $z2 -> false
$z3 = 1 | if z0 == 0 goto b5 = 0 -> false
$z3 = 1 | b4 = 1 -> false
$z3 = 1 | i3 = i3 + b4 -> false
$z3 = 1 | b5 = 0 -> false
$z3 = 1 | if i3 <= b5 goto $z3 = 0 -> true
$z3 = 1 | $z3 = 1 -> false
$z3 = 1 | goto [?= z1 = $z3] -> false
$z3 = 1 | $z3 = 0 -> false
$z3 = 1 | z1 = $z3 -> true
$z3 = 1 | if z1 == 0 goto $r11 = new api_a.A -> false
$z3 = 1 | b6 = 10 -> false
$z3 = 1 | b7 = 20 -> false
$z3 = 1 | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
$z3 = 1 | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
$z3 = 1 | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
$z3 = 1 | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
$z3 = 1 | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
$z3 = 1 | $r11 = new api_a.A -> false
$z3 = 1 | specialinvoke $r11.<api_a.A: void <init>()>() -> false
$z3 = 1 | r16 = $r11 -> false
$z3 = 1 | b8 = 1 -> false
$z3 = 1 | b2 = 5 -> false
$z3 = 1 | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
$z3 = 1 | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
$z3 = 1 | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
$z3 = 1 | virtualinvoke r16.<api_a.A: void rDec()>() -> false
$z3 = 1 | virtualinvoke r2.<api_a.A: void print()>() -> false
$z3 = 1 | return -> false
goto [?= z1 = $z3] | r1 = "Start print" -> false
goto [?= z1 = $z3] | $r6 = <java.lang.System: java.io.PrintStream out> -> false
goto [?= z1 = $z3] | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
goto [?= z1 = $z3] | $r7 = new api_a.A -> false
goto [?= z1 = $z3] | specialinvoke $r7.<api_a.A: void <init>()>() -> false
goto [?= z1 = $z3] | r2 = $r7 -> false
goto [?= z1 = $z3] | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
goto [?= z1 = $z3] | $r8 = <java.lang.System: java.io.PrintStream out> -> false
goto [?= z1 = $z3] | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
goto [?= z1 = $z3] | b0 = 0 -> false
goto [?= z1 = $z3] | $r9 = new testAB.MyInt -> false
goto [?= z1 = $z3] | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
goto [?= z1 = $z3] | r4 = $r9 -> false
goto [?= z1 = $z3] | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
goto [?= z1 = $z3] | $r10.<testAB.YourInt: int y> = 1 -> false
goto [?= z1 = $z3] | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
goto [?= z1 = $z3] | r5.<testAB.YourInt: int y> = 1 -> false
goto [?= z1 = $z3] | i3 = r4.<testAB.MyInt: int x> -> false
goto [?= z1 = $z3] | b1 = 0 -> false
goto [?= z1 = $z3] | if i3 <= b1 goto $z2 = 0 -> false
goto [?= z1 = $z3] | $z2 = 1 -> true
goto [?= z1 = $z3] | goto [?= z0 = $z2] -> true
goto [?= z1 = $z3] | $z2 = 0 -> true
goto [?= z1 = $z3] | z0 = $z2 -> false
goto [?= z1 = $z3] | if z0 == 0 goto b5 = 0 -> false
goto [?= z1 = $z3] | b4 = 1 -> false
goto [?= z1 = $z3] | i3 = i3 + b4 -> false
goto [?= z1 = $z3] | b5 = 0 -> false
goto [?= z1 = $z3] | if i3 <= b5 goto $z3 = 0 -> true
goto [?= z1 = $z3] | $z3 = 1 -> false
goto [?= z1 = $z3] | goto [?= z1 = $z3] -> false
goto [?= z1 = $z3] | $z3 = 0 -> false
goto [?= z1 = $z3] | z1 = $z3 -> true
goto [?= z1 = $z3] | if z1 == 0 goto $r11 = new api_a.A -> false
goto [?= z1 = $z3] | b6 = 10 -> false
goto [?= z1 = $z3] | b7 = 20 -> false
goto [?= z1 = $z3] | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
goto [?= z1 = $z3] | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
goto [?= z1 = $z3] | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
goto [?= z1 = $z3] | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
goto [?= z1 = $z3] | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
goto [?= z1 = $z3] | $r11 = new api_a.A -> false
goto [?= z1 = $z3] | specialinvoke $r11.<api_a.A: void <init>()>() -> false
goto [?= z1 = $z3] | r16 = $r11 -> false
goto [?= z1 = $z3] | b8 = 1 -> false
goto [?= z1 = $z3] | b2 = 5 -> false
goto [?= z1 = $z3] | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
goto [?= z1 = $z3] | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
goto [?= z1 = $z3] | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
goto [?= z1 = $z3] | virtualinvoke r16.<api_a.A: void rDec()>() -> false
goto [?= z1 = $z3] | virtualinvoke r2.<api_a.A: void print()>() -> false
goto [?= z1 = $z3] | return -> false
$z3 = 0 | r1 = "Start print" -> false
$z3 = 0 | $r6 = <java.lang.System: java.io.PrintStream out> -> false
$z3 = 0 | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
$z3 = 0 | $r7 = new api_a.A -> false
$z3 = 0 | specialinvoke $r7.<api_a.A: void <init>()>() -> false
$z3 = 0 | r2 = $r7 -> false
$z3 = 0 | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
$z3 = 0 | $r8 = <java.lang.System: java.io.PrintStream out> -> false
$z3 = 0 | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
$z3 = 0 | b0 = 0 -> false
$z3 = 0 | $r9 = new testAB.MyInt -> false
$z3 = 0 | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
$z3 = 0 | r4 = $r9 -> false
$z3 = 0 | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
$z3 = 0 | $r10.<testAB.YourInt: int y> = 1 -> false
$z3 = 0 | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
$z3 = 0 | r5.<testAB.YourInt: int y> = 1 -> false
$z3 = 0 | i3 = r4.<testAB.MyInt: int x> -> false
$z3 = 0 | b1 = 0 -> false
$z3 = 0 | if i3 <= b1 goto $z2 = 0 -> false
$z3 = 0 | $z2 = 1 -> true
$z3 = 0 | goto [?= z0 = $z2] -> true
$z3 = 0 | $z2 = 0 -> true
$z3 = 0 | z0 = $z2 -> false
$z3 = 0 | if z0 == 0 goto b5 = 0 -> false
$z3 = 0 | b4 = 1 -> false
$z3 = 0 | i3 = i3 + b4 -> false
$z3 = 0 | b5 = 0 -> false
$z3 = 0 | if i3 <= b5 goto $z3 = 0 -> true
$z3 = 0 | $z3 = 1 -> false
$z3 = 0 | goto [?= z1 = $z3] -> false
$z3 = 0 | $z3 = 0 -> false
$z3 = 0 | z1 = $z3 -> true
$z3 = 0 | if z1 == 0 goto $r11 = new api_a.A -> false
$z3 = 0 | b6 = 10 -> false
$z3 = 0 | b7 = 20 -> false
$z3 = 0 | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
$z3 = 0 | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
$z3 = 0 | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
$z3 = 0 | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
$z3 = 0 | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
$z3 = 0 | $r11 = new api_a.A -> false
$z3 = 0 | specialinvoke $r11.<api_a.A: void <init>()>() -> false
$z3 = 0 | r16 = $r11 -> false
$z3 = 0 | b8 = 1 -> false
$z3 = 0 | b2 = 5 -> false
$z3 = 0 | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
$z3 = 0 | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
$z3 = 0 | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
$z3 = 0 | virtualinvoke r16.<api_a.A: void rDec()>() -> false
$z3 = 0 | virtualinvoke r2.<api_a.A: void print()>() -> false
$z3 = 0 | return -> false
z1 = $z3 | r1 = "Start print" -> false
z1 = $z3 | $r6 = <java.lang.System: java.io.PrintStream out> -> false
z1 = $z3 | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
z1 = $z3 | $r7 = new api_a.A -> false
z1 = $z3 | specialinvoke $r7.<api_a.A: void <init>()>() -> false
z1 = $z3 | r2 = $r7 -> false
z1 = $z3 | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
z1 = $z3 | $r8 = <java.lang.System: java.io.PrintStream out> -> false
z1 = $z3 | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
z1 = $z3 | b0 = 0 -> false
z1 = $z3 | $r9 = new testAB.MyInt -> false
z1 = $z3 | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
z1 = $z3 | r4 = $r9 -> false
z1 = $z3 | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
z1 = $z3 | $r10.<testAB.YourInt: int y> = 1 -> false
z1 = $z3 | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
z1 = $z3 | r5.<testAB.YourInt: int y> = 1 -> false
z1 = $z3 | i3 = r4.<testAB.MyInt: int x> -> true
z1 = $z3 | b1 = 0 -> false
z1 = $z3 | if i3 <= b1 goto $z2 = 0 -> true
z1 = $z3 | $z2 = 1 -> false
z1 = $z3 | goto [?= z0 = $z2] -> false
z1 = $z3 | $z2 = 0 -> false
z1 = $z3 | z0 = $z2 -> true
z1 = $z3 | if z0 == 0 goto b5 = 0 -> false
z1 = $z3 | b4 = 1 -> false
z1 = $z3 | i3 = i3 + b4 -> true
z1 = $z3 | b5 = 0 -> true
z1 = $z3 | if i3 <= b5 goto $z3 = 0 -> false
z1 = $z3 | $z3 = 1 -> true
z1 = $z3 | goto [?= z1 = $z3] -> true
z1 = $z3 | $z3 = 0 -> true
z1 = $z3 | z1 = $z3 -> false
z1 = $z3 | if z1 == 0 goto $r11 = new api_a.A -> true
z1 = $z3 | b6 = 10 -> false
z1 = $z3 | b7 = 20 -> false
z1 = $z3 | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
z1 = $z3 | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
z1 = $z3 | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
z1 = $z3 | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
z1 = $z3 | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
z1 = $z3 | $r11 = new api_a.A -> false
z1 = $z3 | specialinvoke $r11.<api_a.A: void <init>()>() -> false
z1 = $z3 | r16 = $r11 -> false
z1 = $z3 | b8 = 1 -> false
z1 = $z3 | b2 = 5 -> false
z1 = $z3 | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
z1 = $z3 | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
z1 = $z3 | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
z1 = $z3 | virtualinvoke r16.<api_a.A: void rDec()>() -> false
z1 = $z3 | virtualinvoke r2.<api_a.A: void print()>() -> false
z1 = $z3 | return -> true
if z1 == 0 goto $r11 = new api_a.A | r1 = "Start print" -> false
if z1 == 0 goto $r11 = new api_a.A | $r6 = <java.lang.System: java.io.PrintStream out> -> false
if z1 == 0 goto $r11 = new api_a.A | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
if z1 == 0 goto $r11 = new api_a.A | $r7 = new api_a.A -> false
if z1 == 0 goto $r11 = new api_a.A | specialinvoke $r7.<api_a.A: void <init>()>() -> false
if z1 == 0 goto $r11 = new api_a.A | r2 = $r7 -> false
if z1 == 0 goto $r11 = new api_a.A | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
if z1 == 0 goto $r11 = new api_a.A | $r8 = <java.lang.System: java.io.PrintStream out> -> false
if z1 == 0 goto $r11 = new api_a.A | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
if z1 == 0 goto $r11 = new api_a.A | b0 = 0 -> false
if z1 == 0 goto $r11 = new api_a.A | $r9 = new testAB.MyInt -> false
if z1 == 0 goto $r11 = new api_a.A | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
if z1 == 0 goto $r11 = new api_a.A | r4 = $r9 -> false
if z1 == 0 goto $r11 = new api_a.A | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
if z1 == 0 goto $r11 = new api_a.A | $r10.<testAB.YourInt: int y> = 1 -> false
if z1 == 0 goto $r11 = new api_a.A | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
if z1 == 0 goto $r11 = new api_a.A | r5.<testAB.YourInt: int y> = 1 -> false
if z1 == 0 goto $r11 = new api_a.A | i3 = r4.<testAB.MyInt: int x> -> false
if z1 == 0 goto $r11 = new api_a.A | b1 = 0 -> false
if z1 == 0 goto $r11 = new api_a.A | if i3 <= b1 goto $z2 = 0 -> false
if z1 == 0 goto $r11 = new api_a.A | $z2 = 1 -> true
if z1 == 0 goto $r11 = new api_a.A | goto [?= z0 = $z2] -> true
if z1 == 0 goto $r11 = new api_a.A | $z2 = 0 -> true
if z1 == 0 goto $r11 = new api_a.A | z0 = $z2 -> false
if z1 == 0 goto $r11 = new api_a.A | if z0 == 0 goto b5 = 0 -> false
if z1 == 0 goto $r11 = new api_a.A | b4 = 1 -> false
if z1 == 0 goto $r11 = new api_a.A | i3 = i3 + b4 -> false
if z1 == 0 goto $r11 = new api_a.A | b5 = 0 -> false
if z1 == 0 goto $r11 = new api_a.A | if i3 <= b5 goto $z3 = 0 -> true
if z1 == 0 goto $r11 = new api_a.A | $z3 = 1 -> false
if z1 == 0 goto $r11 = new api_a.A | goto [?= z1 = $z3] -> false
if z1 == 0 goto $r11 = new api_a.A | $z3 = 0 -> false
if z1 == 0 goto $r11 = new api_a.A | z1 = $z3 -> true
if z1 == 0 goto $r11 = new api_a.A | if z1 == 0 goto $r11 = new api_a.A -> false
if z1 == 0 goto $r11 = new api_a.A | b6 = 10 -> false
if z1 == 0 goto $r11 = new api_a.A | b7 = 20 -> false
if z1 == 0 goto $r11 = new api_a.A | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
if z1 == 0 goto $r11 = new api_a.A | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
if z1 == 0 goto $r11 = new api_a.A | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
if z1 == 0 goto $r11 = new api_a.A | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
if z1 == 0 goto $r11 = new api_a.A | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
if z1 == 0 goto $r11 = new api_a.A | $r11 = new api_a.A -> false
if z1 == 0 goto $r11 = new api_a.A | specialinvoke $r11.<api_a.A: void <init>()>() -> false
if z1 == 0 goto $r11 = new api_a.A | r16 = $r11 -> false
if z1 == 0 goto $r11 = new api_a.A | b8 = 1 -> false
if z1 == 0 goto $r11 = new api_a.A | b2 = 5 -> false
if z1 == 0 goto $r11 = new api_a.A | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
if z1 == 0 goto $r11 = new api_a.A | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
if z1 == 0 goto $r11 = new api_a.A | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
if z1 == 0 goto $r11 = new api_a.A | virtualinvoke r16.<api_a.A: void rDec()>() -> false
if z1 == 0 goto $r11 = new api_a.A | virtualinvoke r2.<api_a.A: void print()>() -> false
if z1 == 0 goto $r11 = new api_a.A | return -> false
b6 = 10 | r1 = "Start print" -> false
b6 = 10 | $r6 = <java.lang.System: java.io.PrintStream out> -> false
b6 = 10 | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
b6 = 10 | $r7 = new api_a.A -> false
b6 = 10 | specialinvoke $r7.<api_a.A: void <init>()>() -> false
b6 = 10 | r2 = $r7 -> false
b6 = 10 | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
b6 = 10 | $r8 = <java.lang.System: java.io.PrintStream out> -> false
b6 = 10 | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
b6 = 10 | b0 = 0 -> false
b6 = 10 | $r9 = new testAB.MyInt -> false
b6 = 10 | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
b6 = 10 | r4 = $r9 -> false
b6 = 10 | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
b6 = 10 | $r10.<testAB.YourInt: int y> = 1 -> false
b6 = 10 | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
b6 = 10 | r5.<testAB.YourInt: int y> = 1 -> false
b6 = 10 | i3 = r4.<testAB.MyInt: int x> -> false
b6 = 10 | b1 = 0 -> false
b6 = 10 | if i3 <= b1 goto $z2 = 0 -> false
b6 = 10 | $z2 = 1 -> false
b6 = 10 | goto [?= z0 = $z2] -> false
b6 = 10 | $z2 = 0 -> false
b6 = 10 | z0 = $z2 -> false
b6 = 10 | if z0 == 0 goto b5 = 0 -> false
b6 = 10 | b4 = 1 -> false
b6 = 10 | i3 = i3 + b4 -> false
b6 = 10 | b5 = 0 -> false
b6 = 10 | if i3 <= b5 goto $z3 = 0 -> false
b6 = 10 | $z3 = 1 -> false
b6 = 10 | goto [?= z1 = $z3] -> false
b6 = 10 | $z3 = 0 -> false
b6 = 10 | z1 = $z3 -> false
b6 = 10 | if z1 == 0 goto $r11 = new api_a.A -> false
b6 = 10 | b6 = 10 -> false
b6 = 10 | b7 = 20 -> false
b6 = 10 | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> true
b6 = 10 | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> true
b6 = 10 | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> true
b6 = 10 | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
b6 = 10 | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
b6 = 10 | $r11 = new api_a.A -> false
b6 = 10 | specialinvoke $r11.<api_a.A: void <init>()>() -> false
b6 = 10 | r16 = $r11 -> false
b6 = 10 | b8 = 1 -> false
b6 = 10 | b2 = 5 -> false
b6 = 10 | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
b6 = 10 | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
b6 = 10 | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
b6 = 10 | virtualinvoke r16.<api_a.A: void rDec()>() -> false
b6 = 10 | virtualinvoke r2.<api_a.A: void print()>() -> false
b6 = 10 | return -> false
b7 = 20 | r1 = "Start print" -> false
b7 = 20 | $r6 = <java.lang.System: java.io.PrintStream out> -> false
b7 = 20 | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
b7 = 20 | $r7 = new api_a.A -> false
b7 = 20 | specialinvoke $r7.<api_a.A: void <init>()>() -> false
b7 = 20 | r2 = $r7 -> false
b7 = 20 | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
b7 = 20 | $r8 = <java.lang.System: java.io.PrintStream out> -> false
b7 = 20 | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
b7 = 20 | b0 = 0 -> false
b7 = 20 | $r9 = new testAB.MyInt -> false
b7 = 20 | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
b7 = 20 | r4 = $r9 -> false
b7 = 20 | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
b7 = 20 | $r10.<testAB.YourInt: int y> = 1 -> false
b7 = 20 | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
b7 = 20 | r5.<testAB.YourInt: int y> = 1 -> false
b7 = 20 | i3 = r4.<testAB.MyInt: int x> -> false
b7 = 20 | b1 = 0 -> false
b7 = 20 | if i3 <= b1 goto $z2 = 0 -> false
b7 = 20 | $z2 = 1 -> false
b7 = 20 | goto [?= z0 = $z2] -> false
b7 = 20 | $z2 = 0 -> false
b7 = 20 | z0 = $z2 -> false
b7 = 20 | if z0 == 0 goto b5 = 0 -> false
b7 = 20 | b4 = 1 -> false
b7 = 20 | i3 = i3 + b4 -> false
b7 = 20 | b5 = 0 -> false
b7 = 20 | if i3 <= b5 goto $z3 = 0 -> false
b7 = 20 | $z3 = 1 -> false
b7 = 20 | goto [?= z1 = $z3] -> false
b7 = 20 | $z3 = 0 -> false
b7 = 20 | z1 = $z3 -> false
b7 = 20 | if z1 == 0 goto $r11 = new api_a.A -> false
b7 = 20 | b6 = 10 -> false
b7 = 20 | b7 = 20 -> false
b7 = 20 | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> true
b7 = 20 | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> true
b7 = 20 | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> true
b7 = 20 | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
b7 = 20 | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
b7 = 20 | $r11 = new api_a.A -> false
b7 = 20 | specialinvoke $r11.<api_a.A: void <init>()>() -> false
b7 = 20 | r16 = $r11 -> false
b7 = 20 | b8 = 1 -> false
b7 = 20 | b2 = 5 -> false
b7 = 20 | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
b7 = 20 | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
b7 = 20 | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
b7 = 20 | virtualinvoke r16.<api_a.A: void rDec()>() -> false
b7 = 20 | virtualinvoke r2.<api_a.A: void print()>() -> false
b7 = 20 | return -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | r1 = "Start print" -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | $r6 = <java.lang.System: java.io.PrintStream out> -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | $r7 = new api_a.A -> true
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | specialinvoke $r7.<api_a.A: void <init>()>() -> true
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | r2 = $r7 -> true
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | $r8 = <java.lang.System: java.io.PrintStream out> -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | b0 = 0 -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | $r9 = new testAB.MyInt -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | r4 = $r9 -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | $r10.<testAB.YourInt: int y> = 1 -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | r5.<testAB.YourInt: int y> = 1 -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | i3 = r4.<testAB.MyInt: int x> -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | b1 = 0 -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | if i3 <= b1 goto $z2 = 0 -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | $z2 = 1 -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | goto [?= z0 = $z2] -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | $z2 = 0 -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | z0 = $z2 -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | if z0 == 0 goto b5 = 0 -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | b4 = 1 -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | i3 = i3 + b4 -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | b5 = 0 -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | if i3 <= b5 goto $z3 = 0 -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | $z3 = 1 -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | goto [?= z1 = $z3] -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | $z3 = 0 -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | z1 = $z3 -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | if z1 == 0 goto $r11 = new api_a.A -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | b6 = 10 -> true
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | b7 = 20 -> true
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> true
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> true
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> true
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | $r11 = new api_a.A -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | specialinvoke $r11.<api_a.A: void <init>()>() -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | r16 = $r11 -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | b8 = 1 -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | b2 = 5 -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | virtualinvoke r16.<api_a.A: void rDec()>() -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | virtualinvoke r2.<api_a.A: void print()>() -> false
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) | return -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | r1 = "Start print" -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | $r6 = <java.lang.System: java.io.PrintStream out> -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | $r7 = new api_a.A -> true
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | specialinvoke $r7.<api_a.A: void <init>()>() -> true
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | r2 = $r7 -> true
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | $r8 = <java.lang.System: java.io.PrintStream out> -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | b0 = 0 -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | $r9 = new testAB.MyInt -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | r4 = $r9 -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | $r10.<testAB.YourInt: int y> = 1 -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | r5.<testAB.YourInt: int y> = 1 -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | i3 = r4.<testAB.MyInt: int x> -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | b1 = 0 -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | if i3 <= b1 goto $z2 = 0 -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | $z2 = 1 -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | goto [?= z0 = $z2] -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | $z2 = 0 -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | z0 = $z2 -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | if z0 == 0 goto b5 = 0 -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | b4 = 1 -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | i3 = i3 + b4 -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | b5 = 0 -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | if i3 <= b5 goto $z3 = 0 -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | $z3 = 1 -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | goto [?= z1 = $z3] -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | $z3 = 0 -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | z1 = $z3 -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | if z1 == 0 goto $r11 = new api_a.A -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | b6 = 10 -> true
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | b7 = 20 -> true
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> true
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> true
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> true
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | $r11 = new api_a.A -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | specialinvoke $r11.<api_a.A: void <init>()>() -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | r16 = $r11 -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | b8 = 1 -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | b2 = 5 -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | virtualinvoke r16.<api_a.A: void rDec()>() -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | virtualinvoke r2.<api_a.A: void print()>() -> false
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) | return -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | r1 = "Start print" -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | $r6 = <java.lang.System: java.io.PrintStream out> -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | $r7 = new api_a.A -> true
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | specialinvoke $r7.<api_a.A: void <init>()>() -> true
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | r2 = $r7 -> true
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | $r8 = <java.lang.System: java.io.PrintStream out> -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | b0 = 0 -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | $r9 = new testAB.MyInt -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | r4 = $r9 -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | $r10.<testAB.YourInt: int y> = 1 -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | r5.<testAB.YourInt: int y> = 1 -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | i3 = r4.<testAB.MyInt: int x> -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | b1 = 0 -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | if i3 <= b1 goto $z2 = 0 -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | $z2 = 1 -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | goto [?= z0 = $z2] -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | $z2 = 0 -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | z0 = $z2 -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | if z0 == 0 goto b5 = 0 -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | b4 = 1 -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | i3 = i3 + b4 -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | b5 = 0 -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | if i3 <= b5 goto $z3 = 0 -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | $z3 = 1 -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | goto [?= z1 = $z3] -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | $z3 = 0 -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | z1 = $z3 -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | if z1 == 0 goto $r11 = new api_a.A -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | b6 = 10 -> true
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | b7 = 20 -> true
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> true
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> true
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> true
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | $r11 = new api_a.A -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | specialinvoke $r11.<api_a.A: void <init>()>() -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | r16 = $r11 -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | b8 = 1 -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | b2 = 5 -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | virtualinvoke r16.<api_a.A: void rDec()>() -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | virtualinvoke r2.<api_a.A: void print()>() -> false
virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) | return -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | r1 = "Start print" -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | $r6 = <java.lang.System: java.io.PrintStream out> -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | $r7 = new api_a.A -> true
virtualinvoke r2.<api_a.A: void lAdd()>() | specialinvoke $r7.<api_a.A: void <init>()>() -> true
virtualinvoke r2.<api_a.A: void lAdd()>() | r2 = $r7 -> true
virtualinvoke r2.<api_a.A: void lAdd()>() | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | $r8 = <java.lang.System: java.io.PrintStream out> -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | b0 = 0 -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | $r9 = new testAB.MyInt -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | r4 = $r9 -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | $r10.<testAB.YourInt: int y> = 1 -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | r5.<testAB.YourInt: int y> = 1 -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | i3 = r4.<testAB.MyInt: int x> -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | b1 = 0 -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | if i3 <= b1 goto $z2 = 0 -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | $z2 = 1 -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | goto [?= z0 = $z2] -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | $z2 = 0 -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | z0 = $z2 -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | if z0 == 0 goto b5 = 0 -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | b4 = 1 -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | i3 = i3 + b4 -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | b5 = 0 -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | if i3 <= b5 goto $z3 = 0 -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | $z3 = 1 -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | goto [?= z1 = $z3] -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | $z3 = 0 -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | z1 = $z3 -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | if z1 == 0 goto $r11 = new api_a.A -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | b6 = 10 -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | b7 = 20 -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | $r11 = new api_a.A -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | specialinvoke $r11.<api_a.A: void <init>()>() -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | r16 = $r11 -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | b8 = 1 -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | b2 = 5 -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | virtualinvoke r16.<api_a.A: void rDec()>() -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | virtualinvoke r2.<api_a.A: void print()>() -> false
virtualinvoke r2.<api_a.A: void lAdd()>() | return -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | r1 = "Start print" -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | $r6 = <java.lang.System: java.io.PrintStream out> -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | $r7 = new api_a.A -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | specialinvoke $r7.<api_a.A: void <init>()>() -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | r2 = $r7 -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | $r8 = <java.lang.System: java.io.PrintStream out> -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | b0 = 0 -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | $r9 = new testAB.MyInt -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | r4 = $r9 -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | $r10.<testAB.YourInt: int y> = 1 -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | r5.<testAB.YourInt: int y> = 1 -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | i3 = r4.<testAB.MyInt: int x> -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | b1 = 0 -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | if i3 <= b1 goto $z2 = 0 -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | $z2 = 1 -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | goto [?= z0 = $z2] -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | $z2 = 0 -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | z0 = $z2 -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | if z0 == 0 goto b5 = 0 -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | b4 = 1 -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | i3 = i3 + b4 -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | b5 = 0 -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | if i3 <= b5 goto $z3 = 0 -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | $z3 = 1 -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | goto [?= z1 = $z3] -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | $z3 = 0 -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | z1 = $z3 -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | if z1 == 0 goto $r11 = new api_a.A -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | b6 = 10 -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | b7 = 20 -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | $r11 = new api_a.A -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | specialinvoke $r11.<api_a.A: void <init>()>() -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | r16 = $r11 -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | b8 = 1 -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | b2 = 5 -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | virtualinvoke r16.<api_a.A: void rDec()>() -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | virtualinvoke r2.<api_a.A: void print()>() -> false
goto [?= virtualinvoke r2.<api_a.A: void print()>()] | return -> false
$r11 = new api_a.A | r1 = "Start print" -> false
$r11 = new api_a.A | $r6 = <java.lang.System: java.io.PrintStream out> -> false
$r11 = new api_a.A | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
$r11 = new api_a.A | $r7 = new api_a.A -> false
$r11 = new api_a.A | specialinvoke $r7.<api_a.A: void <init>()>() -> false
$r11 = new api_a.A | r2 = $r7 -> false
$r11 = new api_a.A | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
$r11 = new api_a.A | $r8 = <java.lang.System: java.io.PrintStream out> -> false
$r11 = new api_a.A | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
$r11 = new api_a.A | b0 = 0 -> false
$r11 = new api_a.A | $r9 = new testAB.MyInt -> false
$r11 = new api_a.A | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
$r11 = new api_a.A | r4 = $r9 -> false
$r11 = new api_a.A | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
$r11 = new api_a.A | $r10.<testAB.YourInt: int y> = 1 -> false
$r11 = new api_a.A | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
$r11 = new api_a.A | r5.<testAB.YourInt: int y> = 1 -> false
$r11 = new api_a.A | i3 = r4.<testAB.MyInt: int x> -> false
$r11 = new api_a.A | b1 = 0 -> false
$r11 = new api_a.A | if i3 <= b1 goto $z2 = 0 -> false
$r11 = new api_a.A | $z2 = 1 -> false
$r11 = new api_a.A | goto [?= z0 = $z2] -> false
$r11 = new api_a.A | $z2 = 0 -> false
$r11 = new api_a.A | z0 = $z2 -> false
$r11 = new api_a.A | if z0 == 0 goto b5 = 0 -> false
$r11 = new api_a.A | b4 = 1 -> false
$r11 = new api_a.A | i3 = i3 + b4 -> false
$r11 = new api_a.A | b5 = 0 -> false
$r11 = new api_a.A | if i3 <= b5 goto $z3 = 0 -> false
$r11 = new api_a.A | $z3 = 1 -> false
$r11 = new api_a.A | goto [?= z1 = $z3] -> false
$r11 = new api_a.A | $z3 = 0 -> false
$r11 = new api_a.A | z1 = $z3 -> false
$r11 = new api_a.A | if z1 == 0 goto $r11 = new api_a.A -> false
$r11 = new api_a.A | b6 = 10 -> false
$r11 = new api_a.A | b7 = 20 -> false
$r11 = new api_a.A | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
$r11 = new api_a.A | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
$r11 = new api_a.A | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
$r11 = new api_a.A | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
$r11 = new api_a.A | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
$r11 = new api_a.A | $r11 = new api_a.A -> true
$r11 = new api_a.A | specialinvoke $r11.<api_a.A: void <init>()>() -> true
$r11 = new api_a.A | r16 = $r11 -> true
$r11 = new api_a.A | b8 = 1 -> false
$r11 = new api_a.A | b2 = 5 -> false
$r11 = new api_a.A | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> true
$r11 = new api_a.A | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> true
$r11 = new api_a.A | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> true
$r11 = new api_a.A | virtualinvoke r16.<api_a.A: void rDec()>() -> true
$r11 = new api_a.A | virtualinvoke r2.<api_a.A: void print()>() -> false
$r11 = new api_a.A | return -> false
specialinvoke $r11.<api_a.A: void <init>()>() | r1 = "Start print" -> false
specialinvoke $r11.<api_a.A: void <init>()>() | $r6 = <java.lang.System: java.io.PrintStream out> -> false
specialinvoke $r11.<api_a.A: void <init>()>() | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
specialinvoke $r11.<api_a.A: void <init>()>() | $r7 = new api_a.A -> false
specialinvoke $r11.<api_a.A: void <init>()>() | specialinvoke $r7.<api_a.A: void <init>()>() -> false
specialinvoke $r11.<api_a.A: void <init>()>() | r2 = $r7 -> false
specialinvoke $r11.<api_a.A: void <init>()>() | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
specialinvoke $r11.<api_a.A: void <init>()>() | $r8 = <java.lang.System: java.io.PrintStream out> -> false
specialinvoke $r11.<api_a.A: void <init>()>() | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
specialinvoke $r11.<api_a.A: void <init>()>() | b0 = 0 -> false
specialinvoke $r11.<api_a.A: void <init>()>() | $r9 = new testAB.MyInt -> false
specialinvoke $r11.<api_a.A: void <init>()>() | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
specialinvoke $r11.<api_a.A: void <init>()>() | r4 = $r9 -> false
specialinvoke $r11.<api_a.A: void <init>()>() | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
specialinvoke $r11.<api_a.A: void <init>()>() | $r10.<testAB.YourInt: int y> = 1 -> false
specialinvoke $r11.<api_a.A: void <init>()>() | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
specialinvoke $r11.<api_a.A: void <init>()>() | r5.<testAB.YourInt: int y> = 1 -> false
specialinvoke $r11.<api_a.A: void <init>()>() | i3 = r4.<testAB.MyInt: int x> -> false
specialinvoke $r11.<api_a.A: void <init>()>() | b1 = 0 -> false
specialinvoke $r11.<api_a.A: void <init>()>() | if i3 <= b1 goto $z2 = 0 -> false
specialinvoke $r11.<api_a.A: void <init>()>() | $z2 = 1 -> false
specialinvoke $r11.<api_a.A: void <init>()>() | goto [?= z0 = $z2] -> false
specialinvoke $r11.<api_a.A: void <init>()>() | $z2 = 0 -> false
specialinvoke $r11.<api_a.A: void <init>()>() | z0 = $z2 -> false
specialinvoke $r11.<api_a.A: void <init>()>() | if z0 == 0 goto b5 = 0 -> false
specialinvoke $r11.<api_a.A: void <init>()>() | b4 = 1 -> false
specialinvoke $r11.<api_a.A: void <init>()>() | i3 = i3 + b4 -> false
specialinvoke $r11.<api_a.A: void <init>()>() | b5 = 0 -> false
specialinvoke $r11.<api_a.A: void <init>()>() | if i3 <= b5 goto $z3 = 0 -> false
specialinvoke $r11.<api_a.A: void <init>()>() | $z3 = 1 -> false
specialinvoke $r11.<api_a.A: void <init>()>() | goto [?= z1 = $z3] -> false
specialinvoke $r11.<api_a.A: void <init>()>() | $z3 = 0 -> false
specialinvoke $r11.<api_a.A: void <init>()>() | z1 = $z3 -> false
specialinvoke $r11.<api_a.A: void <init>()>() | if z1 == 0 goto $r11 = new api_a.A -> false
specialinvoke $r11.<api_a.A: void <init>()>() | b6 = 10 -> false
specialinvoke $r11.<api_a.A: void <init>()>() | b7 = 20 -> false
specialinvoke $r11.<api_a.A: void <init>()>() | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
specialinvoke $r11.<api_a.A: void <init>()>() | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
specialinvoke $r11.<api_a.A: void <init>()>() | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
specialinvoke $r11.<api_a.A: void <init>()>() | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
specialinvoke $r11.<api_a.A: void <init>()>() | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
specialinvoke $r11.<api_a.A: void <init>()>() | $r11 = new api_a.A -> true
specialinvoke $r11.<api_a.A: void <init>()>() | specialinvoke $r11.<api_a.A: void <init>()>() -> true
specialinvoke $r11.<api_a.A: void <init>()>() | r16 = $r11 -> true
specialinvoke $r11.<api_a.A: void <init>()>() | b8 = 1 -> false
specialinvoke $r11.<api_a.A: void <init>()>() | b2 = 5 -> false
specialinvoke $r11.<api_a.A: void <init>()>() | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> true
specialinvoke $r11.<api_a.A: void <init>()>() | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> true
specialinvoke $r11.<api_a.A: void <init>()>() | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> true
specialinvoke $r11.<api_a.A: void <init>()>() | virtualinvoke r16.<api_a.A: void rDec()>() -> true
specialinvoke $r11.<api_a.A: void <init>()>() | virtualinvoke r2.<api_a.A: void print()>() -> false
specialinvoke $r11.<api_a.A: void <init>()>() | return -> false
r16 = $r11 | r1 = "Start print" -> false
r16 = $r11 | $r6 = <java.lang.System: java.io.PrintStream out> -> false
r16 = $r11 | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
r16 = $r11 | $r7 = new api_a.A -> false
r16 = $r11 | specialinvoke $r7.<api_a.A: void <init>()>() -> false
r16 = $r11 | r2 = $r7 -> false
r16 = $r11 | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
r16 = $r11 | $r8 = <java.lang.System: java.io.PrintStream out> -> false
r16 = $r11 | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
r16 = $r11 | b0 = 0 -> false
r16 = $r11 | $r9 = new testAB.MyInt -> false
r16 = $r11 | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
r16 = $r11 | r4 = $r9 -> false
r16 = $r11 | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
r16 = $r11 | $r10.<testAB.YourInt: int y> = 1 -> false
r16 = $r11 | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
r16 = $r11 | r5.<testAB.YourInt: int y> = 1 -> false
r16 = $r11 | i3 = r4.<testAB.MyInt: int x> -> false
r16 = $r11 | b1 = 0 -> false
r16 = $r11 | if i3 <= b1 goto $z2 = 0 -> false
r16 = $r11 | $z2 = 1 -> false
r16 = $r11 | goto [?= z0 = $z2] -> false
r16 = $r11 | $z2 = 0 -> false
r16 = $r11 | z0 = $z2 -> false
r16 = $r11 | if z0 == 0 goto b5 = 0 -> false
r16 = $r11 | b4 = 1 -> false
r16 = $r11 | i3 = i3 + b4 -> false
r16 = $r11 | b5 = 0 -> false
r16 = $r11 | if i3 <= b5 goto $z3 = 0 -> false
r16 = $r11 | $z3 = 1 -> false
r16 = $r11 | goto [?= z1 = $z3] -> false
r16 = $r11 | $z3 = 0 -> false
r16 = $r11 | z1 = $z3 -> false
r16 = $r11 | if z1 == 0 goto $r11 = new api_a.A -> false
r16 = $r11 | b6 = 10 -> false
r16 = $r11 | b7 = 20 -> false
r16 = $r11 | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
r16 = $r11 | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
r16 = $r11 | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
r16 = $r11 | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
r16 = $r11 | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
r16 = $r11 | $r11 = new api_a.A -> true
r16 = $r11 | specialinvoke $r11.<api_a.A: void <init>()>() -> true
r16 = $r11 | r16 = $r11 -> true
r16 = $r11 | b8 = 1 -> false
r16 = $r11 | b2 = 5 -> false
r16 = $r11 | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> true
r16 = $r11 | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> true
r16 = $r11 | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> true
r16 = $r11 | virtualinvoke r16.<api_a.A: void rDec()>() -> true
r16 = $r11 | virtualinvoke r2.<api_a.A: void print()>() -> false
r16 = $r11 | return -> false
b8 = 1 | r1 = "Start print" -> false
b8 = 1 | $r6 = <java.lang.System: java.io.PrintStream out> -> false
b8 = 1 | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
b8 = 1 | $r7 = new api_a.A -> false
b8 = 1 | specialinvoke $r7.<api_a.A: void <init>()>() -> false
b8 = 1 | r2 = $r7 -> false
b8 = 1 | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
b8 = 1 | $r8 = <java.lang.System: java.io.PrintStream out> -> false
b8 = 1 | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
b8 = 1 | b0 = 0 -> false
b8 = 1 | $r9 = new testAB.MyInt -> false
b8 = 1 | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
b8 = 1 | r4 = $r9 -> false
b8 = 1 | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
b8 = 1 | $r10.<testAB.YourInt: int y> = 1 -> false
b8 = 1 | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
b8 = 1 | r5.<testAB.YourInt: int y> = 1 -> false
b8 = 1 | i3 = r4.<testAB.MyInt: int x> -> false
b8 = 1 | b1 = 0 -> false
b8 = 1 | if i3 <= b1 goto $z2 = 0 -> false
b8 = 1 | $z2 = 1 -> false
b8 = 1 | goto [?= z0 = $z2] -> false
b8 = 1 | $z2 = 0 -> false
b8 = 1 | z0 = $z2 -> false
b8 = 1 | if z0 == 0 goto b5 = 0 -> false
b8 = 1 | b4 = 1 -> false
b8 = 1 | i3 = i3 + b4 -> false
b8 = 1 | b5 = 0 -> false
b8 = 1 | if i3 <= b5 goto $z3 = 0 -> false
b8 = 1 | $z3 = 1 -> false
b8 = 1 | goto [?= z1 = $z3] -> false
b8 = 1 | $z3 = 0 -> false
b8 = 1 | z1 = $z3 -> false
b8 = 1 | if z1 == 0 goto $r11 = new api_a.A -> false
b8 = 1 | b6 = 10 -> false
b8 = 1 | b7 = 20 -> false
b8 = 1 | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
b8 = 1 | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
b8 = 1 | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
b8 = 1 | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
b8 = 1 | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
b8 = 1 | $r11 = new api_a.A -> false
b8 = 1 | specialinvoke $r11.<api_a.A: void <init>()>() -> false
b8 = 1 | r16 = $r11 -> false
b8 = 1 | b8 = 1 -> false
b8 = 1 | b2 = 5 -> false
b8 = 1 | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> true
b8 = 1 | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> true
b8 = 1 | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> true
b8 = 1 | virtualinvoke r16.<api_a.A: void rDec()>() -> false
b8 = 1 | virtualinvoke r2.<api_a.A: void print()>() -> false
b8 = 1 | return -> false
b2 = 5 | r1 = "Start print" -> false
b2 = 5 | $r6 = <java.lang.System: java.io.PrintStream out> -> false
b2 = 5 | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
b2 = 5 | $r7 = new api_a.A -> false
b2 = 5 | specialinvoke $r7.<api_a.A: void <init>()>() -> false
b2 = 5 | r2 = $r7 -> false
b2 = 5 | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
b2 = 5 | $r8 = <java.lang.System: java.io.PrintStream out> -> false
b2 = 5 | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
b2 = 5 | b0 = 0 -> false
b2 = 5 | $r9 = new testAB.MyInt -> false
b2 = 5 | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
b2 = 5 | r4 = $r9 -> false
b2 = 5 | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
b2 = 5 | $r10.<testAB.YourInt: int y> = 1 -> false
b2 = 5 | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
b2 = 5 | r5.<testAB.YourInt: int y> = 1 -> false
b2 = 5 | i3 = r4.<testAB.MyInt: int x> -> false
b2 = 5 | b1 = 0 -> false
b2 = 5 | if i3 <= b1 goto $z2 = 0 -> false
b2 = 5 | $z2 = 1 -> false
b2 = 5 | goto [?= z0 = $z2] -> false
b2 = 5 | $z2 = 0 -> false
b2 = 5 | z0 = $z2 -> false
b2 = 5 | if z0 == 0 goto b5 = 0 -> false
b2 = 5 | b4 = 1 -> false
b2 = 5 | i3 = i3 + b4 -> false
b2 = 5 | b5 = 0 -> false
b2 = 5 | if i3 <= b5 goto $z3 = 0 -> false
b2 = 5 | $z3 = 1 -> false
b2 = 5 | goto [?= z1 = $z3] -> false
b2 = 5 | $z3 = 0 -> false
b2 = 5 | z1 = $z3 -> false
b2 = 5 | if z1 == 0 goto $r11 = new api_a.A -> false
b2 = 5 | b6 = 10 -> false
b2 = 5 | b7 = 20 -> false
b2 = 5 | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
b2 = 5 | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
b2 = 5 | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
b2 = 5 | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
b2 = 5 | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
b2 = 5 | $r11 = new api_a.A -> false
b2 = 5 | specialinvoke $r11.<api_a.A: void <init>()>() -> false
b2 = 5 | r16 = $r11 -> false
b2 = 5 | b8 = 1 -> false
b2 = 5 | b2 = 5 -> false
b2 = 5 | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> true
b2 = 5 | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> true
b2 = 5 | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> true
b2 = 5 | virtualinvoke r16.<api_a.A: void rDec()>() -> false
b2 = 5 | virtualinvoke r2.<api_a.A: void print()>() -> false
b2 = 5 | return -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | r1 = "Start print" -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | $r6 = <java.lang.System: java.io.PrintStream out> -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | $r7 = new api_a.A -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | specialinvoke $r7.<api_a.A: void <init>()>() -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | r2 = $r7 -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | $r8 = <java.lang.System: java.io.PrintStream out> -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | b0 = 0 -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | $r9 = new testAB.MyInt -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | r4 = $r9 -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | $r10.<testAB.YourInt: int y> = 1 -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | r5.<testAB.YourInt: int y> = 1 -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | i3 = r4.<testAB.MyInt: int x> -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | b1 = 0 -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | if i3 <= b1 goto $z2 = 0 -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | $z2 = 1 -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | goto [?= z0 = $z2] -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | $z2 = 0 -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | z0 = $z2 -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | if z0 == 0 goto b5 = 0 -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | b4 = 1 -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | i3 = i3 + b4 -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | b5 = 0 -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | if i3 <= b5 goto $z3 = 0 -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | $z3 = 1 -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | goto [?= z1 = $z3] -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | $z3 = 0 -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | z1 = $z3 -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | if z1 == 0 goto $r11 = new api_a.A -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | b6 = 10 -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | b7 = 20 -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | $r11 = new api_a.A -> true
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | specialinvoke $r11.<api_a.A: void <init>()>() -> true
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | r16 = $r11 -> true
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | b8 = 1 -> true
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | b2 = 5 -> true
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> true
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> true
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> true
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | virtualinvoke r16.<api_a.A: void rDec()>() -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | virtualinvoke r2.<api_a.A: void print()>() -> false
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) | return -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | r1 = "Start print" -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | $r6 = <java.lang.System: java.io.PrintStream out> -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | $r7 = new api_a.A -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | specialinvoke $r7.<api_a.A: void <init>()>() -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | r2 = $r7 -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | $r8 = <java.lang.System: java.io.PrintStream out> -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | b0 = 0 -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | $r9 = new testAB.MyInt -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | r4 = $r9 -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | $r10.<testAB.YourInt: int y> = 1 -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | r5.<testAB.YourInt: int y> = 1 -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | i3 = r4.<testAB.MyInt: int x> -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | b1 = 0 -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | if i3 <= b1 goto $z2 = 0 -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | $z2 = 1 -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | goto [?= z0 = $z2] -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | $z2 = 0 -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | z0 = $z2 -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | if z0 == 0 goto b5 = 0 -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | b4 = 1 -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | i3 = i3 + b4 -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | b5 = 0 -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | if i3 <= b5 goto $z3 = 0 -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | $z3 = 1 -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | goto [?= z1 = $z3] -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | $z3 = 0 -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | z1 = $z3 -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | if z1 == 0 goto $r11 = new api_a.A -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | b6 = 10 -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | b7 = 20 -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | $r11 = new api_a.A -> true
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | specialinvoke $r11.<api_a.A: void <init>()>() -> true
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | r16 = $r11 -> true
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | b8 = 1 -> true
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | b2 = 5 -> true
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> true
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> true
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> true
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | virtualinvoke r16.<api_a.A: void rDec()>() -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | virtualinvoke r2.<api_a.A: void print()>() -> false
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) | return -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | r1 = "Start print" -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | $r6 = <java.lang.System: java.io.PrintStream out> -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | $r7 = new api_a.A -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | specialinvoke $r7.<api_a.A: void <init>()>() -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | r2 = $r7 -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | $r8 = <java.lang.System: java.io.PrintStream out> -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | b0 = 0 -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | $r9 = new testAB.MyInt -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | r4 = $r9 -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | $r10.<testAB.YourInt: int y> = 1 -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | r5.<testAB.YourInt: int y> = 1 -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | i3 = r4.<testAB.MyInt: int x> -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | b1 = 0 -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | if i3 <= b1 goto $z2 = 0 -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | $z2 = 1 -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | goto [?= z0 = $z2] -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | $z2 = 0 -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | z0 = $z2 -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | if z0 == 0 goto b5 = 0 -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | b4 = 1 -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | i3 = i3 + b4 -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | b5 = 0 -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | if i3 <= b5 goto $z3 = 0 -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | $z3 = 1 -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | goto [?= z1 = $z3] -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | $z3 = 0 -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | z1 = $z3 -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | if z1 == 0 goto $r11 = new api_a.A -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | b6 = 10 -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | b7 = 20 -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | $r11 = new api_a.A -> true
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | specialinvoke $r11.<api_a.A: void <init>()>() -> true
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | r16 = $r11 -> true
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | b8 = 1 -> true
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | b2 = 5 -> true
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> true
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> true
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> true
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | virtualinvoke r16.<api_a.A: void rDec()>() -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | virtualinvoke r2.<api_a.A: void print()>() -> false
virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) | return -> false
virtualinvoke r16.<api_a.A: void rDec()>() | r1 = "Start print" -> false
virtualinvoke r16.<api_a.A: void rDec()>() | $r6 = <java.lang.System: java.io.PrintStream out> -> false
virtualinvoke r16.<api_a.A: void rDec()>() | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
virtualinvoke r16.<api_a.A: void rDec()>() | $r7 = new api_a.A -> false
virtualinvoke r16.<api_a.A: void rDec()>() | specialinvoke $r7.<api_a.A: void <init>()>() -> false
virtualinvoke r16.<api_a.A: void rDec()>() | r2 = $r7 -> false
virtualinvoke r16.<api_a.A: void rDec()>() | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
virtualinvoke r16.<api_a.A: void rDec()>() | $r8 = <java.lang.System: java.io.PrintStream out> -> false
virtualinvoke r16.<api_a.A: void rDec()>() | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
virtualinvoke r16.<api_a.A: void rDec()>() | b0 = 0 -> false
virtualinvoke r16.<api_a.A: void rDec()>() | $r9 = new testAB.MyInt -> false
virtualinvoke r16.<api_a.A: void rDec()>() | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
virtualinvoke r16.<api_a.A: void rDec()>() | r4 = $r9 -> false
virtualinvoke r16.<api_a.A: void rDec()>() | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
virtualinvoke r16.<api_a.A: void rDec()>() | $r10.<testAB.YourInt: int y> = 1 -> false
virtualinvoke r16.<api_a.A: void rDec()>() | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
virtualinvoke r16.<api_a.A: void rDec()>() | r5.<testAB.YourInt: int y> = 1 -> false
virtualinvoke r16.<api_a.A: void rDec()>() | i3 = r4.<testAB.MyInt: int x> -> false
virtualinvoke r16.<api_a.A: void rDec()>() | b1 = 0 -> false
virtualinvoke r16.<api_a.A: void rDec()>() | if i3 <= b1 goto $z2 = 0 -> false
virtualinvoke r16.<api_a.A: void rDec()>() | $z2 = 1 -> false
virtualinvoke r16.<api_a.A: void rDec()>() | goto [?= z0 = $z2] -> false
virtualinvoke r16.<api_a.A: void rDec()>() | $z2 = 0 -> false
virtualinvoke r16.<api_a.A: void rDec()>() | z0 = $z2 -> false
virtualinvoke r16.<api_a.A: void rDec()>() | if z0 == 0 goto b5 = 0 -> false
virtualinvoke r16.<api_a.A: void rDec()>() | b4 = 1 -> false
virtualinvoke r16.<api_a.A: void rDec()>() | i3 = i3 + b4 -> false
virtualinvoke r16.<api_a.A: void rDec()>() | b5 = 0 -> false
virtualinvoke r16.<api_a.A: void rDec()>() | if i3 <= b5 goto $z3 = 0 -> false
virtualinvoke r16.<api_a.A: void rDec()>() | $z3 = 1 -> false
virtualinvoke r16.<api_a.A: void rDec()>() | goto [?= z1 = $z3] -> false
virtualinvoke r16.<api_a.A: void rDec()>() | $z3 = 0 -> false
virtualinvoke r16.<api_a.A: void rDec()>() | z1 = $z3 -> false
virtualinvoke r16.<api_a.A: void rDec()>() | if z1 == 0 goto $r11 = new api_a.A -> false
virtualinvoke r16.<api_a.A: void rDec()>() | b6 = 10 -> false
virtualinvoke r16.<api_a.A: void rDec()>() | b7 = 20 -> false
virtualinvoke r16.<api_a.A: void rDec()>() | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
virtualinvoke r16.<api_a.A: void rDec()>() | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
virtualinvoke r16.<api_a.A: void rDec()>() | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
virtualinvoke r16.<api_a.A: void rDec()>() | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
virtualinvoke r16.<api_a.A: void rDec()>() | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
virtualinvoke r16.<api_a.A: void rDec()>() | $r11 = new api_a.A -> true
virtualinvoke r16.<api_a.A: void rDec()>() | specialinvoke $r11.<api_a.A: void <init>()>() -> true
virtualinvoke r16.<api_a.A: void rDec()>() | r16 = $r11 -> true
virtualinvoke r16.<api_a.A: void rDec()>() | b8 = 1 -> false
virtualinvoke r16.<api_a.A: void rDec()>() | b2 = 5 -> false
virtualinvoke r16.<api_a.A: void rDec()>() | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
virtualinvoke r16.<api_a.A: void rDec()>() | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
virtualinvoke r16.<api_a.A: void rDec()>() | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
virtualinvoke r16.<api_a.A: void rDec()>() | virtualinvoke r16.<api_a.A: void rDec()>() -> false
virtualinvoke r16.<api_a.A: void rDec()>() | virtualinvoke r2.<api_a.A: void print()>() -> false
virtualinvoke r16.<api_a.A: void rDec()>() | return -> false
virtualinvoke r2.<api_a.A: void print()>() | r1 = "Start print" -> false
virtualinvoke r2.<api_a.A: void print()>() | $r6 = <java.lang.System: java.io.PrintStream out> -> false
virtualinvoke r2.<api_a.A: void print()>() | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
virtualinvoke r2.<api_a.A: void print()>() | $r7 = new api_a.A -> true
virtualinvoke r2.<api_a.A: void print()>() | specialinvoke $r7.<api_a.A: void <init>()>() -> true
virtualinvoke r2.<api_a.A: void print()>() | r2 = $r7 -> true
virtualinvoke r2.<api_a.A: void print()>() | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
virtualinvoke r2.<api_a.A: void print()>() | $r8 = <java.lang.System: java.io.PrintStream out> -> false
virtualinvoke r2.<api_a.A: void print()>() | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
virtualinvoke r2.<api_a.A: void print()>() | b0 = 0 -> false
virtualinvoke r2.<api_a.A: void print()>() | $r9 = new testAB.MyInt -> false
virtualinvoke r2.<api_a.A: void print()>() | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
virtualinvoke r2.<api_a.A: void print()>() | r4 = $r9 -> false
virtualinvoke r2.<api_a.A: void print()>() | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
virtualinvoke r2.<api_a.A: void print()>() | $r10.<testAB.YourInt: int y> = 1 -> false
virtualinvoke r2.<api_a.A: void print()>() | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
virtualinvoke r2.<api_a.A: void print()>() | r5.<testAB.YourInt: int y> = 1 -> false
virtualinvoke r2.<api_a.A: void print()>() | i3 = r4.<testAB.MyInt: int x> -> false
virtualinvoke r2.<api_a.A: void print()>() | b1 = 0 -> false
virtualinvoke r2.<api_a.A: void print()>() | if i3 <= b1 goto $z2 = 0 -> false
virtualinvoke r2.<api_a.A: void print()>() | $z2 = 1 -> false
virtualinvoke r2.<api_a.A: void print()>() | goto [?= z0 = $z2] -> false
virtualinvoke r2.<api_a.A: void print()>() | $z2 = 0 -> false
virtualinvoke r2.<api_a.A: void print()>() | z0 = $z2 -> false
virtualinvoke r2.<api_a.A: void print()>() | if z0 == 0 goto b5 = 0 -> false
virtualinvoke r2.<api_a.A: void print()>() | b4 = 1 -> false
virtualinvoke r2.<api_a.A: void print()>() | i3 = i3 + b4 -> false
virtualinvoke r2.<api_a.A: void print()>() | b5 = 0 -> false
virtualinvoke r2.<api_a.A: void print()>() | if i3 <= b5 goto $z3 = 0 -> false
virtualinvoke r2.<api_a.A: void print()>() | $z3 = 1 -> false
virtualinvoke r2.<api_a.A: void print()>() | goto [?= z1 = $z3] -> false
virtualinvoke r2.<api_a.A: void print()>() | $z3 = 0 -> false
virtualinvoke r2.<api_a.A: void print()>() | z1 = $z3 -> false
virtualinvoke r2.<api_a.A: void print()>() | if z1 == 0 goto $r11 = new api_a.A -> false
virtualinvoke r2.<api_a.A: void print()>() | b6 = 10 -> false
virtualinvoke r2.<api_a.A: void print()>() | b7 = 20 -> false
virtualinvoke r2.<api_a.A: void print()>() | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
virtualinvoke r2.<api_a.A: void print()>() | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
virtualinvoke r2.<api_a.A: void print()>() | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
virtualinvoke r2.<api_a.A: void print()>() | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
virtualinvoke r2.<api_a.A: void print()>() | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
virtualinvoke r2.<api_a.A: void print()>() | $r11 = new api_a.A -> false
virtualinvoke r2.<api_a.A: void print()>() | specialinvoke $r11.<api_a.A: void <init>()>() -> false
virtualinvoke r2.<api_a.A: void print()>() | r16 = $r11 -> false
virtualinvoke r2.<api_a.A: void print()>() | b8 = 1 -> false
virtualinvoke r2.<api_a.A: void print()>() | b2 = 5 -> false
virtualinvoke r2.<api_a.A: void print()>() | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
virtualinvoke r2.<api_a.A: void print()>() | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
virtualinvoke r2.<api_a.A: void print()>() | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
virtualinvoke r2.<api_a.A: void print()>() | virtualinvoke r16.<api_a.A: void rDec()>() -> false
virtualinvoke r2.<api_a.A: void print()>() | virtualinvoke r2.<api_a.A: void print()>() -> false
virtualinvoke r2.<api_a.A: void print()>() | return -> false
return | r1 = "Start print" -> false
return | $r6 = <java.lang.System: java.io.PrintStream out> -> false
return | virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1) -> false
return | $r7 = new api_a.A -> false
return | specialinvoke $r7.<api_a.A: void <init>()>() -> false
return | r2 = $r7 -> false
return | r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() -> false
return | $r8 = <java.lang.System: java.io.PrintStream out> -> false
return | virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r3) -> false
return | b0 = 0 -> false
return | $r9 = new testAB.MyInt -> false
return | specialinvoke $r9.<testAB.MyInt: void <init>(int)>(b0) -> false
return | r4 = $r9 -> false
return | $r10 = r4.<testAB.MyInt: testAB.YourInt z> -> false
return | $r10.<testAB.YourInt: int y> = 1 -> false
return | r5 = virtualinvoke r4.<testAB.MyInt: testAB.YourInt getZ()>() -> false
return | r5.<testAB.YourInt: int y> = 1 -> false
return | i3 = r4.<testAB.MyInt: int x> -> false
return | b1 = 0 -> false
return | if i3 <= b1 goto $z2 = 0 -> false
return | $z2 = 1 -> true
return | goto [?= z0 = $z2] -> true
return | $z2 = 0 -> true
return | z0 = $z2 -> false
return | if z0 == 0 goto b5 = 0 -> false
return | b4 = 1 -> false
return | i3 = i3 + b4 -> false
return | b5 = 0 -> false
return | if i3 <= b5 goto $z3 = 0 -> true
return | $z3 = 1 -> false
return | goto [?= z1 = $z3] -> false
return | $z3 = 0 -> false
return | z1 = $z3 -> true
return | if z1 == 0 goto $r11 = new api_a.A -> false
return | b6 = 10 -> false
return | b7 = 20 -> false
return | $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6) -> false
return | $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7) -> false
return | virtualinvoke r2.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r14, $r15) -> false
return | virtualinvoke r2.<api_a.A: void lAdd()>() -> false
return | goto [?= virtualinvoke r2.<api_a.A: void print()>()] -> false
return | $r11 = new api_a.A -> false
return | specialinvoke $r11.<api_a.A: void <init>()>() -> false
return | r16 = $r11 -> false
return | b8 = 1 -> false
return | b2 = 5 -> false
return | $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b8) -> false
return | $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2) -> false
return | virtualinvoke r16.<api_a.A: void set(java.lang.Integer,java.lang.Integer)>($r12, $r13) -> false
return | virtualinvoke r16.<api_a.A: void rDec()>() -> false
return | virtualinvoke r2.<api_a.A: void print()>() -> false
return | return -> false
[AssignStmtPattern@line83] ExpressionType: java.lang.String, PatternType: A
[AssignStmtPattern@57] ExpressionType: java.lang.String, PatternType: A
[AssignStmtPattern@line83] ExpressionType: api_a.A, PatternType: A
[AssignStmtPattern@57] ExpressionType: api_a.A, PatternType: A
[NewPattern@line56] the name of the type: A
[MonInstruction@line64] Match success: 
	Statement: a=new A();

	Pattern: x=new A();
[AssignStmtPattern@line83] ExpressionType: java.lang.String, PatternType: A
[AssignStmtPattern@57] ExpressionType: java.lang.String, PatternType: A
[AssignStmtPattern@line83] ExpressionType: int, PatternType: A
[AssignStmtPattern@57] ExpressionType: int, PatternType: A
[AssignStmtPattern@line83] ExpressionType: testAB.MyInt, PatternType: A
[AssignStmtPattern@57] ExpressionType: testAB.MyInt, PatternType: A
[NewPattern@line56] the name of the type: MyInt
[AssignStmtPattern@57] ExpressionType: int, PatternType: A
[AssignStmtPattern@line83] ExpressionType: testAB.YourInt, PatternType: A
[AssignStmtPattern@57] ExpressionType: testAB.YourInt, PatternType: A
[AssignStmtPattern@57] ExpressionType: int, PatternType: A
[AssignStmtPattern@line83] ExpressionType: int, PatternType: A
[AssignStmtPattern@57] ExpressionType: int, PatternType: A
[AssignStmtPattern@line83] ExpressionType: int, PatternType: A
[AssignStmtPattern@57] ExpressionType: int, PatternType: A
[AssignStmtPattern@line83] ExpressionType: boolean, PatternType: A
[AssignStmtPattern@57] ExpressionType: boolean, PatternType: A
[AssignStmtPattern@line83] ExpressionType: int, PatternType: A
[AssignStmtPattern@57] ExpressionType: int, PatternType: A
[AssignStmtPattern@57] ExpressionType: int, PatternType: A
[AssignStmtPattern@line83] ExpressionType: int, PatternType: A
[AssignStmtPattern@57] ExpressionType: int, PatternType: A
[AssignStmtPattern@line83] ExpressionType: boolean, PatternType: A
[AssignStmtPattern@57] ExpressionType: boolean, PatternType: A
[AssignStmtPattern@line83] ExpressionType: int, PatternType: A
[AssignStmtPattern@57] ExpressionType: int, PatternType: A
[AssignStmtPattern@line83] ExpressionType: int, PatternType: A
[AssignStmtPattern@57] ExpressionType: int, PatternType: A
[MethodPattern@line62] ExpressionType: api_a.A, PatternType: A
[MethodPattern@line74] ExpressionType: int, PatternType: int
[MethodPattern@line74] ExpressionType: int, PatternType: int
[MonInstruction@line64] Match success: 
	Statement: a.set(u,v);

	Pattern: x.set(l,r);
[MethodPattern@line62] ExpressionType: api_a.A, PatternType: A
[MonInstruction@line64] Match success: 
	Statement: a.lAdd();

	Pattern: x.lAdd();
[AssignStmtPattern@line83] ExpressionType: api_a.A, PatternType: A
[AssignStmtPattern@57] ExpressionType: api_a.A, PatternType: A
[NewPattern@line56] the name of the type: A
[MonInstruction@line64] Match success: 
	Statement: d=new A();

	Pattern: x=new A();
[AssignStmtPattern@line83] ExpressionType: int, PatternType: A
[AssignStmtPattern@57] ExpressionType: int, PatternType: A
[AssignStmtPattern@line83] ExpressionType: int, PatternType: A
[AssignStmtPattern@57] ExpressionType: int, PatternType: A
[MethodPattern@line62] ExpressionType: api_a.A, PatternType: A
[MethodPattern@line74] ExpressionType: int, PatternType: int
[MethodPattern@line74] ExpressionType: int, PatternType: int
[MonInstruction@line64] Match success: 
	Statement: d.set(i,j);

	Pattern: x.set(l,r);
[MethodPattern@line62] ExpressionType: api_a.A, PatternType: A
[MethodPattern@line74] ExpressionType: int, PatternType: int
[MethodPattern@line74] ExpressionType: int, PatternType: int
[MonInstruction@line64] Match success: 
	Statement: d.set(i,j);

	Pattern: x.set(l,r);
[MethodPattern@line62] ExpressionType: api_a.A, PatternType: A
[MonInstruction@line64] Match success: 
	Statement: d.rDec();

	Pattern: x.rDec();
[MethodPattern@line62] ExpressionType: api_a.A, PatternType: A
[MonInstruction@line64] Match success: 
	Statement: a.print();

	Pattern: x.print();
---Matcher printed here (After clear)---
(r:j@1071, x:d@994, l:i@1069) {
	- x=new A(); <-> [994]d=new A();

	- x.set(l,r); <-> [1063]d.set(i,j);

	+ x = new B(l, r);

}

(r:v@938, x:a@252, l:u@936) {
	- x=new A(); <-> [252]a=new A();

	- x.set(l,r); <-> [930]a.set(u,v);

	+ x = new B(l, r);

}

(x:a@948) {
	- x.lAdd(); <-> [948]a.lAdd();

	+ Integer v = x.getP().getFirst();
	+ v = v+1;
	+ x.getP().setFirst(v);

}

(x:d@1081) {
	- x.rDec(); <-> [1081]d.rDec();

	+ Integer v = x.getP().getSecond();
	+ v = v-1;
	+ x.getP().setSecond(v);

}

(x:a@1101) {
	- x.print(); <-> [1101]a.print();

	+ Integer l = x.getP().getFirst();
	+ Integer r = x.getP().getSecond();
	+ System.out.println(l+" "+r);

}


java.lang.String genVar48=null;
 <=/=> a=new A();

java.lang.String genVar48=null;
 <=/=> a.set(u,v);

java.lang.String genVar48=null;
 <=/=> a=new A();

genVar48="Start print";
 <=/=> a=new A();

genVar48="Start print";
 <=/=> a.set(u,v);

genVar48="Start print";
 <=/=> a=new A();

System.out.println(genVar48);
 <===> a=new A();

System.out.println(genVar48);
 <===> a.set(u,v);

System.out.println(genVar48);
 <===> a=new A();

A a=null;
 <=/=> a=new A();

A a=null;
 <=/=> a.set(u,v);

A a=null;
 <=/=> a=new A();

java.lang.String genVar49=null;
 <=/=> a=new A();

java.lang.String genVar49=null;
 <=/=> a.set(u,v);

java.lang.String genVar49=null;
 <=/=> a=new A();

genVar49=a.toString();
 <=/=> a=new A();

genVar49=a.toString();
 <=/=> a.set(u,v);

genVar49=a.toString();
 <=/=> a=new A();

System.out.println(genVar49);
 <===> a=new A();

int genVar50=0;
 <=/=> a=new A();

int genVar50=0;
 <=/=> a.set(u,v);

int genVar50=0;
 <=/=> a=new A();

int genVar50=0;
 <=/=> System.out.println(genVar49);

genVar50=0;
 <=/=> a=new A();

genVar50=0;
 <=/=> a.set(u,v);

genVar50=0;
 <=/=> a=new A();

genVar50=0;
 <=/=> System.out.println(genVar49);

MyInt my=null;
 <=/=> a=new A();

MyInt my=null;
 <=/=> a.set(u,v);

MyInt my=null;
 <=/=> a=new A();

MyInt my=null;
 <=/=> System.out.println(genVar49);

my=new MyInt(genVar50);
 <===> a=new A();

my.z.y=1;
 <===> a=new A();

testAB.YourInt genVar51=null;
 <=/=> a=new A();

testAB.YourInt genVar51=null;
 <=/=> a.set(u,v);

testAB.YourInt genVar51=null;
 <=/=> a=new A();

testAB.YourInt genVar51=null;
 <=/=> System.out.println(genVar49);

testAB.YourInt genVar51=null;
 <=/=> my=new MyInt(genVar50);

testAB.YourInt genVar51=null;
 <=/=> my.z.y=1;

genVar51=my.getZ();
 <=/=> a=new A();

genVar51=my.getZ();
 <=/=> a.set(u,v);

genVar51=my.getZ();
 <=/=> a=new A();

genVar51=my.getZ();
 <=/=> System.out.println(genVar49);

genVar51=my.getZ();
 <=/=> my=new MyInt(genVar50);

genVar51=my.getZ();
 <=/=> my.z.y=1;

genVar51.y=1;
 <=/=> a=new A();

genVar51.y=1;
 <=/=> a.set(u,v);

genVar51.y=1;
 <=/=> a=new A();

genVar51.y=1;
 <=/=> System.out.println(genVar49);

genVar51.y=1;
 <=/=> my=new MyInt(genVar50);

genVar51.y=1;
 <=/=> my.z.y=1;

int x=0;
 <=/=> a=new A();

int x=0;
 <=/=> a.set(u,v);

int x=0;
 <=/=> a=new A();

int x=0;
 <=/=> System.out.println(genVar49);

int x=0;
 <=/=> my=new MyInt(genVar50);

int x=0;
 <=/=> my.z.y=1;

x=my.x;
 <=/=> a=new A();

x=my.x;
 <=/=> a.set(u,v);

x=my.x;
 <=/=> a=new A();

x=my.x;
 <=/=> System.out.println(genVar49);

x=my.x;
 <=/=> my=new MyInt(genVar50);

x=my.x;
 <=/=> my.z.y=1;

int genVar52=0;
 <=/=> a=new A();

int genVar52=0;
 <=/=> a.set(u,v);

int genVar52=0;
 <=/=> a=new A();

int genVar52=0;
 <=/=> System.out.println(genVar49);

int genVar52=0;
 <=/=> my=new MyInt(genVar50);

int genVar52=0;
 <=/=> my.z.y=1;

genVar52=0;
 <=/=> a=new A();

genVar52=0;
 <=/=> a.set(u,v);

genVar52=0;
 <=/=> a=new A();

genVar52=0;
 <=/=> System.out.println(genVar49);

genVar52=0;
 <=/=> my=new MyInt(genVar50);

genVar52=0;
 <=/=> my.z.y=1;

boolean genVar53=false;
 <=/=> a=new A();

boolean genVar53=false;
 <=/=> a.set(u,v);

boolean genVar53=false;
 <=/=> a=new A();

boolean genVar53=false;
 <=/=> System.out.println(genVar49);

boolean genVar53=false;
 <=/=> my=new MyInt(genVar50);

boolean genVar53=false;
 <=/=> my.z.y=1;

genVar53=x > genVar52;
 <=/=> a=new A();

genVar53=x > genVar52;
 <=/=> a.set(u,v);

genVar53=x > genVar52;
 <=/=> a=new A();

genVar53=x > genVar52;
 <=/=> System.out.println(genVar49);

genVar53=x > genVar52;
 <=/=> my=new MyInt(genVar50);

genVar53=x > genVar52;
 <=/=> my.z.y=1;

int genVar55=0;
 <=/=> a=new A();

int genVar55=0;
 <=/=> a.set(u,v);

int genVar55=0;
 <=/=> a=new A();

int genVar55=0;
 <=/=> System.out.println(genVar49);

int genVar55=0;
 <=/=> my=new MyInt(genVar50);

int genVar55=0;
 <=/=> my.z.y=1;

genVar55=0;
 <=/=> a=new A();

genVar55=0;
 <=/=> a.set(u,v);

genVar55=0;
 <=/=> a=new A();

genVar55=0;
 <=/=> System.out.println(genVar49);

genVar55=0;
 <=/=> my=new MyInt(genVar50);

genVar55=0;
 <=/=> my.z.y=1;

boolean genVar56=false;
 <=/=> a=new A();

boolean genVar56=false;
 <=/=> a.set(u,v);

boolean genVar56=false;
 <=/=> a=new A();

boolean genVar56=false;
 <=/=> System.out.println(genVar49);

boolean genVar56=false;
 <=/=> my=new MyInt(genVar50);

boolean genVar56=false;
 <=/=> my.z.y=1;

genVar56=x > genVar55;
 <=/=> a=new A();

genVar56=x > genVar55;
 <=/=> a.set(u,v);

genVar56=x > genVar55;
 <=/=> a=new A();

genVar56=x > genVar55;
 <=/=> System.out.println(genVar49);

genVar56=x > genVar55;
 <=/=> my=new MyInt(genVar50);

genVar56=x > genVar55;
 <=/=> my.z.y=1;

java.lang.String genVar48=null;
 <=/=> a=new A();

java.lang.String genVar48=null;
 <=/=> a.set(u,v);

java.lang.String genVar48=null;
 <=/=> a=new A();

java.lang.String genVar48=null;
 <=/=> System.out.println(genVar49);

java.lang.String genVar48=null;
 <=/=> my=new MyInt(genVar50);

java.lang.String genVar48=null;
 <=/=> my.z.y=1;

genVar48="Start print";
 <=/=> a=new A();

genVar48="Start print";
 <=/=> a.set(u,v);

genVar48="Start print";
 <=/=> a=new A();

genVar48="Start print";
 <=/=> System.out.println(genVar49);

genVar48="Start print";
 <=/=> my=new MyInt(genVar50);

genVar48="Start print";
 <=/=> my.z.y=1;

System.out.println(genVar48);
 <===> a=new A();

System.out.println(genVar48);
 <===> a.set(u,v);

System.out.println(genVar48);
 <===> a=new A();

System.out.println(genVar48);
 <===> System.out.println(genVar49);

System.out.println(genVar48);
 <===> my=new MyInt(genVar50);

System.out.println(genVar48);
 <===> my.z.y=1;

A a=null;
 <=/=> a=new A();

A a=null;
 <=/=> a.set(u,v);

A a=null;
 <=/=> a=new A();

A a=null;
 <=/=> System.out.println(genVar49);

A a=null;
 <=/=> my=new MyInt(genVar50);

A a=null;
 <=/=> my.z.y=1;

java.lang.String genVar49=null;
 <=/=> a=new A();

java.lang.String genVar49=null;
 <=/=> a.set(u,v);

java.lang.String genVar49=null;
 <=/=> a=new A();

java.lang.String genVar49=null;
 <=/=> System.out.println(genVar49);

java.lang.String genVar49=null;
 <=/=> my=new MyInt(genVar50);

java.lang.String genVar49=null;
 <=/=> my.z.y=1;

genVar49=a.toString();
 <=/=> a=new A();

genVar49=a.toString();
 <=/=> a.set(u,v);

genVar49=a.toString();
 <=/=> a=new A();

genVar49=a.toString();
 <=/=> System.out.println(genVar49);

genVar49=a.toString();
 <=/=> my=new MyInt(genVar50);

genVar49=a.toString();
 <=/=> my.z.y=1;

int genVar50=0;
 <=/=> a=new A();

int genVar50=0;
 <=/=> a.set(u,v);

int genVar50=0;
 <=/=> a=new A();

int genVar50=0;
 <=/=> System.out.println(genVar49);

int genVar50=0;
 <=/=> my=new MyInt(genVar50);

int genVar50=0;
 <=/=> my.z.y=1;

genVar50=0;
 <=/=> a=new A();

genVar50=0;
 <=/=> a.set(u,v);

genVar50=0;
 <=/=> a=new A();

genVar50=0;
 <=/=> System.out.println(genVar49);

genVar50=0;
 <=/=> my=new MyInt(genVar50);

genVar50=0;
 <=/=> my.z.y=1;

MyInt my=null;
 <=/=> a=new A();

MyInt my=null;
 <=/=> a.set(u,v);

MyInt my=null;
 <=/=> a=new A();

MyInt my=null;
 <=/=> System.out.println(genVar49);

MyInt my=null;
 <=/=> my=new MyInt(genVar50);

MyInt my=null;
 <=/=> my.z.y=1;

testAB.YourInt genVar51=null;
 <=/=> a=new A();

testAB.YourInt genVar51=null;
 <=/=> a.set(u,v);

testAB.YourInt genVar51=null;
 <=/=> a=new A();

testAB.YourInt genVar51=null;
 <=/=> System.out.println(genVar49);

testAB.YourInt genVar51=null;
 <=/=> my=new MyInt(genVar50);

testAB.YourInt genVar51=null;
 <=/=> my.z.y=1;

genVar51=my.getZ();
 <=/=> a=new A();

genVar51=my.getZ();
 <=/=> a.set(u,v);

genVar51=my.getZ();
 <=/=> a=new A();

genVar51=my.getZ();
 <=/=> System.out.println(genVar49);

genVar51=my.getZ();
 <=/=> my=new MyInt(genVar50);

genVar51=my.getZ();
 <=/=> my.z.y=1;

genVar51.y=1;
 <=/=> a=new A();

genVar51.y=1;
 <=/=> a.set(u,v);

genVar51.y=1;
 <=/=> a=new A();

genVar51.y=1;
 <=/=> System.out.println(genVar49);

genVar51.y=1;
 <=/=> my=new MyInt(genVar50);

genVar51.y=1;
 <=/=> my.z.y=1;

int x=0;
 <=/=> a=new A();

int x=0;
 <=/=> a.set(u,v);

int x=0;
 <=/=> a=new A();

int x=0;
 <=/=> System.out.println(genVar49);

int x=0;
 <=/=> my=new MyInt(genVar50);

int x=0;
 <=/=> my.z.y=1;

x=my.x;
 <=/=> a=new A();

x=my.x;
 <=/=> a.set(u,v);

x=my.x;
 <=/=> a=new A();

x=my.x;
 <=/=> System.out.println(genVar49);

x=my.x;
 <=/=> my=new MyInt(genVar50);

x=my.x;
 <=/=> my.z.y=1;

int genVar52=0;
 <=/=> a=new A();

int genVar52=0;
 <=/=> a.set(u,v);

int genVar52=0;
 <=/=> a=new A();

int genVar52=0;
 <=/=> System.out.println(genVar49);

int genVar52=0;
 <=/=> my=new MyInt(genVar50);

int genVar52=0;
 <=/=> my.z.y=1;

genVar52=0;
 <=/=> a=new A();

genVar52=0;
 <=/=> a.set(u,v);

genVar52=0;
 <=/=> a=new A();

genVar52=0;
 <=/=> System.out.println(genVar49);

genVar52=0;
 <=/=> my=new MyInt(genVar50);

genVar52=0;
 <=/=> my.z.y=1;

boolean genVar53=false;
 <=/=> a=new A();

boolean genVar53=false;
 <=/=> a.set(u,v);

boolean genVar53=false;
 <=/=> a=new A();

boolean genVar53=false;
 <=/=> System.out.println(genVar49);

boolean genVar53=false;
 <=/=> my=new MyInt(genVar50);

boolean genVar53=false;
 <=/=> my.z.y=1;

genVar53=x > genVar52;
 <=/=> a=new A();

genVar53=x > genVar52;
 <=/=> a.set(u,v);

genVar53=x > genVar52;
 <=/=> a=new A();

genVar53=x > genVar52;
 <=/=> System.out.println(genVar49);

genVar53=x > genVar52;
 <=/=> my=new MyInt(genVar50);

genVar53=x > genVar52;
 <=/=> my.z.y=1;

int genVar55=0;
 <=/=> a=new A();

int genVar55=0;
 <=/=> a.set(u,v);

int genVar55=0;
 <=/=> a=new A();

int genVar55=0;
 <=/=> System.out.println(genVar49);

int genVar55=0;
 <=/=> my=new MyInt(genVar50);

int genVar55=0;
 <=/=> my.z.y=1;

genVar55=0;
 <=/=> a=new A();

genVar55=0;
 <=/=> a.set(u,v);

genVar55=0;
 <=/=> a=new A();

genVar55=0;
 <=/=> System.out.println(genVar49);

genVar55=0;
 <=/=> my=new MyInt(genVar50);

genVar55=0;
 <=/=> my.z.y=1;

boolean genVar56=false;
 <=/=> a=new A();

boolean genVar56=false;
 <=/=> a.set(u,v);

boolean genVar56=false;
 <=/=> a=new A();

boolean genVar56=false;
 <=/=> System.out.println(genVar49);

boolean genVar56=false;
 <=/=> my=new MyInt(genVar50);

boolean genVar56=false;
 <=/=> my.z.y=1;

genVar56=x > genVar55;
 <=/=> a=new A();

genVar56=x > genVar55;
 <=/=> a.set(u,v);

genVar56=x > genVar55;
 <=/=> a=new A();

genVar56=x > genVar55;
 <=/=> System.out.println(genVar49);

genVar56=x > genVar55;
 <=/=> my=new MyInt(genVar50);

genVar56=x > genVar55;
 <=/=> my.z.y=1;

a=new A();
 <===> a.print();

a.set(u,v);
 <===> a.print();

package testAB;
import api_a.A;
import api_b.B;
import api_b.IntPair;
public class ABCase {
  public static void main(  String[] args){
    java.lang.String genVar48=null;
    genVar48="Start print";
    System.out.println(genVar48);
    B a=null;
    java.lang.String genVar49=null;
    genVar49=a.toString();
    int genVar50=0;
    genVar50=0;
    MyInt my=null;
    testAB.YourInt genVar51=null;
    genVar51=my.getZ();
    genVar51.y=1;
    int x=0;
    x=my.x;
    int genVar52=0;
    genVar52=0;
    boolean genVar53=false;
    genVar53=x > genVar52;
    if (genVar53) {
      int genVar54=0;
      genVar54=1;
      x=x + genVar54;
    }
    int genVar55=0;
    genVar55=0;
    boolean genVar56=false;
    genVar56=x > genVar55;
    if (genVar56) {
      System.out.println(genVar49);
      my=new MyInt(genVar50);
      my.z.y=1;
      int u=0;
      u=10;
      int v=0;
      v=20;
      a=new B(u,v);
      Integer genVar0=a.getP().getFirst();
      genVar0=genVar0 + 1;
      a.getP().setFirst(genVar0);
    }
 else {
      a=new A();
      System.out.println(genVar49);
      my=new MyInt(genVar50);
      my.z.y=1;
      B d=null;
      int i=0;
      i=1;
      int j=0;
      j=5;
      d=new B(i,j);
      Integer genVar1=d.getP().getSecond();
      genVar1=genVar1 - 1;
      d.getP().setSecond(genVar1);
    }
    Integer genVar2=a.getP().getFirst();
    Integer genVar3=a.getP().getSecond();
    System.out.println(genVar2 + " " + genVar3);
  }
}

[[Transformation End]]
